[{"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994261791520841728", "body": "@swyx I agree. It\u2019s a conscious tradeoff though and I don\u2019t see us walking back on it. React is unapologetically JavaScript.", "favoritedCount": 4, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 17:04:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994260327779971073", "body": "@JoshLovesDesign @brad_frost @reactjs AFAIK the learning curve Brad refers to is from JavaScript, not React itself. The question of whether it\u2019s worth learning (or improving) JavaScript is a valid one, but it\u2019s not related to a specific library. It\u2019s true other libraries may be less demanding on JS side though!", "favoritedCount": 3, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 16:58:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994259649162510337", "body": "Creating React educational content? Here\u2019s a free list of things you can address to help the readers \ud83d\ude42 https://t.co/6IlkXI0fLn", "favoritedCount": 126, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 16:55:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994228184882216960", "body": "@asharimh97 Read everything on https://t.co/UuHCiPFnCb and build some apps", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 14:50:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994227753644969984", "body": "@maxlynch @DaemonCahill @bmuenzenmeyer @zachleat @brad_frost This is a bit tautological if the \u201csugar\u201d is something like React itself \ud83d\ude42 But yes, I don\u2019t disagree with you!", "favoritedCount": 3, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 14:49:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994225200920219649", "body": "RT @dan_abramov: @DaemonCahill @bmuenzenmeyer @zachleat @brad_frost On React team we have a very sober understanding that we\u2019re *nowhere* c\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 14:38:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994225036688003072", "body": "@andrewingram Yes", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 14:38:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994224973597347841", "body": "@DaemonCahill @bmuenzenmeyer @zachleat @brad_frost If there was a \u201cplatform\u201d-provided solution to style encapsulation that isn\u2019t coupled to a thousand other things that come in a package of WCs I assure you React developers would embrace it.", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 14:38:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994224606973177856", "body": "@DaemonCahill @bmuenzenmeyer @zachleat @brad_frost On React team we have a very sober understanding that we\u2019re *nowhere* close the desired end state with React. \u201cWe\u2019re 1% finished\u201d as FB corporate mantra goes. It\u2019s both frustrating and liberating. I think web platform could use some of that energy too.", "favoritedCount": 52, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 14:36:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994224010245410816", "body": "@DaemonCahill @bmuenzenmeyer @zachleat @brad_frost I firmly believe the job of the \u201cplatform\u201d is to provide essential low-level capabilities, not to entrench insta-outdated patterns while the field is rapidly evolving. https://t.co/mdoOhOLc6F", "favoritedCount": 17, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 14:34:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994223497571381250", "body": "@DaemonCahill @bmuenzenmeyer @zachleat @brad_frost I think if there\u2019s anything we learned from the web, it\u2019s that we can\u2019t anticipate future paradigms. Search for perfect base UI platform API is as meaningful as search for holy grail. In the best case you end up locked into APIs that were fine but don\u2019t age well (hello UIKit!)", "favoritedCount": 3, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 14:32:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994222779984728064", "body": "@andrewingram What I mean is that there\u2019s plenty of threads like this in React community too that may be equally upsetting to folks who don\u2019t buy into some things. E.g. about web components not solving our problems.", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 14:29:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994222460106092545", "body": "I usually fall asleep listening to this guy but this song is good https://t.co/Q0C14UQ9cF", "favoritedCount": 38, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 14:28:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994218418785214466", "body": "@andrewingram That\u2019s just karma for all the web component threads \ud83d\ude2d", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 14:11:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994215925556621312", "body": "@DaemonCahill @bmuenzenmeyer @zachleat @brad_frost PS. CSS-in-JS has nothing to do with React, can we please stop mentioning it as some kind of React-specific approach? Nowhere in the docs do we advocate using it. \ud83d\ude42 Some people use it, some of them happen to be React users. It\u2019s their choice.", "favoritedCount": 15, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 14:02:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994215603929075713", "body": "@DaemonCahill @bmuenzenmeyer @zachleat @brad_frost We\u2019ve also participated in WC discussions many times. Gotta move forward. https://t.co/tplbn9mCaN", "favoritedCount": 4, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 14:00:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994215260289732608", "body": "@DaemonCahill @bmuenzenmeyer @zachleat @brad_frost If you\u2019re genuinely curious about the kinds of problems we\u2019re aiming at with React, I gave a talk about this (https://t.co/YcAcDqGhMw). I encourage you to watch it to get a good picture. I think you\u2019ll see WCs don\u2019t help with this at all.", "favoritedCount": 12, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 13:59:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994215021537316864", "body": "@DaemonCahill @bmuenzenmeyer @zachleat @brad_frost If you talk to people who are pushing for Web Components, they often say React and WCs solve orthogonal problems \ud83d\ude42 I\u2019m struggling to understand what you\u2019re asking. WCs were not solving our problems, and aren\u2019t solving the next generation of problems we\u2019re working on either.", "favoritedCount": 8, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 13:58:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994195241518469120", "body": "RT @ataylorme: Slides for my #WordPress Gutenberg talk at the Portland Meetup tonight: https://t.co/LCsIUlSfwv. Thanks to everyone who came\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 12:39:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994183833275822081", "body": "If you\u2019re like me, and \u201cleftover stuff\u201d sounds clearer than \u201cresidual heap\u201d then this guide is for you \ud83d\ude43", "favoritedCount": 49, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 11:54:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994183386909626369", "body": "In case you missed it, I wrote the first post in my new Prepack blog series yesterday. I describe what Prepack is, and fundamentals of how it works, in a plain language. https://t.co/7bp6V31Jvq", "favoritedCount": 142, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 11:52:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994176633501356032", "body": "RT @type__error: Hey tech folks. Question of the day: what would you like to see covered in a talk about how to build React modules inside\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 11:25:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994031592430587904", "body": "RT @dan_abramov: A Gentle Introduction to Prepack, Part 1 https://t.co/et8rMOverV", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 01:49:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994030488456237057", "body": "RT @waxpancake: The Chrome dev team is looking for examples of web games, interactive art, and other sites broken by Chrome's new autoplay\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 01:45:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994027119364788224", "body": "@agm1984 @brad_frost Brad doesn\u2019t need a testimonials section \ud83d\ude42", "favoritedCount": 5, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 01:31:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994026765650743296", "body": "@iSudip7 https://t.co/v9NvJUk6VR maybe?", "favoritedCount": 2, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 01:30:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994024838682566656", "body": "@bolinchris @FormidableLabs @reactjs I would also triple check what happens with React instances or DOM nodes as props. If you traverse into a React internal instance (which DOM nodes and class instances look to via a field), you risk going very deep because of how our tree is structured (many linked lists).", "favoritedCount": 2, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 01:22:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994022125508931585", "body": "@modernserf I don\u2019t think this one is about naming though? It\u2019s about making sure that something doesn\u2019t start or stop matching unexpectedly. A grep test.", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 01:11:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994021615234142209", "body": "RT @jkup: Slides from my accessibility for modern web apps talk! https://t.co/vRvUP2OhRI", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 01:09:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994020475482361856", "body": "There\u2019s been some knee-jerk reactions from different communities (incl. React) to what Brad is posting as he\u2019s exploring front-end libraries. Let\u2019s remember we can disagree about a lot and still teach each other amazing things", "favoritedCount": 109, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 01:05:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994019597840998400", "body": "Since some people get the opposite idea I want to be clear I basically learned React from @brad_frost. He didn\u2019t know that but Atomic Design was a huge influence on my understanding of how to use components, and I\u2019m forever grateful.", "favoritedCount": 251, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 01:01:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994018844317487104", "body": "RT @console: @brad_frost They're Good Styles Brent", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 00:58:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "994016697714659328", "body": "RT @ryanflorence: Tell me about the last UI feature you built and shipped.", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 09 00:50:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993992636825505792", "body": "RT @reasonml: Reason Conf in three days! https://t.co/lUpN4X5lWl", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 23:14:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993990630887084032", "body": "@FormidableLabs @reactjs That said I appreciate your effort and sharing what worked for you \ud83d\ude42 I think my reaction is primarily caused by the project name that makes it sound like this is always gonna be fast. Some disclaimers would help beginners decide if that\u2019s best for them!", "favoritedCount": 9, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 23:06:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993990242829991939", "body": "RT @dan_abramov: @FormidableLabs @reactjs Word of caution: please profile your apps before adopting deep checks. This can make performance\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 23:05:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993990126727507969", "body": "@FormidableLabs @reactjs (By the way the cases above aren\u2019t made up and are based on real scenarios when I debugged sudden slowdowns caused by deep equality checks)", "favoritedCount": 4, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 23:04:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993989702935089158", "body": "@FormidableLabs @reactjs To sum it up: yes, in some carefully considered cases where you have tight control over input types and good reasons to recreate deeply identical objects, deep equality can help. But it\u2019s not arbitrarily \u201cfast\u201d and can lead to extreme slowdowns that are difficult to track down.", "favoritedCount": 5, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 23:03:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993989227196092416", "body": "@FormidableLabs @reactjs Yet another example: component accepts some prop that deeply links to a component instance ref. React adds an internal property to a component instance in a minor release that links to very wide trees. Now your app is comparing the world on every render.", "favoritedCount": 4, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 23:01:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993988721711165440", "body": "@FormidableLabs @reactjs Another example: deep equality may often be false (why would you create new objects that are nevertheless deeply equal?). But it will still attempt to go down the whole tree. Allocating arrays for Object.keys() calls all along the way. Increases GC pressure for no benefit.", "favoritedCount": 2, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 22:59:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993988156209934338", "body": "@FormidableLabs @reactjs Example: A component uses a deep check. All is good. Eventually it accepts a \u201ctheme\u201d object prop that happens to contain a ref to another component instance. Still okay. Then that *other* component gets a field linking to a deep data structure. Now unrelated component is slow.", "favoritedCount": 2, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 22:56:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993984660005965824", "body": "@FormidableLabs @reactjs Word of caution: please profile your apps before adopting deep checks. This can make performance worse in many cases. If it works well with one component / data type, no guarantee it will work with others. Similarly it\u2019s easy to accidentally degrade perf without realizing later.", "favoritedCount": 38, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 22:43:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993974298254725121", "body": "RT @rachsmithtweets: https://t.co/E2K06cGZqy", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 22:01:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993965330669146112", "body": "@monfera Globals are a distraction. They aren\u2019t the point of the post, and aren\u2019t relevant in any way except that the tool is very young and focused on more fundamental issues right now. https://t.co/sC4XNpdinE", "favoritedCount": 2, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 21:26:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993964684519895041", "body": "@DanielHoffmann_ Stay tuned for the second part where I\u2019ll show some neat things \ud83d\ude42", "favoritedCount": 5, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 21:23:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993964355753598976", "body": "@DanielHoffmann_ JIT doesn\u2019t help with startup performance (biggest Prepack focus right now) because most such code only runs once and doesn\u2019t get warm. Also whole program optimizations can still do more than JIT.", "favoritedCount": 5, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 21:22:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993944200000491522", "body": "A Gentle Introduction to Prepack, Part 1 https://t.co/et8rMOverV", "favoritedCount": 1154, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 20:02:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993900052937674752", "body": "@bhdecker Seems like there's already correct analysis in the issue itself? The feature indeed depends on the Provider reference being shared, and won't work if that code is duplicated.", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 17:06:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993842281370324992", "body": "RT @cpojer: This year @dan_abramov @MicheleBertoli @kuvos @voideanvalue @mjesun and me will represent Facebook London at #jsconfeu will you\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 13:17:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993782123336265728", "body": "RT @trueadm: @dan_abramov @aweary @mostruash @mjackson @ken_wheeler @nikolaitillmann Here\u2019s something that was added to the wiki today that\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 09:18:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993773291163799552", "body": "@TheLarkInn @jamischarles I\u2019d actually say after \ud83d\ude42 but in practice neither because it\u2019s not ready to be used in production build systems yet", "favoritedCount": 6, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 08 08:43:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993593994516066304", "body": "@jhicks154 When you say \u201cget started\u201d you mean?...", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 20:50:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993583901904900099", "body": "@RReverser @BenLesh @rem I\u2019m sorry :-(", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 20:10:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993581219358085120", "body": "@call_me_oscar_ If this doc _was_ \u201cwhere do you start\u201d, what would you expect to find in it?", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 19:59:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993580650493071362", "body": "RT @jasonlaster11: So... full disclosure @FirefoxDevTools time travel debugging is a ways off. Probably 2019... But it is available to play\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 19:57:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993580620591828992", "body": "RT @jasonlaster11: Behold! The first @reactjs time traveling GIF \ud83c\udfa5\ud83c\udf7f\n\nWe just got support for rewinding react apps Saturday. What would you\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 19:57:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993580254303268866", "body": "Regarding this. I started writing up an intro for people like myself (no CS background) wanting to contribute to Prepack. No guarantees I\u2019ll actually finish it, but what kind of questions do you wish were answered, and would help you get started? https://t.co/Xpx0zl9vTX", "favoritedCount": 240, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 19:56:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993577736303185920", "body": "@RReverser @BenLesh Right but you can\u2019t write run() that\u2019s blissfully unaware of this. That matters at scale", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 19:46:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993576896670720001", "body": "@kentcdodds @fbjest Also do I need only forward slashes? Will my config break windows users? I never know for sure.", "favoritedCount": 15, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 19:42:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993570080192716808", "body": "@RReverser @BenLesh Nah. https://t.co/YRhTjCFO2D", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 19:15:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993567003335184384", "body": "@bitwiselover @BenLesh Oh yeah that post really helped me thanks @jlongster", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 19:03:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993566944833015808", "body": "RT @bitwiselover: @dan_abramov @BenLesh for those wondering about continuations:\n\nhttps://t.co/xV3U3k5ma8", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 19:03:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993565794331234304", "body": "@itamarok @BenLesh Maybe. That\u2019s still up for debate I think \ud83d\ude42 AFAIK different (ongoing) implementations have different opinions about this although I\u2019m not sure", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 18:58:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993565581273124864", "body": "@BenLesh Yeah. I think without a type system (like in https://t.co/jhIZLdtHxW) it might too powerful for JS itself.", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 18:57:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993564773479481348", "body": "@matthewcp @BenLesh Generators have a few problems: like async/await they\u2019re contagious (every intermediate function has to thread them through), have runtime overhead, and they\u2019re tricky to mix when you have different \u201ckinds\u201d of effects. See here: https://t.co/0bR0Id03OE", "favoritedCount": 4, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 18:54:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993564226223509504", "body": "@BenLesh Now in your test code you might have:\n\ntry {\n  run();\n}, catch AskEffect (promptText, resume) {\n  expect(promptText).toBe('Who are you?');\n  resume('Mock user');\n  expect(console.log).toBeCalledWith('Mock user');\n},", "favoritedCount": 11, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 18:52:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993563819497713664", "body": "@BenLesh function run() {\n  printName();\n},\n\nfunction printName() {\n  const name = raise AskEffect('Who are you?');\n  console.log(name);\n},\n\ntry {\n  run();\n}, catch AskEffect (promptText, resume) {\n  console.log(promptText);\n  asynchoronouslyAsk((name) =&gt; {\n    resume(name);\n  },);\n},", "favoritedCount": 25, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 18:50:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993563056927137792", "body": "@BenLesh I think that\u2019s a helpful analogy but it obscures the fact that continuation doesn\u2019t have to be synchronous. So I prefer to think about it as \u201cresumable exceptions\u201d. The handler can \u201ccontinue\u201d now or later. This is why you can implement *both* try/catch and async/await on top.", "favoritedCount": 11, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 18:47:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993556462034149376", "body": "RT @_jayphelps: Also, most info on algebraic effects talks about Eff/OCaml but Microsoft implemented them in a more C-like language called\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 18:21:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993552659746574337", "body": "@aweary @trueadm @mostruash @mjackson @ken_wheeler @nikolaitillmann I also need this. Might as well write an intro", "favoritedCount": 5, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 18:06:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993548530026532865", "body": "@keithdevens Custom CSS", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 17:50:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993532508359876608", "body": "@_joshburgess @getify @_daniel_tweets @reactjs @sebmarkbage Of course JS doesn\u2019t have these features. So we\u2019re going to \u201ccheat\u201d by introducing some constraints. When we post RFC for new APIs you\u2019ll see how. They\u2019re not ready yet so I can\u2019t point to something specific.", "favoritedCount": 2, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 16:46:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993532234555711493", "body": "@_joshburgess @getify @_daniel_tweets @reactjs @sebmarkbage I\u2019m not sure if \u201cloosely inspired\u201d is more helpful or more confusing here. The question was: \u201care future stateful React APIs functional\u201d. We believe they are, and offer a parallel to active FP research area that matches our thinking.", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 16:45:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993531176664162304", "body": "@_joshburgess @getify @_daniel_tweets @reactjs @sebmarkbage Maybe this talk would help? It shows how things like \u201crequest state\u201d can be accomplished in FP world without ceremony imposed by monads. https://t.co/YvoWTPaLXa", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 16:41:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993528179548721154", "body": "RT @swyx: @dan_abramov someone also suggested this talk from the last time this topic came up: Daan Leijen from a previous @zeithq day talk\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 16:29:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993517379249467394", "body": "@miklax \ud83d\ude02", "favoritedCount": 6, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 15:46:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993516612182511616", "body": "@BenStyles This is readable until the math starts https://t.co/sQB5LIft3P", "favoritedCount": 13, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 15:43:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993509148695367680", "body": "@hugo__df Dunno, maybe? But I used to have these years before I even started drinking coffee. In fact coffee is the first thing that helped me.", "favoritedCount": 8, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 15:13:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993508769706512385", "body": "Sometimes I get a light pulsating headache that intensifies if I move my head. Somehow drinking coffee makes it go away. What is it?", "favoritedCount": 138, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 15:12:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993503396622667783", "body": "You might\u2019ve heard the React team mentioning \u201calgebraic effects\u201d as a conceptual model for some React features. It\u2019s *not* something you need to know to use React, but if you\u2019re curious, this intro is somewhat approachable (assuming some FP knowledge): https://t.co/jhIZLdtHxW", "favoritedCount": 592, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 14:50:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993494159527960576", "body": "@gnapse We\u2019ll post when it\u2019s more fleshed out. It\u2019s going to generate a lot of discussion and bikeshedding so we want to be more confident about it first.", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 14:14:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993493718194905088", "body": "RT @left_pad: Saw @mjackson, @dan_abramov, and others talking about a problem with comments on old, closed issues so I just wrote up a shor\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 14:12:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993487959457501185", "body": "@jhlagado @Prof_Lewis @brad_frost \u201cStateless\u201d is not necessarily implied by \u201cfunctional\u201d. There are functional approaches to state. Both monads and algebraic effects give you that.", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 13:49:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993487647229308928", "body": "@jhlagado @Prof_Lewis @brad_frost See also my reply here https://t.co/l5ZPsuOw06", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 13:48:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993487417213677568", "body": "@jhlagado @Prof_Lewis @brad_frost We haven\u2019t published the details about the API. I\u2019m not sure what gives you an idea of whether or not it\u2019s functional if you haven\u2019t seen it.", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 13:47:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993484988204175360", "body": "@brad_frost @TheLarkInn Probably because of my response. Sorry about the noise. \ud83d\ude2c", "favoritedCount": 2, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 13:37:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993483494004228097", "body": "@mxstbr @erikras The downside is it penalizes people who find it difficult to get running quickly in a completely unfamiliar codebase", "favoritedCount": 16, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 13:31:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993466348427767808", "body": "@getify @_daniel_tweets @reactjs @sebmarkbage Monads are too verbose for what we need, but algebraic effects match our mental model very closely. Here\u2019s an intro: https://t.co/CGiQyQuiXM", "favoritedCount": 16, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 12:23:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993316638643585024", "body": "@getify @_daniel_tweets @reactjs @sebmarkbage Algebraic effects (conceptually, impl details might differ). Similar to https://t.co/O3mqcwMEmY", "favoritedCount": 15, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 02:28:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993312273514016768", "body": "@_daniel_tweets @getify @reactjs I think @sebmarkbage has a valid point though. Even with state they *are* based on functional programming principles. While I agree with you saying \u201cfunctional\u201d to differentiate from classes is a bit confusing, I agree with Seb that after unification, they *will* stay functional. https://t.co/evdH3W6OtQ", "favoritedCount": 5, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon May 07 02:11:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993217179356139522", "body": "@vitalii_akimov @brad_frost Can you show a snippet of the API youre trying to enable through generators?", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 19:53:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993196974320087041", "body": "That feeling when you realize the lead actor of a show you\u2019re watching, its creator, and the musician whose album you\u2019re listening to are the same person", "favoritedCount": 234, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 18:33:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993194399407529985", "body": "@snackycracky @brad_frost It\u2019ll be posted as an RFC when we\u2019re more confident in the model. Most of the work left is just trying to build it as an experiment and see if it\u2019s sufficient and if it has any big flaws.", "favoritedCount": 4, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 18:22:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993192216104448000", "body": "@snackycracky @brad_frost Nope https://t.co/fCmolbZfEQ", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 18:14:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993192074295107584", "body": "@louroboros I need the debugger. I still prefer Sublime", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 18:13:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993185671417384961", "body": "@future4christ @wesbos @reactjs https://t.co/DaNwNrsmRG", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 17:48:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993185407557885953", "body": "RT @Komemarvin: h. So I've looking for open source @reactjs projects to contribute to this month. Any one know any?\n\n#FrontEnd", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 17:47:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993182862487773184", "body": "@getify We\u2019ll just call them \u201ccomponents\u201d at that point \ud83d\ude42 \u201cFunctional\u201d only existed to differentiate from classes. Once we unify, functions will just become \u201ccomponents\u201d and classes \u201clegacy class components\u201d or something like this.", "favoritedCount": 51, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 17:37:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993182308474785793", "body": "@oleg008 @brad_frost When it\u2019s ready we\u2019ll release it, we haven\u2019t even started work on it yet", "favoritedCount": 10, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 17:34:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993182213222158338", "body": "@boriscoder No. It creates a lot of indirection. Instead we want to fix React so that these patterns are less necessary.", "favoritedCount": 4, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 17:34:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993118857727479808", "body": "@MaDDoGoS @PrettierCode @crertel Custom ESLint rules. Prettier isn\u2019t customisable", "favoritedCount": 2, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 13:22:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993115132866818052", "body": "RT @kvinklly: Ever wonder why there are two ways to make components in React? \n\nThread... https://t.co/FSJOBGMuyn", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 13:07:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993113582471610369", "body": "@Prof_Lewis @brad_frost Yeah", "favoritedCount": 8, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 13:01:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993113356323221504", "body": "@Heaven_xz @nazarov_tech I turned off mentions a long time ago because there\u2019s too many notifications", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 13:00:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993111101016559616", "body": "@brad_frost Also if this is still confusing, a simpler guidance might be to always use classes. Until you get tired of writing them, and then you can look at functional components.", "favoritedCount": 54, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 12:51:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993110885332848640", "body": "@MaDDoGoS @PrettierCode @crertel Yes. At FB we have a lot of custom rules so I can\u2019t really share a config. For open source I published this config that should have no style rules: https://t.co/o5E8vyra5r", "favoritedCount": 22, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 12:51:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993110410848022529", "body": "@Prof_Lewis @brad_frost That was always the end goal since functional components were introduced", "favoritedCount": 6, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 12:49:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993110169738465280", "body": "@acordova @brad_frost I\u2019m happy to explain \u201cwhy\u201d, ping me next time \ud83d\ude42", "favoritedCount": 5, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 12:48:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993105470754705408", "body": "@cirsca @brad_frost Here\u2019s a link https://t.co/pt9tNqtNxy", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 12:29:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993105223400001536", "body": "@cirsca @brad_frost File an issue? We can\u2019t guess what people are struggling with. Issues on documentation repo is how we fix things. It\u2019s frustrating when folks discuss how docs are obviously missing something, and then not tell that to us. Imagine if you were maintaining them. \ud83d\ude42", "favoritedCount": 10, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 12:28:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993104372912574464", "body": "@brad_frost We now have a much better idea of what a fully functional (no classes) component API could look like, and I think it\u2019s likely we\u2019ll have something you can try in a year or so. Like Ember folks say, stability without stagnation \ud83d\ude42", "favoritedCount": 50, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 12:25:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993104097518718977", "body": "@brad_frost Some history on how it ended up this way. We started with classes only. But they\u2019re pretty annoying to write for small components and have overhead. So we added functional as a lighter option. The plan was all along to converge on functional, but that needed API design work.", "favoritedCount": 33, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 12:24:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993103559297204224", "body": "@brad_frost I agree! Current guidance is: use functional components for simple things, use classes for state/lifecycle (because functional components can\u2019t express it yet). We plan to tackle unification in a year or so, then functional components will be able to do everything.", "favoritedCount": 529, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 12:21:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "993102864414400512", "body": "@crertel At FB @PrettierCode has pretty much solved this. I encourage you to give it a try. We now use linting only for actual code issues, and Prettier for auto-formatting code.", "favoritedCount": 33, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sun May 06 12:19:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992791055924912128", "body": "@keul I\u2019m not saying every comment is meaningless. Some can be helpful. The one that isn\u2019t helpful looks like \u201cI see this help me\u201d after the issue was fixed.", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 15:40:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992788419846770689", "body": "@andrewingram That makes sense but we generally don\u2019t do that in React repo. They\u2019re clearly closed with a PR fixing them.", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 15:29:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992785664050638849", "body": "Another problem with commenting on a closed issue is people feel less need to supply context. After all there\u2019s already a report and a discussion, right? So I often see comments like \u201cthis broke again\u201d. But since original problem was fixed we need all the context again!", "favoritedCount": 44, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 15:18:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992784767400767488", "body": "@ScribblingOn @left_pad It\u2019s in the air", "favoritedCount": 4, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 15:15:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992784717450801152", "body": "@ScribblingOn @left_pad Haha, hadn\u2019t seen that. I just locked an issue yesterday for this reason", "favoritedCount": 3, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 15:14:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992784218236293120", "body": "This is after unwatching all personal repos. Commenting in a closed issue = relying on notifications. You can see it won\u2019t work. https://t.co/XJjaboYRR6", "favoritedCount": 39, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 15:12:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992783549051887616", "body": "@omarcosalberto The problem is when somebody reports \u201cI have this, reopen\u201d and then 10 people upvote. But maintainers don\u2019t see it because it\u2019s in a closed issue. Whereas people think it\u2019s being ignored.", "favoritedCount": 2, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 15:10:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992782850855497731", "body": "@nazarov_tech Who would? Person who has the new problem is usually a different one from who opened the issue. So they can\u2019t reopen. Why don\u2019t maintainers reopen? Because they don\u2019t see the issue. It would require opening every single notification (I have thousands).", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 15:07:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992782317310697472", "body": "And that doesn\u2019t guarantee anyone will read it either because it will only show up in an ephemeral list of notifications. Unlike an open issue which is listed.", "favoritedCount": 6, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 15:05:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992781961591746560", "body": "@luisrudge Yes, I don\u2019t think any of the maintainers have read your comment. It\u2019s hard enough to keep track of open issues. Hundreds of notifications. I almost don\u2019t read closed ones.", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 15:03:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992774713540796416", "body": "One exception: when you provide a reproducing case right in your comment then it\u2019s fine. Because then it\u2019s immediately clear if issue needs reopening. But if you require back-and-forth (\u201cI think this is still broken\u201d, no details) then file a new one please.", "favoritedCount": 18, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 14:35:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992774120172552192", "body": "Open/closed distinction is the one thing that makes tracking issues not entirely hopeless. Trying to get attention on closed issue adds too much to maintainer\u2019s mental load.", "favoritedCount": 30, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 14:32:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992773032325341184", "body": "Tip: commenting on closed issues or upvoting comments on them is usually futile. You\u2019re lucky it somebody even sees them. Instead, file a new issue (and then you can link to it from the old one).", "favoritedCount": 239, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 14:28:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992736419566247936", "body": "RT @SkinnerPm: Well. There\u2019s this. Me in the New Yorker. Easily the most terrifying thing I\u2019ve ever done. But I wanted to highlight local p\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 12:03:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992735796745646080", "body": "*after a few months of not working", "favoritedCount": 212, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 12:00:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992597779594797056", "body": "That feeling when it works for the first time", "favoritedCount": 1369, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 02:52:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992565564387323906", "body": "RT @sebmarkbage: How do you work well on complex projects across offices in different time zones? Step 1: @trueadm Step 2: Done. https://t.\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 00:44:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992561865011159040", "body": "@garyjense At least some of your target audience probably went through a hippie zen phase in their teens. At this point if they\u2019re skipping it\u2019s not because they need an inspirational quote, but because they\u2019re being lazy jackasses who are forgetting this is actually quite down-to-earth", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 00:29:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992560692338274304", "body": "@garyjense I\u2019m just teasing \ud83d\ude42 I think the texts could use a bit more self-awareness though, to avoid sounding like New Age self-help book quotes", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 00:24:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992559963171119104", "body": "@jrbalsano Did you try following the link that was in the error? It tells you what the error is. https://t.co/hyduNCWQU6 https://t.co/qWT1JxMsp1", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Sat May 05 00:21:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992445174612709376", "body": "@dev_abood @brian_d_vaughn @TatumCreative @jlongster @reactjs You\u2019ve seen the \u201csource\u201d in the demo \ud83d\ude42 the important part isn\u2019t the source but getting the React parts of that working correctly, and API solid. That\u2019ll take some time. Without that sharing the project doesn\u2019t give you anything", "favoritedCount": 2, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Fri May 04 16:45:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992437519789842434", "body": "RT @brian_d_vaughn: I recently did a podcast with the folks from @codingzeal about React 16.3 and some other related topics. Here it is if\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Fri May 04 16:15:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992342112552325120", "body": "@ForceOfChill I don\u2019t recommend manually upgrading, there are many non-obvious things that can break. We welcome contributors though!", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Fri May 04 09:56:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992341880875704320", "body": "@ForceOfChill You can use 2.x alphas if you like to live on bleeding edge :-) https://t.co/gKPwNLenOT", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Fri May 04 09:55:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992339848160776192", "body": "RT @brian_d_vaughn: \ud83d\udc4b Hi @reactjs developers.\n\n\u2022 How do you profile your apps?\n\u2022 What techniques do you use to determine which of your comp\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Fri May 04 09:47:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992226575461515264", "body": "What was the last time you laughed really hard for a silly reason?", "favoritedCount": 15, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Fri May 04 02:17:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992226406368186368", "body": "My wife and I were once on a long bus trip and there was an embedded movie player. We watched Lucy. At some point there were a bunch of police cars crashing into each other, and we were like lol this looks like a Luc Besson movie. We laughed so fucking hard when credits rolled \ud83d\ude02", "favoritedCount": 72, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Fri May 04 02:16:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992186842467401728", "body": "RT @left_pad: \ud83d\ude42\u00a0So @github shipped some changes to issue creation/templates! Here's @babeljs atm:\n\n- This is definitely better than before\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Thu May 03 23:39:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992075584346968064", "body": "Kanye, log off https://t.co/oFtF5V8kku", "favoritedCount": 398, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Thu May 03 16:17:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992074441801850882", "body": "@langolf @BeerJS_London \u041f\u0440\u0438\u0431\u043e\u043b\u0435\u043b, \u043c\u043e\u0436\u0435\u0442 next time", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Thu May 03 16:12:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992060987791601664", "body": "@ken_wheeler I appreciate the F -&gt; C conversion", "favoritedCount": 6, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Thu May 03 15:19:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "992027185719410688", "body": "RT @lobe_ai: Introducing Lobe! An easy-to-use visual tool that lets you build, train, and ship custom deep learning models without writing\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Thu May 03 13:04:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991860428568489984", "body": "@Rich_Harris @_developit @trueadm @harmanmanchanda @TheLarkInn @unruffledBeaver @reactjs @vuejs @sveltejs @preactjs @riotjs_ @youyuxi @MarkoDevTeam Somebody\u2019s gotta boil the ocean if we don\u2019t want to get stuck in a local maximum", "favoritedCount": 3, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Thu May 03 02:02:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991843056906158080", "body": "@KDCoder @code It\u2019s faster and gets small details right", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Thu May 03 00:53:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991823664797704192", "body": "@WhatIfWeDigDeep @code Atom\u2019s way too slow for me", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 02 23:36:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991823476683046918", "body": "@albinotonnina 1. Nothing wrong with using classes until functional components support more\n\n2. There\u2019s a huge misconception that FB codebases are \u201cstrict\u201d in questions like this. \u201cBest practices\u201d in the community are much more opinionated than the kind of code FB engineers write", "favoritedCount": 2, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 02 23:35:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991664941768892416", "body": "@floydophone @Rich_Harris @jamesreggio @stevekrenzel I think Relay Modern does this?", "favoritedCount": 5, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 02 13:05:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991663603286794242", "body": "@trueadm @TheLarkInn @unruffledBeaver @harmanmanchanda @reactjs @vuejs @sveltejs @preactjs @riotjs_ @youyuxi @_developit @Rich_Harris @MarkoDevTeam @TheLarkInn won\u2019t like your tweets", "favoritedCount": 13, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 02 13:00:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991663383287091201", "body": "@matthewcp @harmanmanchanda @reactjs @vuejs @sveltejs @preactjs @riotjs_ @youyuxi @_developit @Rich_Harris @MarkoDevTeam @TheLarkInn Yep! And I think it\u2019s great people have options for different kinds of projects/constraints/tastes. I don\u2019t think React should try to cater to everybody\u2014let it focus on the side of the tradeoff it does best, and those who aren\u2019t happy with it can use something else. \ud83d\ude42", "favoritedCount": 8, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 02 12:59:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991662335692627968", "body": "@matthewcp @harmanmanchanda @reactjs @vuejs @sveltejs @preactjs @riotjs_ @youyuxi @_developit @Rich_Harris @MarkoDevTeam @TheLarkInn Relying on the host language for preparing the render output (imports, scoping, conditions, loops, functional composition) is a core principle of React. That\u2019s why I think it doesn\u2019t make sense for React to adopt HTMLX, which was the original question. That\u2019s all I wanted to say.", "favoritedCount": 6, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 02 12:54:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991660869066088448", "body": "@matthewcp @harmanmanchanda @reactjs @vuejs @sveltejs @preactjs @riotjs_ @youyuxi @_developit @Rich_Harris @MarkoDevTeam @TheLarkInn I agree \u201cstring based DSL\u201d is a poor way to word it. What I mean is: \u201ca DSL that has its own control flow, loops, and scoping instead of letting the host language do that\u201d. I think it\u2019s hard to look at JSX and HTMLX and not see that they\u2019re very different in that respect.", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 02 12:49:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991659689950744581", "body": "@matthewcp @harmanmanchanda @reactjs @vuejs @sveltejs @preactjs @riotjs_ @youyuxi @_developit @Rich_Harris @MarkoDevTeam @TheLarkInn I\u2019ll mute this thread because it\u2019s impossible to keep up with the discussion and I don\u2019t want to convince anyone JSX is amazing (I don\u2019t even like it *that* much). My point is React builds on the idea of using control flow from host language to compose its primitives. That\u2019s all.", "favoritedCount": 5, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 02 12:44:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991658451007918080", "body": "@matthewcp @harmanmanchanda @reactjs @vuejs @sveltejs @preactjs @riotjs_ @youyuxi @_developit @Rich_Harris @MarkoDevTeam @TheLarkInn That\u2019s why I hate these arguments \ud83d\ude42 JSX is not \u201cmore sophisticated\u201c, my entire point is it\u2019s *less* sophisticated and that\u2019s what I like about it. Everything in &lt;&gt; is text until we meet {},, where everything inside is JS expression again. It doesn\u2019t attempt to do more.", "favoritedCount": 4, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 02 12:39:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991640201360478208", "body": "@danielgut ?", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 02 11:27:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991497131755212806", "body": "@jamiebuilds @carlos_paelinck This is not the case, the article was updated with a comment https://t.co/V3qpgsWcib https://t.co/mC2bzXHJj5", "favoritedCount": 5, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Wed May 02 01:58:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991362612859371522", "body": "RT @fbOpenSource: As #f8 is set to begin today, we have  launched the first version of our new website https://t.co/Rv7P5ru386, showcasing\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 01 17:04:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991348226715418627", "body": "@harmanmanchanda @reactjs @vuejs @sveltejs @preactjs @riotjs_ @youyuxi @_developit @Rich_Harris @MarkoDevTeam @TheLarkInn I\u2019ve seen it, that\u2019s exactly what I mean by a string-based DSL. For example it has its own if/else. Again, it\u2019s fine if you prefer that but React is pretty much based on the opposite premise.", "favoritedCount": 30, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 01 16:06:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991347789937422336", "body": "@kbarasab I wrote about this here https://t.co/7moQRGv89p", "favoritedCount": 4, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 01 16:05:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991339818176122880", "body": "@pmhsfelix @reactjs StackOverflow (and ping me here with a link) or issues in https://t.co/WuiSI5lsfy", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 01 15:33:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991335844261842944", "body": "@samkoaster @code I think it\u2019s whitespace", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 01 15:17:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991335539163979776", "body": "@harmanmanchanda @reactjs @vuejs @sveltejs @preactjs @riotjs_ @youyuxi @_developit @Rich_Harris @MarkoDevTeam @TheLarkInn It\u2019s cool that some people prefer more constrained dialects, and Vue/Ember/others serve them well. I think it makes sense for React to focus on providing a JS-first solution instead of giving up on its vision.", "favoritedCount": 36, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 01 15:16:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991334993262673920", "body": "@harmanmanchanda @reactjs @vuejs @sveltejs @preactjs @riotjs_ @youyuxi @_developit @Rich_Harris @MarkoDevTeam @TheLarkInn Sorry, I\u2019m not seeing how adding a string-based DSL would help React users. React is intentionally based on using JS for control flow and rendering. It may be unusual at first but your learnings apply outside of React. I think this tradeoff makes sense.", "favoritedCount": 147, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 01 15:14:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991333597419397126", "body": "@igrigorik @tdresser @toddreifsteck @bz_moz Sorry, I meant the visualisation specifically. FF supports user timing but doesn\u2019t show them in the timeline so it\u2019s not very useful to us. I can check specifically if perf differs though?", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 01 15:08:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991331264471977984", "body": "@timdorr At FB this is called Product Infrastructure although it\u2019s not a title but an org division. (We don\u2019t divide eng roles into titles)", "favoritedCount": 13, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 01 14:59:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991330798040178689", "body": "RT @jlongster: Enjoying this last week! If you want to hear about what I've been working on and various tech decisions around React/Electro\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 01 14:57:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991330757011562496", "body": "RT @rwieruch: Releasing \"a complete React with Apollo and GraphQL Tutorial\" for building a GitHub client \ud83d\ude80\n\nApollo Client without and with\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 01 14:57:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991285035482386432", "body": "RT @monicalent: Making the final updates to the talk I'm giving at @ReactVienna on Thursday \u269b\ufe0f\ud83c\udde6\ud83c\uddf9 Come by if you'd like to learn about creat\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 01 11:55:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991114251975749633", "body": "Albums with replay value as good as Blonde?", "favoritedCount": 95, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Tue May 01 00:37:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991072456478810119", "body": "@_baxuz @rauschma In other words inheritance tends to make deleting code hard (because it\u2019s a very strong form of coupling), and deleting is how you get rid of bad ideas.", "favoritedCount": 10, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 21:51:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991072229814423553", "body": "@_baxuz @rauschma I think the problem people are alluding to is that often you don\u2019t know what you really need until *after* you\u2019ve built a hierarchy (based on your initial intuitive understanding) and at that point it\u2019s too much pain to change.", "favoritedCount": 3, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 21:50:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991066055421423621", "body": "@rahulballal7 I often find FP-heavy code hard to read. Didn\u2019t mean to imply it\u2019s *the* solution. I just found it curious that some languages use inheritance as *primary* code reuse mechanism, and that it *didn\u2019t* seem odd to me ten years ago.", "favoritedCount": 11, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 21:25:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991065018606157824", "body": "@macsikora React explicitly discourages inheritance for code reuse of React components. Regarding iOS/Android/DOM, you might like this talk. It has a section on inheritance too. https://t.co/rVL3JnUv0U", "favoritedCount": 19, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 21:21:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991064175127531520", "body": "@rauschma @intelligibabble I hope this gives some context \ud83d\ude42", "favoritedCount": 6, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 21:18:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991064093426581506", "body": "@rauschma @intelligibabble I think hundreds of thousands of people who worked with React and didn\u2019t find the need to use inheritance with it also had this experience. My tweet poked fun at the observation that after living like this, it seems surreal just *how* entrenched inheritance is in some places.", "favoritedCount": 11, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 21:17:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991063811951136771", "body": "@rauschma @intelligibabble In conclusion, while working *with* React, I wrote code without resorting to inheritance and it turned out to be some of the easiest-to-maintain/delete code I wrote. And it wasn\u2019t purist FP either, just normal JS code. And then I had the same experience working *on* React itself.", "favoritedCount": 7, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 21:16:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991062851732279296", "body": "@rauschma Why is composition better for React use case? I think @intelligibabble articulated the most common problem in his talk (direct link to the relevant section): https://t.co/oEL4e8zGXO", "favoritedCount": 43, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 21:12:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991062229578641409", "body": "@rauschma That was about React itself. But there are similar parallels in the code written by React users. I documented two most common cases for why people try to use inheritance in React, and better alternatives, here: https://t.co/A7Y2V8AbsW", "favoritedCount": 20, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 21:10:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991061860609912835", "body": "@rauschma The problem is largely cultural. When thinking in terms of inheritance the tendency is to express the objects in a way that models how we intuitively *talk* about them. Which is often not the most change-friendly way. Focusing on right data structure from the start fixed that.", "favoritedCount": 18, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 21:08:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991060804618346497", "body": "@rauschma We coded ourselves in the corner with that hierarchy. It was very hard to add features or change how it works. I think the new (post-Fiber) codebase is much more flexible. In the new one, we have a single main data type but it specializes some fields as a tagged union.", "favoritedCount": 8, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 21:04:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "991059565151182848", "body": "@rauschma I described it here: https://t.co/470dAFmIuE. These are implementation notes of React 15 (and earlier), i.e. before the rewrite. Code was reused through mixins but conceptually there was a class inheritance tree.", "favoritedCount": 24, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 20:59:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990989827981094912", "body": "We all know inheritance is full of pitfalls and often produces code that evolves poorly when requirements change. Imagine if there were languages designed around it being the primary code reuse mechanism. Imagine if they were mainstream! Hmm \ud83e\udd14", "favoritedCount": 602, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 16:22:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990978218432913411", "body": "@Heaven_xz It\u2019s not out yet and Andrew made a prototype two days ago so no, there are no benchmarks. This isn\u2019t strictly about being \u201cfaster\u201d than regular SSR but about making it possible to wait for data *on the server* without blocking the output.", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 15:36:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990977766442053632", "body": "@Raed667 @wesbos @khaled_garbaya task.ref check seems useless, it's your code so you should be able to make sure it's always there", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 15:34:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990977553560145921", "body": "@Raed667 @wesbos @khaled_garbaya Maybe use callback refs? I would avoid putting refs into data objects. https://t.co/g5QO0cYGWQ", "favoritedCount": 9, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 15:33:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990975785543569408", "body": "@Heaven_xz There\u2019s plenty SSR vs client-only rendering benchmarks, not sure what you\u2019re asking about specifically", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 15:26:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990973176900440064", "body": "@khaled_garbaya @Raed667 @wesbos @0xStarcat Please see my response, adding Lodash doesn\u2019t solve the root problem (IMO it olny obscures it) https://t.co/Wmv4BjV29d", "favoritedCount": 3, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 15:16:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990973023510548480", "body": "@kgra4ev @code I can take PRs but not going to do this myself", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 15:15:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990972912193671168", "body": "@Raed667 @wesbos @khaled_garbaya Why do you put refs inside data? Why are they nullable?", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 15:15:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990972787157274624", "body": "@Raed667 @wesbos @khaled_garbaya I think the whole premise that you have a nullable (?) ref object inside an array in props is not great. The awkward access seems like a symptom of awkward object structure, not the main problem.", "favoritedCount": 16, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 15:14:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990947489103654912", "body": "@Heaven_xz The point is you don\u2019t need to download your app\u2019s code (which is probably 20+ times bigger than those snippets)", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 13:34:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990947023393345536", "body": "@bitwiselover Probably just to indicate which variable name corresponds to the spec text", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 13:32:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990903090151919616", "body": "@HardeepAsrani What\u2019s the point?", "favoritedCount": 0, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 10:38:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990902423987412993", "body": "@xoawesome @code I provide a full refund for the first 90 days, no questions asked", "favoritedCount": 12, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 10:35:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990900048123883520", "body": "@RomaDatsyuk I like large font size for code", "favoritedCount": 2, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 10:25:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990899811825147907", "body": "@ken_wheeler @code Lol right? So many buttons", "favoritedCount": 8, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 10:24:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990899646297001989", "body": "@_reznord @code That's a bit too thin on my monitor", "favoritedCount": 1, "location": "London, England", "followers": 117922, "friends": 808, "timeStamp": "Mon Apr 30 10:24:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990899646297001989", "body": "@_reznord @code That's a bit too thin on my monitor", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 10:24:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990898760430575616", "body": "@ken_wheeler @code I kinda expect tag names to be yellow, haven\u2019t thought much about what else to do there. Not working? Make sure you\u2019re using Babel Sublime syntax.", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 10:20:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990894693998383104", "body": "Published my @code theme today \ud83d\ude42 It\u2019s focused on JS, happy to take PRs that fix it for other languages. https://t.co/Imne8504o2", "favoritedCount": 841, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 10:04:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990877091603402752", "body": "@dgrubelic https://t.co/aZ78Xn9TS4", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 08:54:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990874969210064896", "body": "@MatiDastugue Not sure what you mean. This *is* a Code theme", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 08:46:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990778230167801856", "body": "@rachelnabors @code https://t.co/KSPOeyKtUl, follow the flow suggested on the page from the top. Start by customising workspace inline in settings, when you\u2019re comfortable make a theme", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 02:21:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990775098432000000", "body": "RT @dan_abramov: Okay, it\u2019s on GitHub: https://t.co/HaYZMVu1GR. Not released yet but you can send fixes \ud83d\ude42 Everything except JS is probably\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 02:09:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990774987274489856", "body": "@rachelnabors @code I forked an existing one and fiddled with it until I figured out how they worked. Official Code documentation about creating a theme is also good. Still don\u2019t know how to publish tho", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 02:08:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990774348570152960", "body": "Okay, it\u2019s on GitHub: https://t.co/HaYZMVu1GR. Not released yet but you can send fixes \ud83d\ude42 Everything except JS is probably very broken", "favoritedCount": 93, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 02:06:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990771641268482048", "body": "@colohead3r Maybe. I don\u2019t care about that one.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 01:55:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990769039927644161", "body": "@frankalbenesius @code Too many colors", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 01:45:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990768800717996032", "body": "The accents aren\u2019t random, instead of highlighting all syntax I chose to only highlight things that often confuse me (loops, early exits, comparisons) https://t.co/ogBgPngFiK", "favoritedCount": 59, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 01:44:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990765928299319296", "body": "@ronperris What buttons?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 01:32:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990765809101402113", "body": "@jayfallon I found icons too noisy and I use quick open anyway", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 01:32:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990765684354355203", "body": "@splitinfinities Got this idea from https://t.co/Nnz8Ys9WLK. I don\u2019t care for keywords except for return/throw/break/continue (which are highlighted).", "favoritedCount": 9, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 01:32:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990765107012620290", "body": "Should I bother publishing this @code theme? https://t.co/6HF3Xzci6U", "favoritedCount": 98, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 01:29:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990764624898293761", "body": "Actually no, this is the right version. https://t.co/KcQRNV9Lga", "favoritedCount": 73, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 01:27:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990763119541669888", "body": "So I got sucked into this hole and ended up making my own theme https://t.co/atXMnPLRKS", "favoritedCount": 53, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 30 01:21:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990679670927581195", "body": "@MarkFunk The funny thing about Atom is that I\u2019m so used to it being slow that I couldn\u2019t use Atom\u2019s theme in VSCode either: it felt slower by association", "favoritedCount": 8, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 19:50:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990672994325483520", "body": "@idrawdesigns @code I just overrode a bunch of settings manually. Might turn this into a theme", "favoritedCount": 18, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 19:23:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990669488889712641", "body": "@vscodetips @denvercoder @hfjallemark @code As a tool builder I totally understand the resistance to exposing footguns that can be broken by updates. And yet..", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 19:09:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990669228138168320", "body": "OK. This is legit. I\u2019m happy. https://t.co/miTrZFMh1r", "favoritedCount": 81, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 19:08:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990668535939719169", "body": "@MrAhmadAwais @code Yeah, also installed an extension that removes \"Unsupported\" from title bar, lol", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 19:05:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990666218171494400", "body": "@ken_wheeler Never occurred to me. Good idea.", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 18:56:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990666025657143296", "body": "@MrAhmadAwais omg awesome. How do you find those class names?", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 18:56:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990665783897460737", "body": "@ken_wheeler You can go all the way then https://t.co/kZ5B1qZh5o", "favoritedCount": 26, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 18:55:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990663263842197504", "body": "@urbanwhaleshark I\u2019m not a native speaker so I wasn\u2019t aware what the word means. In either case the theme itself looks like a port/copypaste of Oceanic Next.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 18:45:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990660626627391488", "body": "@castanyer_ Not perfect but I got pretty close", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 18:34:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990660230173413376", "body": "Now if only I could hide those icon buttons \ud83e\udd28", "favoritedCount": 18, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 18:32:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990660004419076096", "body": "@kdsopasir Oh wait, no, that\u2019s the wrong one. It\u2019s in View -&gt; Hide Activity Bar", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 18:32:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990659891986665479", "body": "@kdsopasir Cmd+B", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 18:31:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990659655822204929", "body": "@hfjallemark So that\u2019s VS code? Or Atom? If it\u2019s Code, is there a way to apply custom CSS without patching files that would be overwritten by upgrades?", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 18:30:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990658674698936323", "body": "Meh https://t.co/9MHTZovi1X", "favoritedCount": 26, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 18:26:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990616935086936064", "body": "@julesdotnyc Good debugger", "favoritedCount": 12, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 15:40:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990616824990633984", "body": "@victorvation Spacegray + tweaked Oceanic Next", "favoritedCount": 16, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 15:40:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990605808055541760", "body": "@pomidore I love this. Is there a similar dark theme?", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 14:56:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990605296807669763", "body": "@RReverser omg thanks", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 14:54:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990604113850372096", "body": "@MaxRovensky This one is pretty good but tabs looks a bit weird. Compare: https://t.co/vkJ2GZw3Oh", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 14:49:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990603449606787072", "body": "@dvdgee I don\u2019t know why it\u2019s written this way", "favoritedCount": 8, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 14:47:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990602085740707840", "body": "@andrestaltz Oh I need to try that!", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 14:41:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990600927865425923", "body": "Particularly, I\u2019m looking for a theme that de-emphasizes the editor chrome. VS Code is full of borders and shade changes, I want none of that.", "favoritedCount": 81, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 14:37:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990600204373184512", "body": "Send me your favorite VS Code themes. Even though I prefer Sublime I have to spend majority of my time in Code these days so I want to make it look nice. Here\u2019s my Sublime setup for reference: https://t.co/tlvyVsfuRJ", "favoritedCount": 778, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 14:34:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990588246357872640", "body": "@wachunei If I were you in your shoes I think I\u2019d just have &lt;Section&gt; accept items as a prop, and have items be a plain array of JS objects. Let &lt;Section&gt; take care of rendering them.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 13:46:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990588072201990145", "body": "@wachunei You can read about it here (https://t.co/y2h4exJKmU) but it\u2019s super experimental and we might scrap it in favor of something better", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 13:46:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990583719701381120", "body": "@wachunei It makes more sense if you imagine fragments might support event handlers on them in the future. &lt;Fragment onClick&gt;. In that case it wouldn't make sense for R.Children to \"lose\" them.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 13:28:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990515383231709184", "body": "RT @zeithq: https://t.co/eVihl1Age0 - The new home for Next.js, its documentation, and a showcase of beautiful applications using it https:\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 08:57:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990514129420144640", "body": "@wachunei OK, I see now, you want to mark the first item specially. We don\u2019t have a good solution for this right now. \ud83d\ude10 There is a highly experimental \u201ccall return\u201d API but it will break so don\u2019t use it. This problem is on our minds!", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 08:52:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990418080068263936", "body": "@wachunei https://t.co/34LvCS9KFi", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 02:30:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990417967556059136", "body": "@wachunei No, use context", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 02:30:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990417848278372354", "body": "@wachunei This means cloneElement() is fundamentally a bad API for \u201cinjecting\u201d contextual data like this. Try using context instead?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 02:29:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990417692032163840", "body": "@wachunei I think this exposes an existing problem with your API. Can\u2019t wrap Item in MyFancyItem unless you remember to pass down all props (because one gets injected with a clone).", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 02:29:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990417288917585920", "body": "@wachunei You shouldn\u2019t expect https://t.co/oe3AaDx45Z() to go \u201cinside\u201d a Fragment.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 02:27:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990415187927883776", "body": "Senator, we run monads", "favoritedCount": 561, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 02:19:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990401159356706816", "body": "@jbrancha @swyx @aweary @acdlite Conceptually this is similar (although more higher-level and complex) https://t.co/irH4QgGR5l", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 01:23:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990400594367086593", "body": "@matthewcp @swyx @aweary @acdlite They contain blocks of HTML to insert and some metadata about which loading placeholder to replace with it. There\u2019s a tiny runtime (a few hundred bytes) that\u2019s embedded in the first &lt;script&gt; tag that does the manipulation.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 01:21:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990394601302261760", "body": "@ChrisEsplin @swyx @aweary @acdlite Note this isn\u2019t an authoring format, you still write code in JS. HTML just happens to be a streaming delivery mechanism for first render(s) behind the scenes.", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 00:57:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990393516554702849", "body": "@swyx @aweary @acdlite cc @matthewcp I think you\u2019ve been asking about \u201creal\u201d streaming rendering in React, hope this counts :-)", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 00:53:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990392451134316544", "body": "@giuseppegurgone @aweary @swyx @acdlite Not exactly but inspired by that.", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 00:48:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990391478085091328", "body": "@swyx @aweary @acdlite &lt;html&gt; can include &lt;script&gt; tags (that\u2019s how any client-side app works). But instead of using &lt;script&gt; tags to deliver application *logic* we use it to deliver streamed *markup*. \ud83d\ude42 Not doing anything new with &lt;html&gt; itself.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 00:45:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990389283830882304", "body": "RT @aweary: great talk by on React Suspense and SSR by @acdlite at #zeitday! my mind was blown when he said ReactDOM wasn't running on the\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 00:36:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990389001147371520", "body": "@swyx @aweary @acdlite From server\u2019s point of view, there are multiple data fetching operations. You wouldn\u2019t see those in Network tab because they\u2019re on the server. From browser\u2019s point of view, it\u2019s just downloading HTML. That HTML includes &lt;script&gt; tags that redraw some parts as they\u2019re streamed in.", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 00:35:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990388716769349632", "body": "@swyx @aweary @acdlite The network console would show a single HTML file being streamed. Which contains a bunch of &lt;script&gt; blocks with embedded HTML in them. That\u2019s basically the \u201cpage source\u201d Andrew showed.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 00:34:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990388398916587520", "body": "@TheLarkInn @ryanflorence I think @TheLarkInn is talking about the ecosystem (and tendency for purpose-built libraries to go in and out of fashion), and @ryanflorence is talking about the stability of the core API itself", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 00:32:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990388105759940609", "body": "@aweary @swyx @acdlite Not exactly a new idea. https://t.co/irH4QgGR5l", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 00:31:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990387237568352256", "body": "@swyx @aweary @acdlite So, to be extra clear, while the *server* is still fetching reviews, the *browser* can already show details (and a placeholder for reviews). And then the server can stream HTML for reviews.", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 00:28:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990384868474449920", "body": "@swyx @aweary @acdlite The data fetching happens on the server. But it\u2019s still not sent down as one chunk. The HTML \u201cpieces\u201d get sent down as they\u2019re ready. In the \u201cslow\u201d example, first we get HTML of placeholder, then HTML of details, then HTML of reviews. If I understand it right.", "favoritedCount": 11, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 00:18:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990384025335488512", "body": "@swyx @aweary @acdlite It\u2019s not sent as one chunk :-)", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 29 00:15:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990376645876944897", "body": "@acdlite It\u2019s starting!!", "favoritedCount": 13, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 28 23:46:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990372389040123907", "body": "@ryanflorence Now I\u2019m curious what that is", "favoritedCount": 6, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 28 23:29:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990368225849470976", "body": "Looks like @acdlite\u2019s talk is going to start soon. Don\u2019t miss it! Live stream: https://t.co/nNxZFiIcTH", "favoritedCount": 91, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 28 23:12:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990364339776425991", "body": "@iplayitofflegit https://t.co/Ojwl5pjk0q\n\nbut you won\u2019t get much of tree shaking React. The most you\u2019ll realisttically shake is React.Children utilities which are not much.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 28 22:57:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990312332210376705", "body": "Idea for a coding screencast series: \u201cI\u2019m Doing It Wrong\u201d. Show na\u00efve wrong approaches, how they break down, then fix. https://t.co/BCXdgbXNr9", "favoritedCount": 699, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 28 19:30:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990311525498925056", "body": "RT @zeithq: Introducing MDX - A fully-featured MDX parser, loader and JSX renderer for ambitious projects\n\nhttps://t.co/F7wMdUfpqo https://\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 28 19:27:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990266890806349825", "body": "Live in 90 minutes https://t.co/0QbQ7Jgge4", "favoritedCount": 41, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 28 16:29:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990259275758006273", "body": "@chantastic I wait until everybody in the office leaves and get a large cup of tea. Probably not the best strategy", "favoritedCount": 90, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 28 15:59:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990258920290750471", "body": "@gcollazo Lol", "favoritedCount": 9, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 28 15:58:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990220034655051777", "body": "@soniagupta504 Rituals help", "favoritedCount": 48, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 28 13:23:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990219830782545920", "body": "Is there any explanation of Widening (in context of Abstract Interpretation) that is written in a plain language without mathematical terms?", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 28 13:22:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990217946231427077", "body": "Something I thought would go away with time but it doesn\u2019t: the resistance to start working on a problem. I have to actively force myself because the first 15 minutes are unbearable.", "favoritedCount": 2568, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 28 13:15:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990213017068621824", "body": "RT @codebeast: \ud83d\udea8\ud83d\udea8 I've been working on a book on #NextJS for a couple of months and happy to announce the first release. The book will teac\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 28 12:55:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "990212254011416576", "body": "RT @nicolaschevobbe: Soon in @FirefoxDevTools console, we'll identify and collapse library/framework stacktrace frames so you can focus on\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 28 12:52:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989962576124612608", "body": "@alisson_cs Depends on why you used Redux https://t.co/rwp82HnUAe", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 27 20:20:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989864874154045440", "body": "@leecheneler @pkursawe 1. Shallow equality checks are slower if something always changes so they\u2019re not optimal at every level\n2. It wouldn\u2019t be safe to inline it as a function call (and we might want to inline it at compile time)\n3. It makes components unusable in case their parents rely on mutation", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 27 13:52:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989861134990807041", "body": "@iddan Probably not, send a PR if you see something lacking in docs? If we documented every StackOverflow answer then docs would be huge and nobody would read them. But there's probably good middle ground.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 27 13:37:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989832625383723008", "body": "@_philpl @jamiebuilds @kurtiskemple @ken_wheeler https://t.co/0bLptsHZYm https://t.co/Aox3mjYnki", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 27 11:44:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989831867871453185", "body": "RT @jaredforsyth: Soo @reasonml folks, I've been working on a snazzy new playground (as part of my documentation generator). It's got lots\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 27 11:41:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989607099121446912", "body": "https://t.co/r0GZHlioHf", "favoritedCount": 77, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 20:48:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989603571699249153", "body": "@Velveeta Maybe @acdlite has ideas. Also feel free to build React from master in case this accidentally got fixed with a recent refactor.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 20:34:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989601208213090304", "body": "@Velveeta Sorry, not likely I can find the time. If you figure out a reduced repro case I can look.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 20:24:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989598493324070912", "body": "@Velveeta Hard to say without seeing a repro. You're on latest version?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 20:14:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989585064462823426", "body": "@mihai Wow, this is much better! Thank you!", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 19:20:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989563137492963329", "body": "@jackiehluo Write functions to describe what you want to see on the screen, let React take care of updating it", "favoritedCount": 6, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 17:53:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989562180944236544", "body": "@mike_gichia No, also there's no issue, I am just offering an explanation of why it works this way. It's intended behavior, not a bug.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 17:49:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989551604511789056", "body": "@jackiehluo Maybe can extract something from this? https://t.co/qs39ms7MtF", "favoritedCount": 46, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 17:07:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989540812403957763", "body": "@wardpeet Send a PR?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 16:24:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989540768925798401", "body": "@styfle What could they be if not null when you don't render something?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 16:24:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989499953595736064", "body": "Do all refs always get set before lifecycles hooks run? I wrote an answer to clarify in which case you may get an undefined ref in componentDidMount and componentDidUpdate: https://t.co/4coNaVRYNO.", "favoritedCount": 298, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 13:42:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989477031086837760", "body": "@mihai @quip Yeah, unfortunately those edits were coalesced into one so it\u2019s as if the data was never there. Anyway, I worked around it but thanks", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 12:11:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989476771778236417", "body": "@0xca0a @IAmTrySound If you share the whole code (this snippet isn\u2019t enough) I can show how to write it", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 12:10:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989476696784072704", "body": "@0xca0a @IAmTrySound It didn\u2019t exist, no. The thread is about why this idea wouldn\u2019t work.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 12:10:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989476517607563264", "body": "@chriswearshats @ryanflorence @kentcdodds @swyx https://t.co/ucMESpprwm", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 12:09:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989476142636785665", "body": "@pkursawe No", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 12:07:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989476090489004033", "body": "@tarjei_tech I think you probably want getSnapshotForUpdate instead, that\u2019s what it\u2019s for", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 12:07:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989475965565890562", "body": "@erik_hellman Not really, it was super hacky. You can build your own though \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 12:07:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989310651985219589", "body": "RT @necolas: This is also why I started working on the web backend for React Native. It was the first design I saw that would solve a lot o\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 01:10:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989309201582297088", "body": "@_joshburgess @swyx @ryanflorence @kentcdodds @reasonml @jordwalke What we\u2019re thinking about is different from reducer components (although they\u2019re easy to express on top)", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 01:04:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989307036423938049", "body": "@brian_d_vaughn @okbel I had this reaction at first too but now I think I may have overestimated the importance. I don\u2019t actually have *that* much text in components. It\u2019s mostly just tree rendering.", "favoritedCount": 9, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 26 00:55:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989253927282585601", "body": "RT @linclark: Hey hey, here's me on the Changelog! \ud83c\udf89\n\n(Podcast interviews are terrifying for me, so whenever I listen to the final cut and\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 25 21:24:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989216221110423555", "body": "@ryanflorence @kentcdodds @swyx I've been avoiding these terms for about a year for the same reasons :-)", "favoritedCount": 9, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 25 18:55:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989215726358749191", "body": "@kentcdodds @swyx @ryanflorence My point being that there's no need to couple explaining this pattern to understanding static properties. The pattern itself stays relevant even when functions become the primary React API (even for stateful components). Might as well show future-proof way.", "favoritedCount": 9, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 25 18:53:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989213421357936641", "body": "@kentcdodds @swyx @ryanflorence Attaching it after definition might be clearer to most people. Is there a real need to use static properties? I'm not sure it helps much in this case, and it may potentially confuse.\n\nclass X {},\nfunction A() {},\nfunction B() {},\nX.A = A\nX.B = B", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 25 18:43:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989213095649308672", "body": "@ryanflorence @kentcdodds @swyx I think cloneElement() is a very poor communication mechanism (I'd only use it when there's a genuine need to clone) so that leaves context. At that point can't we call this concept just \"context\"?", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 25 18:42:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989210745199046657", "body": "@kentcdodds @swyx @ryanflorence I think that's pretty important to note in communication. That it's just a pattern of packaging things, not a React concept.", "favoritedCount": 10, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 25 18:33:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989191855895171072", "body": "@swyx @ryanflorence @kentcdodds I still have no idea what \u201ccompound component\u201d is \ud83d\ude1b", "favoritedCount": 12, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 25 17:18:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989125146689658880", "body": "RT @JoshWComeau: Hey, Montreal folks! \n\nI'll be presenting an early draft of my upcoming React Europe talk at React Montreal this evening!\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 25 12:53:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989105765276442624", "body": "RT @intelligibabble: hey, look at that. My talk from React Amsterdam is up! If you're interested in my musings about React in languages oth\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 25 11:36:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "989093467115737088", "body": "@4iAmAve Sorry, I don\u2019t know anything about TS and am not the one maintaining the defs", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 25 10:47:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988939715347992576", "body": "@YurkaninRyan Unit of work = a node. For example a component, or a div.", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 25 00:36:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988908144616263680", "body": "@lmatteis @sebmarkbage Personally not a fan of architectures that rely on event orchestration like this. I think it\u2019s pretty hard to debug and evolve code like this over time because there\u2019s too little cohesion. For the specific problem you describe, I much prefer the solution we propose with Suspense.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 22:30:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988903607398477826", "body": "RT @ThisIsMissEm: I\u2019m presently available for code review, graphql schema design, and technical architecture.\n\nSometimes you need the knowl\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 22:12:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988883903111974913", "body": "@tarang9211 https://t.co/xrXHWpF7Fg", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 20:54:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988878813818957824", "body": "@bh_ No, I didn\u2019t know them before", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 20:34:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988878502748475403", "body": "@swyx I could say the same about async/await", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 20:33:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988878105589768192", "body": "@swyx Yeah I mean I\u2019m struggling myself when trying to imagine the whole picture, at least with suspense. It feels so much easier to think about how to use it than how it really works", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 20:31:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988877694598352897", "body": "@bh_ The Russian dialogue feels first class, not like a translation. In fact English subtitles miss quite a bit of nuance that I can appreciate as a native speaker", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 20:29:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988877378599432192", "body": "@bh_ Yeah it\u2019s so good. Lead actors aren\u2019t Russian so it\u2019s good they don\u2019t get much screen time pretending to speak. The Russian-speaking cast is stellar though and they actually speak the way Russians would (and not how Hollywood tends to portray them)", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 20:28:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988876512861540354", "body": "@bh_ The Americans has the most accurate depiction of Russians in mainstream US media that I\u2019ve seen, the acting is very good", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 20:25:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988875829718454272", "body": "@bh_ You mean in the show?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 20:22:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988875206545506304", "body": "@swyx It all makes sense if you don\u2019t think about it too much", "favoritedCount": 10, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 20:19:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988874940718960642", "body": "@hnordt Looks normal to me \ud83d\ude42", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 20:18:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988874051866251265", "body": "@swyx I guess I can see how it could be confusing. My mental model for context is dynamic scoping. My mental model for error boundaries (or suspense!) more like throw/catch.", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 20:15:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988872983027552256", "body": "@tarang9211 Sure", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 20:11:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988872870251188225", "body": "@swyx Ie the cache is supposed to be passed from the top via context instead of a singleton like in my demo.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 20:10:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988872732011003904", "body": "@swyx I don\u2019t think this is accurate. Context is a \u201ctransport\u201d. Suspense is also supposed to work through context in practice.", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 20:10:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988846817348636673", "body": "Good stuff https://t.co/oDrAfRoQdS", "favoritedCount": 57, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 18:27:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988841548510040064", "body": "For comparison, this used to be hard in traditional non-declarative MVC because removing children caused problems in imperative code that tried to update them or bind to their events.", "favoritedCount": 85, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 18:06:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988840834882826240", "body": "RT @chriseppstein: Hey everyone, #CSSBlocks and #OptiCSS are now open sourced! #StyleFaster\n\nhttps://t.co/Sye4JstTAV", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 18:03:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988840744604590082", "body": "One of my favorite features of React-like libraries is how easy it is to delete things from render (e.g. to isolate a problem when debugging).", "favoritedCount": 217, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 18:02:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988791578553700353", "body": "The live version kicks ass https://t.co/N6LYLXE9FV", "favoritedCount": 14, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 14:47:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988786936004390912", "body": "I mean she literally switches to Russian in the middle", "favoritedCount": 12, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 14:29:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988782425445687297", "body": "I know The Americans sticks to the music of its time, but if they don\u2019t use Apr\u00e8s Moi in the finale soundtrack I\u2019ll be a little disappointed. https://t.co/EjikLPKESG", "favoritedCount": 25, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 14:11:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988752352730648576", "body": "@quip Is there no way to view edit history for a standalone Spreadsheet? I deleted a column yesterday and only today realized I deleted the wrong one :-(", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 12:11:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988705745456726016", "body": "@6artvde It doesn't?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 09:06:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988705466229428224", "body": "@6artvde What plan?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 09:05:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988576718721036288", "body": "RT @heydonworks: \ud83d\udcddOver the weekend I wrote about managing heading levels in design systems, using React. #a11y\n\n@sophiebits' solution using\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 00:33:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988575037237202944", "body": "RT @kentcdodds: I just published \u201cMigrating to React\u2019s New Context API\u201d https://t.co/EmgqYTHOqx", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 00:27:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988573367237251072", "body": "RT @StatisticsFTW: Server-side rendered #reactjs served by #S3? I just wrote a quick explanation of how we deploy our 100% #nextjs site to\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 00:20:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988572939019866113", "body": "RT @JedaiSaboteur: Ever wanted to make your own react app from scratch, but got no idea where to start? Maybe trying to add it to an existi\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 00:18:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988570849199390725", "body": "RT @patrickbrouwer: I just wrote a React PIXI Renderer. Write PIXI applications using React declarative style https://t.co/QFveFISODY", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 24 00:10:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988559578681040896", "body": "@graysonhicks @housecor @dceddia I pointed to three libraries in an earlier tweet, either might be helpful.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 23:25:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988554239717801984", "body": "@graysonhicks @housecor @dceddia Sounds complicated. The rules are striaghtforward: copy before you mutate. Trying to carve out a way to mutate and not encouter issues is going to create troubles later.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 23:04:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988546938478956544", "body": "@housecor @dceddia Also cloning deeply is not just expensive by itself; it makes PureComponents useless because everything always changes.", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 22:35:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988546679115800577", "body": "@housecor @dceddia I don\u2019t think cloneDeep() is a good recommendation. It can be very expensive. Only copy the parts that actually changed. Libraries like immutability-helper (https://t.co/YadMmpiOO8), updeep (https://t.co/P0MzD19hcD), or immer (https://t.co/VyRa6Cd4IP) help with this.", "favoritedCount": 63, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 22:34:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988524923831365632", "body": "RT @jlongster: I looking for a logo designer &amp; some general brand work. If you're into that (or know somebody), hit me up! DMs open.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 21:08:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988465122690719744", "body": "@sarahmei @jongold and @markdalgleish", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 17:10:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988452091877347333", "body": "@bvaibhav95 Should work fine", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 16:18:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988445759153627136", "body": "@koba04 Yeah", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 15:53:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988409111980269568", "body": "@mattibarzeev There is a balance. Adding too much detail like this to the docs alienates beginners who don\u2019t understand these concepts (and don\u2019t necessarily need to to be productive). Happy to review a PR to the docs though!", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 13:27:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988406120229363712", "body": "@mattibarzeev @kddeisz I don\u2019t understand why an instance method seems easier to test to you than a pure function. Pure function is by definition more isolated. Longer term React will be moving away from classes anyway.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 13:15:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988404694220406784", "body": "@mattibarzeev @kddeisz If you want to \u201cunit\u201d test them then just export them for testing separately \ud83d\ude42 or you can the component itself as a unit instead", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 13:10:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988403945373515777", "body": "@mattibarzeev @kddeisz I don\u2019t think I understand what you mean. Example?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 13:07:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988402403249741826", "body": "@mattibarzeev @kddeisz Sounds like over abstraction to me. Why not extract pure functions? In the same file. No need for \u201cservices\u201d.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 13:01:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988399297908572161", "body": "@mattibarzeev It\u2019s static to discourage instance access because people will be tempted to store values on instances or read from them, and that wouldn\u2019t be safe for async rendering.", "favoritedCount": 20, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 12:48:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988397925154869254", "body": "@kgra4ev It should already work in 2.x alphas", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 12:43:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988397575337365504", "body": "@avizuber @sarah_edo It\u2019s when your app memory usage keeps growing over time without a good reason", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 12:42:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988387613080981505", "body": "@acdlite @brian_d_vaughn @sebmarkbage  https://t.co/Ph0kfqDiuF", "favoritedCount": 53, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 12:02:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988386838518927360", "body": "@JedWatson Set up a build step with just one dependency?", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 11:59:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988383736629776385", "body": "@sarah_edo I also had a memory leak dream today! Somebody put a ping pong ball they caught (mousedown \u201cevent\u201d) into a box. I suggested throwing the ball away on mouseup/mousemove as well as touch events so we don\u2019t hold onto it unnecessarily.", "favoritedCount": 29, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 11:47:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988379088527286272", "body": "RT @ReasonLDN: Jake Zimmerman does a fantastic job comparing Union Types in @reasonml, @flowtype, @typescriptlang, and #purescript. \ud83e\udd4a\n\nTake\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 11:28:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988374402374004737", "body": "RT @BRTG_TheMovie: @lauramarlinghq We know you love Jackson C. Frank. We make a documentary about this  fantastic musician.   We would like\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 11:09:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988240589685739523", "body": "@De_The_Bug React is used in plenty of software. Not sure about games.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 02:18:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988236278238928898", "body": "Of course statistically the usage will get close to zero. But I\u2019m curious about outliers. Somebody running an emulation of something 20 years from now. 50. 100? When will be the last time these lines of code run? Who will run them? Why?", "favoritedCount": 113, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 02:01:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988235697386672128", "body": "Realized I haven\u2019t played a shooter in a decade and found a Quake 2 WebGL demo. This got me thinking: what\u2019s the shelf life of our code? Will React 0.13 be running somewhere in 2040? It feels like not but then Quake 2 is 20 years old.", "favoritedCount": 155, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 01:58:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988222171100188673", "body": "@ryanflorence @Daajust @reactjs Personally I prefer writing (props, state) there but whenever I do that people ask to clarify so I gave up", "favoritedCount": 15, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 23 01:05:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988204753036480512", "body": "@Kamui62552688 You\u2019re right I don\u2019t have a solution. That\u2019s why my tweet ends with a question mark. It\u2019s an invitation to dialogue. I\u2019m curious to hear your thoughts on the problem itself.", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 23:55:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988181369149886466", "body": "@Kamui62552688 What credentials do you accept? I do have some old C# answers. \ud83d\ude42 I consider myself to be a part of SO community, and my tweet\u2019s criticism applies to my answers too. I\u2019m not sure what you\u2019re upset about\u2014can you please clarify?", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 22:22:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988158261894549504", "body": "@Kamui62552688 Here https://t.co/fd2S0FaNKm", "favoritedCount": 169, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 20:51:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988130476324982784", "body": "@runjep @taylorxpress I have a pro @acdlite subscription", "favoritedCount": 76, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 19:00:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988126703372394496", "body": "@taylorxpress I don\u2019t think it\u2019s possible to stop learning but most of my learning these days is specific to projects I\u2019m working on, and StackOverflow doesn\u2019t help me with that", "favoritedCount": 49, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 18:45:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988123465755525120", "body": "When I was actively learning, StackOverflow was an invaluable resource. But now that I know some areas (e.g. JS, React) better, I see how many answers (inc. accepted) are subtly wrong or misleading. It\u2019s disheartening but I guess they\u2019re still helpful?", "favoritedCount": 1062, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 18:32:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988117222299242496", "body": "@_jayphelps greeting", "favoritedCount": 14, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 18:07:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988113001248182274", "body": "RT @codepipes: New - long- blog post. Software testing anti-patterns https://t.co/aUDw5GCtBV https://t.co/pSGXpuKvVj", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 17:51:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "988078619745574912", "body": "RT @james_k_nelson: Render props in #reactjs components are ridiculously powerful.\n\nSo far, my favorite render-prop pattern is what I call\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 15:34:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987868765160398848", "body": "RT @BenLesh: If you're a complete beginner starting off in JavaScript, there is nothing wrong with just learning a framework up front. Don'\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 01:40:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987868576144125952", "body": "RT @soundarchive: Massive BBC sound effects library now available in WAV format for free download for personal, educational, research &amp; non\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 01:39:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987868122240700416", "body": "@fristys @notquiteleo @firefox And some teams have done research on this at Facebook too. When there are too many loading/intermediate states over a short period of time people perceive the result as slow. Even slower than a version with faster absolute numbers. Each relayout or flash has a cognitive cost.", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 01:38:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987865425332629505", "body": "@fristys @notquiteleo @firefox Here is another one on when animating is appropriate and how to use animations well. https://t.co/cJyqhPlPat", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 01:27:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987864512559828993", "body": "@fristys @notquiteleo @firefox Well I\u2019m glad to make your week \ud83d\ude42 If you\u2019re curious how exactly people get confused by fast and barely perceptible UI changes are are welcome to consult the research, hope you find it useful: https://t.co/5cqAg3UNNX", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 01:23:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987860317450448896", "body": "@pmhsfelix @jose_pedro_dias @reactjs @cguedes I made this one https://t.co/p4UjEIN8Kl", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 01:07:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987858446266585088", "body": "@jasonlaster11 @firefox There\u2019s probably a higher tech way to do it tbh", "favoritedCount": 6, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 00:59:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987857884175364097", "body": "@jasonlaster11 @firefox Took a QuickTime recording, played in VLC with 0.25 speed, took another QuickTime recording of that, played in VLC with 0.25 speed, and recorded that with CloudApp into a gif", "favoritedCount": 28, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 00:57:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987857534244605952", "body": "@katiesievert @OH_NOES @lang1z @sophiebits @michaelbrazell @sebmarkbage One option is to not shift the screen. Preallocate space for trend results so it doesn\u2019t jump when they load.", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 22 00:56:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987825381620232192", "body": "@katiesievert @OH_NOES @lang1z @sophiebits @michaelbrazell Mostly it\u2019s just that the ranking feels wrong. When I stop typing midway (\u201cSeb\u201d) it\u2019s because I\u2019ve already seen the right result (@sebmarkbage) and lifted my finger to navigate. But then it loads trends \ud83d\ude11", "favoritedCount": 6, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:48:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987824923442843648", "body": "@katiesievert @OH_NOES @lang1z @sophiebits @michaelbrazell Oh, that explains why it\u2019s been better lately, thank you! I don\u2019t open random pages as often now but I\u2019ve also trained myself to wait. Of course readjusting when the first result is what I want is annoying.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:46:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987823326251843584", "body": "@toolness @firefox This is a hard problem and different tradeoffs make different usage patterns better or worse. I agree Chrome\u2019s not perfect either. But I think there are uncontroversial changes FF can do to improve.", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:40:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987822905923907586", "body": "@kshmir @firefox You\u2019re joking but at some point a product being delightful and unobtrusive makes a real difference, and dismissing it as petty concern hurts all the \u201cright\u201d reasons people \u201cshould\u201d use it", "favoritedCount": 14, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:38:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987821893788094469", "body": "RT @dan_abramov: Also, I know this stuff is hard! My respect to all engineers working on autocompletes. It would help if more best practice\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:34:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987821802486366208", "body": "@asadotzler @firefox And removing choppy animations that fail to provide useful clues and cut text in some intermediate states.", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:34:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987821592574091264", "body": "@asadotzler @firefox I\u2019m not sure the UI problems are necessarily coupled to data retrieval speed. My concerns are around rapid fire flashes of loading states. Throttling them and using instant lower quality results (enhanced when ready) would help a lot.", "favoritedCount": 6, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:33:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987821032961662978", "body": "@fristys @notquiteleo @firefox If I care about FF adoption then I care about defaults. \u201cUsers can tweak some setting\u201d is a bad excuse for UI jank. You\u2019re misrepresenting me in the second point. It\u2019s not fixed height per se that\u2019s good. It\u2019s that two choppy animations within a short timeframe hurts attention.", "favoritedCount": 77, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:31:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987821032961662978", "body": "@fristys @notquiteleo @firefox If I care about FF adoption then I care about defaults. \u201cUsers can tweak some setting\u201d is a bad excuse for UI jank. You\u2019re misrepresenting me in the second point. It\u2019s not fixed height per se that\u2019s good. It\u2019s that two choppy animations within a short timeframe hurts attention.", "favoritedCount": 77, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:31:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987819490674184193", "body": "@lang1z @sophiebits @michaelbrazell @OH_NOES @katiesievert Thank you!", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:24:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987816136141099008", "body": "@asadotzler @firefox I agree, and this is making me even sadder about worse UI interactions. I want to use a browser that gives me better content but without the usability hit \ud83d\udc4d", "favoritedCount": 8, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:11:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987815715993464833", "body": "@asadotzler @drmzio @firefox That\u2019s not the point. Defaults matter. https://t.co/cZM0KggBir", "favoritedCount": 9, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:09:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987815674935414785", "body": "RT @dan_abramov: @fristys @notquiteleo @firefox I\u2019m not saying I consciously perceive it, of course not! But every time I type something in\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:09:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987815525186195456", "body": "@Prof_Lewis @firefox You might like my talk https://t.co/YcAcDqGhMw", "favoritedCount": 8, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:09:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987815335209336833", "body": "@fristys @notquiteleo @firefox I think it\u2019s important to highlight these issues (which end users won\u2019t even be able to articulate) instead of dismissing them.", "favoritedCount": 46, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:08:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987815243672903680", "body": "@fristys @notquiteleo @firefox I\u2019m not saying I consciously perceive it, of course not! But every time I type something in FF I get confused for a split second. My mind blanks. This contributes to uneasiness and the desire to not use it.", "favoritedCount": 58, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:08:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987814946598719488", "body": "RT @OH_NOES: @dan_abramov you know what's worse? twitter, they actually swap what's right below the search while it loads", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:06:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987814877992497152", "body": "@michaelbrazell @OH_NOES Twitter (including Mobile) is soooooooooo broken in this respect.", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:06:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987814766096932864", "body": "RT @michaelbrazell: @OH_NOES @dan_abramov The number of times I accidentally click something in Twitter search is maddening.  Happens like\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:06:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987814731078651905", "body": "Also, I know this stuff is hard! My respect to all engineers working on autocompletes. It would help if more best practices were documented. We should fix this problem as a community and not repeat the same mistakes in all UIs we build.", "favoritedCount": 234, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:05:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987814230949842944", "body": "Some latency is unavoidable. Chrome also reorders results. But it would feel so much better if:\n\n* URL bar and first \u201cSearch for X\u201d result updated at the same time\n* There was some debouncing between rapid changes when there\u2019s more than one\n* Empty favicons wouldn\u2019t flash", "favoritedCount": 47, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:04:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987813321704460289", "body": "This is also interesting. When I type a single letter in Firefox, there are five distinct updates within 15 milliseconds:\n\n1. First result label\n2. URL bar\n3. A few new local results with favicon \u201choles\u201d\n4. Updated local results + favicons\n5. Remote results replace local ones https://t.co/dDf1rTVUFm", "favoritedCount": 37, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 22:00:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987808659588763648", "body": "@BSHarou @firefox Ironically async rendering in React is going to *help* solve such problems \ud83d\ude42 Suspense delays committing changes until the components are ready (or timeout expires).", "favoritedCount": 8, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 21:41:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987808204447985664", "body": "Compare to Chrome:\n\n1. No distracting choppy animation\n2. It shows a constant height box on the first frame\n3. The row highlighting is present on the first frame instead of being added midway\n4. Only one row is highlighted unless I move the mouse https://t.co/fM21HFpQd9", "favoritedCount": 156, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 21:40:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987804490698035201", "body": "@notquiteleo @firefox The problem isn\u2019t in the data sources, it\u2019s in UI that keeps morphing and shifting during during a very short period of time. It\u2019s very distracting.", "favoritedCount": 28, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 21:25:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987804228390412289", "body": "@MartinDoms @firefox It\u2019s killing me every day", "favoritedCount": 21, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 21:24:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987802086355210240", "body": "I recorded in slow motion everything that happens when I type a single letter in a @firefox autocomplete. All of this happens during a few hundred milliseconds. We see from 3 to 10 intermediate states, depending on how generously you count. This is why I still don\u2019t use FF. https://t.co/Y8oTyNkQeU", "favoritedCount": 642, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 21:15:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987784694816178178", "body": "@igrigorik @tdresser I haven't tried on other browsers (not sure who else supports User Timing? doesn't seem to do anything on FF, and I don't have Edge/Windows at the moment)", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 20:06:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987767140165013506", "body": "RT @riittagirl: Watch my talk about writing good docs on @YouTube here: https://t.co/d1Ey2HBUHK #reactJS #docs #documentation https://t.co/\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 18:56:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987761427455905793", "body": "RT @brian_d_vaughn: People sometimes ask about how to create a react-virtualized Table with drag-and-drop resizable columns. Here's a kind\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 18:34:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987760396256907264", "body": "@inspector_press @pietrucha Give our docs a try https://t.co/UuHCiPFnCb", "favoritedCount": 8, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 18:30:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987760252291559424", "body": "@kbarasab It doesn\u2019t matter \ud83d\ude42", "favoritedCount": 15, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 18:29:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987758633420288002", "body": "RT @brian_d_vaughn: \ud83d\ude42\u00a0@codesandboxapp is such a pleasure to work with. It's dramatically improved my experience of sharing ideas and respon\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 18:23:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987735478672744448", "body": "@benlorantfy Might actually scrap that and do something a bit more powerful instead. @sebmarkbage was thinking about enabling a multi pass approach.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 16:51:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987734877209616385", "body": "NeXT era Jobs is my favorite Jobs https://t.co/54U7grDyH5", "favoritedCount": 236, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 16:48:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987713182939561984", "body": "https://t.co/atU6MT0j13", "favoritedCount": 50, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 15:22:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987668432186429441", "body": "@dtinth @brian_d_vaughn Filed an issue https://t.co/vWo9JAQ1bz", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 12:24:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987667362173374465", "body": "@dtinth @brian_d_vaughn Looks like memoize-one it is! https://t.co/gf7SH2lGxN", "favoritedCount": 8, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 12:20:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987666217795293184", "body": "@dtinth @brian_d_vaughn Does Lodash have a last-value-only variant? Or is there a popular package that does it that we can point to in docs?", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 12:15:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987664609288097793", "body": "RT @dtinth: @brian_d_vaughn Note: `lodash.memoize` probably doesn\u2019t do what you want \u2014 it remembers the result of _all_ previous invocation\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 12:09:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987664595107098625", "body": "@dtinth @brian_d_vaughn Oof thanks for explaining. I was sure it memoizes only the last value \ud83d\ude33", "favoritedCount": 11, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 12:09:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987664281012506624", "body": "RT @brian_d_vaughn: Something that's shaken out of conversations about getDerivedStateFromProps is that component state is often used unnec\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 21 12:08:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987348392065028097", "body": "@AdamRackis @wSokra @sebmarkbage I've seen a few Uglify bugs in recent bug reports, not sure if they're specific to -es or not:\n\nhttps://t.co/j8btn0q4Y7\n\nhttps://t.co/vqWW7moNrw", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 20 15:12:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987343720306675712", "body": "RT @JedWatson: \ud83c\udf89 Just released react-select v2 beta\n\nLooking good, and it comes with a new upgrade guide from 1.x -&gt; 2.x\n\nhttps://t.co/zIG8\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 20 14:54:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987318236663500805", "body": "Every night fucks every day up \nEvery day patches the night up https://t.co/4punDPIVx8", "favoritedCount": 73, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 20 13:13:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987304578097057792", "body": "@thekitze @markdalgleish @kentcdodds @reactjs @brian_d_vaughn We\u2019ll fix this", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 20 12:18:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987304046225707008", "body": "RT @ReactRally: We\u2019ve got about 60 tickets left before we sell out. If you\u2019re considering coming to React Rally, pick up a ticket soon! htt\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 20 12:16:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987302831202979841", "body": "RT @alexandereardon: react-beautiful-dnd will now smartly retain focus on the dragging item when moving between lists \ud83c\udfa9\u2728\n\nPreviously we req\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 20 12:11:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987303736866496512", "body": "@_joshburgess You might like this https://t.co/USt5CNkIUo", "favoritedCount": 14, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 20 12:15:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987107675484884993", "body": "@ryanflorence This is missing \u201cI prefer new API but don\u2019t have a need to justify upgrading\u201d", "favoritedCount": 101, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 23:16:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987107355002359808", "body": "RT @ryanflorence: Tell me about why you haven't upgraded from React Router v2/v3 to React Router v4", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 23:15:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "987084245612023811", "body": "RT @polotek: I think software won't get better until it doesn't depend on humans keeping complex skycastles in their brains. https://t.co/3\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 21:43:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986975489020620806", "body": "@monteslu @martinkl (Note that 644K includes sourcemaps)", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 14:31:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986961773852086272", "body": "@martinkl (Sorry, just realized we aren\u2019t mutuals so my tweet was a bit more flippant than it should\u2019ve been \ud83d\ude2c Happy to discuss tradeoffs tho!)", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 13:36:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986961301057556481", "body": "@martinkl Come on https://t.co/woewaJDCe9", "favoritedCount": 159, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 13:34:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986955737690755072", "body": "@inflammatorydev Fiber isn\u2019t a release name per se. It was a codename for a rewrite of the internal architecture. It wasn\u2019t clear when it was going to ship (if at all) and having a name helped motivate the team to get through it \ud83d\ude42 But React 16 is just React 16, not \u201cFiber\u201d.", "favoritedCount": 15, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 13:12:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986951644641484800", "body": "Did you know Yarn is actually an acronym?\n\nYet\nAnother \nRibrary\nNanager", "favoritedCount": 3173, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 12:56:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986794672302559232", "body": "@alexmkrolick @ehabdevel Yeah, it\u2019s definitely staying! It must exist to let components clean up \ud83d\ude42", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 02:32:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986794963148132358", "body": "@vaidehijoshi Would be cool, shoot a DM pls (literally thought of you half an hour ago)", "favoritedCount": 23, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 02:33:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986794385588281345", "body": "You see me do me fork fork fork fork fork fork", "favoritedCount": 138, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 02:31:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986778914327597056", "body": "@ehabdevel Could you offer more details on what is missing?", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 01:30:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986778672978948096", "body": "RT @jlongster: Get you a testing framework the way react-testing-library treats you. This is absolutely awesome. https://t.co/O3SOezTbqX", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 01:29:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986769528939040768", "body": "@codenakama I mean, this one was on repeat the whole day but I\u2019m sure there are others that are good too", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:52:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986769389558083584", "body": "@codenakama I just started getting into them so too early", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:52:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986768313098424320", "body": "@jamiebuilds ouch", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:47:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986768084387225601", "body": "@jamiebuilds I no longer try to memorize A Elbereth Gilthoniel if that\u2019s what you mean", "favoritedCount": 15, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:46:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986767178488844288", "body": "@acdlite @sebmarkbage You are an anti-pattern", "favoritedCount": 22, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:43:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986766978676346880", "body": "@jamiebuilds The upside of this is I get pinged less on random threads", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:42:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986766731413741568", "body": "@sebmarkbage APIs &gt; opinions", "favoritedCount": 15, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:41:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986766497711296512", "body": "@jamiebuilds I\u2019ve trained myself to do this after years of living with a nickname I picked when I was 14 and into Tolkien", "favoritedCount": 10, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:40:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986766115505344517", "body": "(We ran a poll like this two years ago: https://t.co/slUCoTadBC. Curious to see if anything changed.)", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:39:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986765979165364224", "body": "Would you rather see React documentation become less or more opinionated?", "favoritedCount": 27, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:38:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986763076967026690", "body": "@michelenicole @reactjs This is really nice, want to send a PR to portal docs to include a link to the article?", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:27:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986762968699457538", "body": "RT @michelenicole: J on my team took a deep dive into the @reactjs portal api and made some fun demos about it: https://t.co/IoHPtZN0VP", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:26:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986761758097408000", "body": "@ggpsv @sebmarkbage @sompylasar Rendering only elements that are visible on the screen (as opposed to rendering hundreds/thousands of rows in a scroll view)", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:21:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986761381109227521", "body": "RT @sebmarkbage: Oh yea. We built a JS VM in JS. It\u2019s not that great but a good data point. https://t.co/6nDqQRehuH", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:20:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986760697655816192", "body": "RT @timdorr: Redux 4 is here! \ud83c\udf89\n\nImproved TypeScript definitions, bundled CJS and ES builds, better safety checks, and more small improveme\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 19 00:17:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986730553566269442", "body": "RT @aweary: react-copy-write just hit 500 stars! \u2728\n\nAlso, there's a cool new optimization that I'm working on that I'm really excited about\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 22:17:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986730477989003264", "body": "@brianloveswords No cookies for you https://t.co/JLDoiCIf70", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 22:17:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986722906607685633", "body": "@agurtovoy https://t.co/YRn6sn3KCF", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 21:47:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986717701061185539", "body": "@BenLesh @acdlite @Meligy I don\u2019t think we said anything about React *apps* \ud83d\ude42 We were talking about what React itself uses internally. Hopefully those concerns don\u2019t affect our users because they don\u2019t need to implement React. Sorry if this was unclear", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 21:26:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986679911267094531", "body": "RT @ReactRally: Check out our 2018 speaker lineup!\nhttps://t.co/k4OmitzF6n", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 18:56:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986669857751093248", "body": "https://t.co/OaWtZGJAfA", "favoritedCount": 33, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 18:16:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986634317307809795", "body": "@0xca0a @taylorlapeyre &lt;Fragment&gt;\n  {this.state.hasMeasured &amp;&amp; this.renderRealThing()},\n  {!this.state.hasMeasured &amp;&amp; this.renderPortal()},\n&lt;/Fragment&gt;", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 15:55:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986634082703560714", "body": "@0xca0a @taylorlapeyre What prevents you from returning a fragment with both normal node (which might be null at first) and a portal (which might be null on second render, but on first render is used to determine whatever you measure)?", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 15:54:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986629709684445184", "body": "Just realized this might also solve issues that make hot reloading so difficult and error-prone \ud83e\udd2f https://t.co/L3y2AfgDQc", "favoritedCount": 78, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 15:37:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986618376159145984", "body": "@valignatev It\u2019s more fun", "favoritedCount": 39, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 14:52:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986617404175343616", "body": "@geirmanc @mjackson @ReactPodcast More like 50 minutes", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 14:48:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986614886196117505", "body": "@neoziro @brian_d_vaughn @sebmarkbage Replied", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 14:38:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986609176444112896", "body": "@Ambewass @colshacol @alexvcasillas Didn\u2019t my link above to the docs cover exact this pattern?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 14:15:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986608586020311040", "body": "@sheldonj1983 @shanselman I\u2019d prefer a conversation", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 14:13:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986608486292295684", "body": "@mjackson @ReactPodcast I think it would be hard to explain without either heavy gesticulation or drawing", "favoritedCount": 21, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 14:12:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986608072067026944", "body": "@sheldonj1983 @shanselman It\u2019s hard to explain without gesticulation and/or drawing on a whiteboard. There\u2019s plenty of more accessible material but almost no advanced technical explanations about internals (data structures and algorithms). That\u2019s the gap I want to fill.", "favoritedCount": 63, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 14:11:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986606987055108098", "body": "I don\u2019t know how \u201ctime\u201d got into this tweet. Lol", "favoritedCount": 72, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 14:06:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986606701792186368", "body": "Is there a video JS podcast that goes in depth about how things are implemented under the hood and isn\u2019t shy of details? I\u2019d love to talk about React internals and time explain the internal architecture.", "favoritedCount": 1126, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 14:05:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986601640869457920", "body": "@BenLesh @acdlite @Meligy There is also this description but some details have changed since it was written https://t.co/UDmgr24MH0", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 13:45:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986600704017125377", "body": "@BenLesh @acdlite @Meligy Some high level design decisions are explained here: https://t.co/oXv0UQsT8q", "favoritedCount": 6, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 13:41:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986599831207636992", "body": "@BenLesh @acdlite @Meligy Conceptually React is a VM but its \u201cfunctions\u201d (components) are potentially stateful, and the result of the computation is a list of mutations to apply (\u201ceffects\u201d). That motivates the data structure design.", "favoritedCount": 8, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 13:38:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986599159737344002", "body": "@BenLesh @acdlite @Meligy It\u2019s a call stack frame but with input/output memoization, double buffering, and linked list of children and effects  https://t.co/aJmxfT3Gcu", "favoritedCount": 10, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 13:35:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986598436937109505", "body": "@colshacol @alexvcasillas I\u2019m getting lost. Code examples would help.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 13:32:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986597887474851846", "body": "RT @moderndotweb: Are you watching our #React podcast right now? Live with @BenLesh @ladyleet @_jayphelps and @mjackson https://t.co/Cd5c9s\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 13:30:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986582077360439296", "body": "Thanks to @brian_d_vaughn we now have a page in the docs that links to snapshot of documentation for diffeerent React versions. Unfortunately, only starts with 16.0 release (because website changed), but still! https://t.co/WhyXEJR5Qi", "favoritedCount": 136, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 12:27:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986580244638392320", "body": "@alexvcasillas The problem isn\u2019t with passing an object, it\u2019s with passing a new object every time. Passing the same object when data doesn\u2019t change solves the problem", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 12:20:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986579707259912193", "body": "@oriSomething @reactjs Make sure your running 16.3.1 or later, and in production mode", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 12:18:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986579559058427904", "body": "@oriSomething @reactjs It\u2019s hard to say anything without seeing the code and/or demos", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 12:17:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986578963169497088", "body": "@DavidKPiano @BenLesh @Meligy Sure, I agree observables are useful on a higher level of data orchestration! They just don\u2019t help us with the core of React which is why we don\u2019t use them there.", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 12:15:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986577669415370753", "body": "@0xca0a @taylorlapeyre What does \u201crendered out\u201d mean?", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 12:10:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986577051737120773", "body": "@oriSomething @reactjs Legacy context definitely imposes some cost on the whole tree because it prevents bailouts in some cases. New context shouldn\u2019t have any noticeable cost.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 12:07:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986576577805897729", "body": "@alexvcasillas The docs have this, no? https://t.co/3ltcuHGs9Z", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 12:06:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986576199072788486", "body": "@idaraselia It\u2019s gitbook (same as it was). I don\u2019t know if it uses React but I doubt it.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 12:04:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986575404495523840", "body": "@BenLesh @Meligy Neither reason is accurate as Andrew noted in his reply. Happy to go on more detail in a podcast or some other form, I think nuance gets lost on Twitter \ud83d\ude42 even if Observables were native React wouldn\u2019t needn\u2019t them, it\u2019s much harder to implement what we want with than without", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 12:01:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986574463041986565", "body": "@tim_jacobi @BenLesh @Meligy Also the resulting work is not a combinator on input event streams. Internal representation is a tree. Updates schedule work on it. React walks the tree as necessary. Push primitives don\u2019t help us with this.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 11:57:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986573856696651776", "body": "@tim_jacobi @BenLesh @Meligy Yes", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 11:55:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986573835184033792", "body": "RT @tim_jacobi: @BenLesh @dan_abramov @Meligy I think the devil is in the detail. While react uses push-based primitives neither the occurr\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 11:55:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986432140131930113", "body": "@SamSamskies @reactjs No but feel free to raise an issue or send a PR", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 02:32:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986428641197416448", "body": "@oriSomething @reactjs Do you mean performance? Can you create a demo that shows the issue?", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 02:18:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986427348542205952", "body": "@mattFrankJames @reactjs If you pass the same state to them then updating it updates them all. You could either encapsulate each button in a component, or you could have each button update one state key (or element in an array inside the state).", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 18 02:13:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986373557012844544", "body": "@mattFrankJames @reactjs setState in that button component?", "favoritedCount": 14, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 22:39:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986359319603109889", "body": "RT @brian_d_vaughn: We've gotten a lot of feedback from the open source community that Andrew's tweets are sometimes confusing. We take all\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 21:42:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986313360558960640", "body": "Mood https://t.co/JD63BjlmJd", "favoritedCount": 44, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 18:40:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986290168318455808", "body": "RT @zachcodes: Gutenblock - Create blocks inside of @Wordpress with hot reloading, code splits, and registering blocks automatically! https\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 17:07:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986292944566177793", "body": "@zachcodes @WordPress This is so cool! Hot reloading inside of Wordpress is wild", "favoritedCount": 16, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 17:18:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986289988471083009", "body": "RT @zachcodes: If you want to see what gutenberg is all about and how you can create @reactjs components for it, check out the video I just\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 17:07:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986287728324202497", "body": "@luc_h @mweststrate Also https://t.co/ze39K4fkJH", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 16:58:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986286459253641222", "body": "@styfle @DominikWidomski Why do you have this pattern all over the place? Why not just use props?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 16:53:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986282264995729412", "body": "@styfle @DominikWidomski People use it for two kinds of use cases I described above :-)", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 16:36:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986286361924833280", "body": "@luc_h @mweststrate See discussion in https://t.co/kqlfpVlOyC", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 16:52:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986260604074807297", "body": "RT @elijahmanor: \ud83c\udd95 Video about using react-codemod to automatically rename any unsafe lifecycle hooks! https://t.co/ZjheEH9Fdq", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 15:10:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986247742958833664", "body": "https://t.co/m8yBFTeGyC", "favoritedCount": 18, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 14:19:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986230481493659649", "body": "@stay_positive \u0421\u043f\u0430\u0441\u0438\u0431\u043e, \u043d\u0430\u043f\u0438\u0441\u0430\u043b!", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 13:10:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986219988439764992", "body": "@james_k_nelson cc @kryptos_rsa", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 12:29:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "986219048810831873", "body": "@esterisco Oceanic next with custom background", "favoritedCount": 9, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 17 12:25:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985997144615251968", "body": "Getting more challenging https://t.co/WE6MrHZerR", "favoritedCount": 11, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 21:43:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985995130623717378", "body": "https://t.co/9E4gjBFSVA", "favoritedCount": 38, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 21:35:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985924445092052992", "body": "@Herschel_R Not really because we rewrote React since then \ud83d\ude33", "favoritedCount": 8, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 16:54:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985919344898199559", "body": "RT @HenrikJoreteg: \ud83d\udce2 My new book, \"Human Redux\" will be available on Monday! \ud83c\udf89", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 16:34:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985918907767803904", "body": "Only 2017 kids remember https://t.co/2gqZp4AUcv", "favoritedCount": 135, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 16:32:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985909036754391040", "body": "@mamadero @stnwk @mxstbr We\u2019ll post an RFC when it\u2019s more fleshed out", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 15:53:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985906887995674630", "body": "Thanks to @wherestheguac for her first contributions in this release! Looking forward to more PRs \ud83d\ude42", "favoritedCount": 44, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 15:44:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985906436659204098", "body": "React 16.3.2 is out! A few bug fixes, better messages, and DEV mode should be a bit faster. https://t.co/qYeyAIm7H3 https://t.co/lAaIZgpOB6", "favoritedCount": 426, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 15:43:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985889375610433537", "body": "@srv_kumar This seems like a super fragile API to be honest and I don\u2019t recommend implementing it", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 14:35:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985875286599323649", "body": "RT @RollupJS: \ud83c\udf89Just released @RollupJS v0.58.0\ud83d\udc83 \ud83d\udd7a!! And there is just TOO MUCH AWESOME for a single tweet:\n* Name your chunks!\n* Chunk name\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 13:39:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985869341362196488", "body": "@bartjanvassen Please file an issue, I\u2019m not actively maintaining it personally", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 13:15:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985860470962827264", "body": "@victormarbez @DominikWidomski It\u2019s all in the blog post https://t.co/c1TDGA80Iq", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 12:40:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985860402381717504", "body": "@victormarbez @DominikWidomski Use cDU for side effects (\u201cdo something\u201d). Relatively common. Use gDSFP to... derive state from props. Relatively uncommon.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 12:40:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985859998076100608", "body": "@Meligy @stnwk @mxstbr I explained a bit here. It\u2019s more nuanced than \u201cclasses are good\u201d or \u201cclasses are bad\u201d. https://t.co/MLCGQ08Z30", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 12:38:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985828714918371328", "body": "@fakiolinho Haven\u2019t worked on them for a few years. Probably @acemarke", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 10:34:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985820641940197377", "body": "@kasuso Somebody told me the same 20 years ago! Took me a while to realize they had no idea what they were talking about. https://t.co/ENldNqq8C1", "favoritedCount": 168, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 10:02:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985816687969816577", "body": "@sindresorhus Can you add some real-world examples of how this change would simplify your actual code? Those would help motivate it.", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 09:46:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985816494654345216", "body": "@sindresorhus The cost of making this pattern look nicer is that people will use it... more. It\u2019s tempting but it\u2019s often bad both for correctness and for performance/memory. I\u2019m not sure we want to encourage its usage. Looking ugly might be a feature.", "favoritedCount": 16, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 16 09:45:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985582797162274816", "body": "RT @cramforce: \ud83d\udea8 For those of y'all who prefer reading over watching videos I prepared a transcript of my @jsconfau talk \"Designing very la\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 15 18:17:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985575880553529345", "body": "@stnwk @mxstbr There is a promising new API direction that we might explore later this year after more urgent work is done. It brings some challenges of its own but I think it\u2019s the first one that actually seemed like it might be worth it", "favoritedCount": 28, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 15 17:49:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985570192041398273", "body": "@mxstbr Between six months and two years I think", "favoritedCount": 115, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 15 17:26:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985569334729854976", "body": "@abohannon Check if it\u2019s in node_modules/react/cjs/react.development.js. If yes then the cache is somewhere in bundling (restart the server, delete build products). If no then the cache is somewhere earlier (wrong npm version? bad lockfile? buggy registry proxy?)", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 15 17:23:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985564812104085504", "body": "@Engr_Salaar File issues for use cases you care about. \ud83d\ude42 We\u2019re happy to consider those use cases", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 15 17:05:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985564259479322625", "body": "@cdiddy42 @preactjs @reactjs I wrote a bit here https://t.co/Abgm6WbzUR", "favoritedCount": 58, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 15 17:03:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985562454670368768", "body": "@abohannon It definitely does \ud83d\ude42 You probably have some kind of funky caching going on", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 15 16:56:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985506000689094657", "body": "@k1sul1 @stevensacks CSS modules were merged a few months ago I think, already available in alphas", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 15 13:11:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985354781815427072", "body": "@stevensacks Different in that you don\u2019t need to run a separate watcher. I don\u2019t think there\u2019s a practical difference but people feel strongly about this", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 15 03:11:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985354526772297729", "body": "@dbanbahji @cpt_silverfox That approach is documented but people don\u2019t like it because it involves extra operations and doesn\u2019t feel as \u201cclean\u201d", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 15 03:10:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985262336306024453", "body": "Reminder: UNSAFE_ methods *will* keep on working in React 17.", "favoritedCount": 165, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 21:03:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985258028164374528", "body": "RT @nikgraf: Published 6 new Egghead lesson covering new features of React 16.2 &amp; 16.3\u269b\ufe0f\n\n- Fragments\n- createRef\n- forwardRef\n- getDerived\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 20:46:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985254839201468416", "body": "@GuriaFS Now that the peer dep is relaxed we can include loader by default but it won\u2019t work unless you explicitly install node-sass into your project (at which point you\u2019ve decided to take on a native dependency and are responsible for that decision).", "favoritedCount": 13, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 20:33:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985254547173052416", "body": "@GuriaFS The problem wasn\u2019t in the loader per se. It was that including Sass support used to mean that everybody would have to download a binary (which sometimes causes segfaults, breaks offline mirrors, and has other issues).", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 20:32:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985253771486879744", "body": "@GuriaFS 1. Sass in particular isn\u2019t going away, even people who don\u2019t like it anymore are often locked into using it\n2. We got a PR to sass-loader that relaxes node-sass peer dependency\n3. Which means we *won\u2019t* require everyone to install a binary but will allow Sass users to do it", "favoritedCount": 12, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 20:29:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985253153737265154", "body": "@hegpetz @porfirio That\u2019s one of the reasons, yep. There\u2019s a few more: https://t.co/3ULIIvdT8c", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 20:27:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985252739809710082", "body": "RT @ElaziziYoussouf: I just update the parcel-story repo in @github : the easy way to develop your @react components UI  \ud83d\udee0\ufe0f - a @storybook\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 20:25:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985249038181289985", "body": "Opt-in Sass support without ejecting coming to Create React App https://t.co/HF4sVgSh3w", "favoritedCount": 902, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 20:10:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985246940177817606", "body": "RT @K4y1s: lol, my @reactjs course somehow ended up to be the second most popular course on @github and I didn't even notice.\n(It is rather\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 20:02:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985246182929829888", "body": "@pgib @reactjs 15-stable branch is here: https://t.co/LaZdhzl3sc. Can either view there or run locally. Not much has changed though. I\u2019d instead suggest reading the few blog posts in between to learn what\u2019s new, and ignore that.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 19:59:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985244719109337090", "body": "@srv_kumar @brian_d_vaughn It\u2019s mostly for HOCs and component libraries (who wouldn\u2019t agree on the same prop name).", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 19:53:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985244347804381187", "body": "@Canfie1d I\u2019m not sure what you mean. File an issue? We\u2019re using Yarn for local development", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 19:52:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985181910153482241", "body": "RT @brian_d_vaughn: Only piece left is to figure out how to use subdomains for this (if any of you may know) \ud83d\ude09\n\nhttps://t.co/hegy6U1hw5", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 15:44:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985157022508376064", "body": "@Jonas_Pauthier In particular some arguments against it: https://t.co/3ULIIvdT8c", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 14:05:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985155947436834816", "body": "@lifeiscontent I don\u2019t know, I\u2019m not working on it or thinking about it. You\u2019re welcome to help maintain if you use it actively \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 14:00:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985155631727472640", "body": "@aaronplanell Depends on what you want to test? \ud83d\ude42", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 13:59:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985155509803241473", "body": "@Jonas_Pauthier There\u2019s been dozen of discussions, here is the most recent one https://t.co/RL2tt3x1Cf", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 13:59:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "985154532668854272", "body": "Though unrelated to modules, this reminds me of how React Suspense works. Since the render phase is pure, we can start doing CPU work while still waiting for IO. https://t.co/sesrROK1BO", "favoritedCount": 64, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 13:55:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984957392738807810", "body": "@jamiebuilds Do they all need to be in the initial bundle? Seems like prosemirror and friends could be progressively enhanced from an input. Or is this not about the main bundle?", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 00:51:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984956687546281987", "body": "@jamiebuilds Curious\u2014is there a longer trail? I tried to add up the numbers in the right column but only got to ~250 (out of 700).", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 00:49:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984955490139598849", "body": "Disclaimer: I love the Node ecosystem and encapsulated build environments \ud83d\ude0e", "favoritedCount": 102, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 00:44:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984952750038450177", "body": "Great blog https://t.co/bkOdZKFnE5", "favoritedCount": 37, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 00:33:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984951104315195392", "body": "When your workshop\u2019s first step is to install the dependencies https://t.co/hphtOP2b4m", "favoritedCount": 1017, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 14 00:26:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984891589444227073", "body": "TIL this exists https://t.co/wu1Lte9qL9", "favoritedCount": 132, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 20:30:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984872024576266240", "body": "@_joshburgess I haven\u2019t seen that, no. @aweary planned to play with it :-)", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 19:12:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984871884176097280", "body": "@Velveeta I wouldn't expect this to cause errors or warnings, want to share a repro?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 19:12:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984859723391471617", "body": "@Velveeta Not sure, can you share reproducing example? I'd only expect this to happen if you tried to use react-dom/server inside react-dom or similar", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 18:23:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984858363740778506", "body": "@4iAmAve No, please move side effects (like API calls) to componentDidUpdate", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 18:18:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984846906013683712", "body": "RT @JanelleCShane: When machine learning is astonishing - I collected some highlights from a paper on algorithmic creativity\nhttps://t.co/a\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 17:32:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984833354888568833", "body": "@PhilippSpiess @brian_d_vaughn Does this help? https://t.co/WbrgsosYac", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 16:39:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984833266342678530", "body": "@GabeRicard @brian_d_vaughn Does this help? https://t.co/WbrgsosYac", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 16:38:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984833158939140096", "body": "@sillero @brian_d_vaughn Does this help? https://t.co/WbrgsosYac", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 16:38:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984832425082671105", "body": "Yesterday @brian_d_vaughn asked what was confusing about 16.3, and React.forwardRef() documentation came up. With his and @duailibe\u2019s help, we rewrote it to focus on a simpler example. Check it out!\n\nBlog post section: https://t.co/9lZXyOPMI3\n\nFull doc: https://t.co/yI17Y8pL3s", "favoritedCount": 257, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 16:35:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984829569151787013", "body": "RT @brian_d_vaughn: I heard some feedback yesterday that it was confusing to migrate from the old React context API to the new one, so I pu\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 16:24:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984824693525045248", "body": "@arthuralmeidap It's just simpler? There's nothing that being \"in\" the class gives you for a static function.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 16:04:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984782782214877186", "body": "@digi0ps You caught me", "favoritedCount": 6, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 13:18:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984781023815852032", "body": "@0xca0a https://t.co/ZhZq7QS93d", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 13:11:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984780912486440960", "body": "@0xca0a I think maybe the fix is to have getDerivedStateFromProps return something like { deleted },. And move that onRest logic to render instead.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 13:10:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984780015043739650", "body": "@0xca0a See what you mean now. Yeah it\u2019s a bit wonky. Can you extract this to isolated fiddle so I could play with it?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 13:07:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984779531708981248", "body": "@giuseppegurgone @brian_d_vaughn Not sure what you mean but gDSFP runs for first render. We ask that you still initialise state (necessary for type safety anyway) but you can leave it at state = {}, if you want", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 13:05:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984776917772570624", "body": "@0xca0a Sorry, I don\u2019t understand.\n\ngDSDP is for calculations. It runs before render.\n\ncDU is for side effects. It runs after DOM changes.\n\nIt should be always possible to split cWRP into two parts (calculations and side effects) accordingly. Can you provide a snippet where it\u2019s not?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 12:54:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984774786294394880", "body": "@0xca0a (Or rather split. The part that calculates the diff goes into pure gDSFP. The part that schedules timeout etc goes into cDU.)", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 12:46:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984774579586519040", "body": "@0xca0a Move to componentDidUpdate.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 12:45:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984773811093626880", "body": "@AdamRackis At the time, if I understand it right, the conclusion was that Babel architecture is not very well-suited to mix-and-matching such invasive transformations because there\u2019s so much derived state that must be accurately invalidated.", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 12:42:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984773501172240384", "body": "@AdamRackis No, but I also don\u2019t think it was clear what exactly was breaking. The error rate went up but there\u2019s huge amount of JS and debugging every issue in prod takes a lot of time.", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 12:41:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984773122409852928", "body": "@0xca0a But gDSFP takes both props and state as arguments.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 12:39:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984773042801926144", "body": "@0xca0a Need an example to say.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 12:39:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984763160392585217", "body": "RT @ReactAmsterdam: #ReactAmsterdam is starting in an hour. If you're not in Amsterdam for the conf, you can catch all the talks streamed l\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 12:00:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984763160392585217", "body": "RT @ReactAmsterdam: #ReactAmsterdam is starting in an hour. If you're not in Amsterdam for the conf, you can catch all the talks streamed l\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 12:00:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984761058580746240", "body": "(Thanks @sxywu for the example inspiration and discussion)", "favoritedCount": 23, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 11:51:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984758794763763712", "body": "@montogeek @NaviMarella @kentcdodds I think the person asking might be thinking that those packages are somehow shipped to the user.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 11:42:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984758512063479811", "body": "Tip: if you end up using getDerivedStateFromProps(), don\u2019t put too much logic in it. It may be more readable to place the calculation in pure functions outside of it, and call them when necessary. https://t.co/65ZGEzjB5z", "favoritedCount": 642, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 11:41:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984753266495025152", "body": "@AdamRackis I don\u2019t know if it\u2019s more solid now (very well may be), but I hope this is helpful to consider. On the other hand we weren\u2019t using Uglify either so it\u2019s not a direct comparison. Maybe Uglify wouldn\u2019t be better.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 11:20:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984752776298328064", "body": "@AdamRackis AFAIK last time we tried it at Facebook (more than a year ago to be fair) babel-minify produced invalid code in some corner cases which just kept coming up and in the end we couldn\u2019t ship it and the project was scrapped", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 11:18:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984751816226287616", "body": "@UmarCloud I see. Yeah, gDSFP is cool for this. You could also calculate directly in render.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 11:15:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984746712085487616", "body": "@UmarCloud Can you explain the use case in more detail? Why not just use props directly?", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 10:54:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984715888816467968", "body": "@NaviMarella @kentcdodds I don\u2019t know what you mean. Run \u201cnpm run build\u201d and you get a folder with CSS/JS/HTML, zero dependencies. That\u2019s the one you need to deploy. What is \u201creal time build\u201d?", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 08:52:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984715411278221312", "body": "@UmarCloud It\u2019s hard to say without seeing the code what you mean by \u201cupdate some components\u201d. React Redux bindings already update your components, is there something extra you\u2019re doing?", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 08:50:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984608693240156162", "body": "@AdamRackis 2016, tell me this isn\u2019t soulful as fuck https://t.co/7RCi07tJ6h", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 01:46:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984597143200649216", "body": "@dceddia @acemarke Yep. You can try 2.x alphas if you feel adventurous. https://t.co/gKPwNLenOT", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 01:00:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984592326264795136", "body": "@bhdecker @reactjs @acdlite I'm not sure I understand what you're referring to. Server renderer only renders \"forward\" so I don't see how \"dispatching\" while rendering could fit in there", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 00:41:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984589415010963456", "body": "@bhdecker @reactjs @acdlite Should work out of the box", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 00:29:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984586014332203008", "body": "@brian_d_vaughn @sillero Maybe also that the use case is advanced but it\u2019s not obvious so readers feel the pressure to understand it?", "favoritedCount": 8, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 00:16:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984585789693624320", "body": "@cozuya @brian_d_vaughn What would you use it for? That was kind of the point of introducing gDSFP", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 13 00:15:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984581685231669249", "body": "@ag_danil @brian_d_vaughn From the blog: https://t.co/c1TDGA80Iq https://t.co/WopL1eHisj", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 23:59:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984581358482845696", "body": "@ag_danil @brian_d_vaughn None\u2014there's no (and never has been) support for running async requests from sync renderToString \ud83d\ude42  A more nuanced answer: https://t.co/toQmLDzrTy", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 23:57:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984581035974430721", "body": "@sillero @brian_d_vaughn @brian_d_vaughn Is there some way to create automated codepens for those examples? I remember we had some GH integration but not sure what that ended on", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 23:56:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984541179793608705", "body": "@nikgraf @brian_d_vaughn @eggheadio What do you mean by couldn\u2019t figure out how it should work? The method didn\u2019t fire, or the example didn\u2019t make sense?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 21:18:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984535395495968768", "body": "@DominikWidomski Yep", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 20:55:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984534947129167872", "body": "RT @brian_d_vaughn: \ud83d\udc4b It's been 2 weeks since we released React 16.3. How's it going? \ud83d\ude42\n\nIs there anything about this release (or our docum\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 20:53:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984521841002926083", "body": "@DominikWidomski For use cases related to deriving state, yes. For other use cases typically you want componentDidUpdate.", "favoritedCount": 10, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 20:01:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984521651219025920", "body": "@ryanflorence @sxywu What if they mutate, but we decide to never apply those props? I don't think it's ok.", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 20:00:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984521476090007552", "body": "@Pruxis @agmcleod Not to be that person, but I think Wikipedia has a better explanation than I could give https://t.co/qEB7gM5vyT https://t.co/y6NjK0y4NF", "favoritedCount": 17, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 19:59:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984518703613136896", "body": "@agmcleod @Pruxis As long as you don\u2019t do side effects there and legimitiately accumulate values that\u2019s cool :-) Side effects in gDSFP are not supported.", "favoritedCount": 8, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 19:48:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984518402957037568", "body": "@sxywu @RichieAHB @ken_wheeler I don\u2019t know d3 so unfortunately I can\u2019t say if the code in the screenshot has side effects or not. But if anything changes after running the method, then it shouldn\u2019t be in getDerivedStateFromProps(). It can only contain pure calculations that don\u2019t change data/output.", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 19:47:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984517963792506880", "body": "@Pruxis @agmcleod Yes", "favoritedCount": 6, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 19:45:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984517907680866304", "body": "@sxywu @RichieAHB @ken_wheeler A side effect is when something happens that could be noticeable by the rest of the program. For example, data fetching, drawing to screen, or changing a variable or object that\u2019s used by another method/function.", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 19:45:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984517405790605313", "body": "@sxywu Can you share the whole snippet? The point of getDerivedStateFromProps() is it shouldn\u2019t mutate (aka change) anything by itself. It\u2019s not clear to me (I never used d3) what domain() does but it seems mutative. Also not clear what is this.lineGenerator() and whether it mutates.", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 19:43:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984510107923963904", "body": "Similarly, new context API is not an endorsement of using context everywhere instead of passing props. It\u2019s just an API that solves the existing problem in a way that isn\u2019t broken. It doesn\u2019t mean you should start using context more.", "favoritedCount": 252, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 19:14:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984509763735228423", "body": "Just because something is new, doesn\u2019t mean you should use it!\n\nBoth getDerivedStateFromProps() and getSnapshotBeforeUpdate() are for rare use cases.\n\nThey\u2019re new because we needed a migration strategy for legacy lifecycles. Not because we encourage using them widely. \ud83d\ude42", "favoritedCount": 682, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 19:13:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984509395135541248", "body": "@enapupe gDSFP() is for the legit use cases. It\u2019s still supposed to be a rarely used method. We\u2019re not encouraging using it more, we just need a migration strategy for existing code using componentWillReceiveProps.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 19:11:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984509226453229568", "body": "@enapupe This is why I don\u2019t say \u201canti-pattern\u201d anymore. All nuance gets lost.\n\nCopying props into state every time is \u201cbad\u201d. Because it\u2019s often done unnecessarily due to a misunderstanding of how React works.\n\nBut! There are legit cases where you want to do this. Like accumulations.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 19:11:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984469556235243520", "body": "@modernserf Maybe putting src on &lt;video&gt; instead would help (per spec).", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 16:33:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984468980252512257", "body": "@modernserf I don\u2019t think this is related to React diffing. If you look at the DOM, React updates the src of &lt;source&gt;. The spec says this should have no effect. \ud83d\ude2d https://t.co/rdBQhT9EO7 https://t.co/vvzr3UsR18", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 16:31:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984443122259243008", "body": "https://t.co/5pqtfV9Poj", "favoritedCount": 23, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 14:48:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984254827810181120", "body": "RT @kentcdodds: In about 30 minutes I'll be livestreaming \ud83c\udfa5 my (remote) @phoenixreactjs talk:\n\n\"5 Patterns to make your React Components mo\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 02:20:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984220976022982657", "body": "RT @alexandereardon: react-beautiful-dnd 7.0 has shipped \ud83d\udea2\ud83c\udf89\n\nHighlights:\n\n\ud83d\udc69\u200d\ud83c\udfeb Semantic table reordering now supported\n\ud83d\udc7e React.Portal suppor\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 12 00:05:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984171950980378625", "body": "Reduce breaks my brain a little bit, but here\u2019s a typical (for me) thought process behind figuring out how to use it https://t.co/Zl72qCXTjp", "favoritedCount": 166, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 11 20:50:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984171662454198272", "body": "@0xca0a https://t.co/Zl72qCXTjp", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 11 20:49:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984144613085761536", "body": "@fhadsheikh https://t.co/YRn6sn3KCF", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 11 19:02:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984121459990724608", "body": "Thanks to @brian_d_vaughn for continuously responding to community feedback on the new React APIs! If you\u2019ve wondered why getDerivedStateFromProps() doesn\u2019t take prevProps as an argument, here are some considerations that explain this decision: https://t.co/XITptMQF5A", "favoritedCount": 107, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 11 17:30:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984104099376517120", "body": "RT @jabur_guilherme: Today we will have a @dan_abramov Q&amp;A session on React Brasil slack!! at 19pm London time. \n\nJoin us:  https://t.co/nh\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 11 16:21:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984102762865745920", "body": "@LesSzklanny @acdlite No. But docs need to strike a balance between explaining a concept and flooding people with details. We don't even say \"virtual DOM\" in the docs anymore because the concept is so widely misunderstood. If you want details, this might help: https://t.co/pFJd1HrK1c", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 11 16:15:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "984099540939755520", "body": "@LesSzklanny @acdlite It is referring to this particular example (in which we do). In this example there's no mention of components. Components are introduced in the next section.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 11 16:03:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983871677288386561", "body": "RT @timdorr: Redux 4.0.0-rc.1 is ready for consumption. Please give it a try so we can get the final 4.0.0 release out soon!\nhttps://t.co/s\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 11 00:57:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983869993455640578", "body": "RT @MylesBorins: The Coding Interview: an approach to minimize anxiety and improve chances of success\n\nhttps://t.co/d74EZHhQGa", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Wed Apr 11 00:51:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983847019356872705", "body": "@mperrenoud @reactjs You can check out https://t.co/g2iUZEe3bh for start, maybe ping @brian_d_vaughn in case he has new thoughts or pointers", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 23:19:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983843452608765953", "body": "@mperrenoud @reactjs You could look back at https://t.co/HKKqnI5K6R before the 16.3 commits, all docs are there. Longer term we want to build a switch for docs but it will take time and effort. I don't think there were removals in the docs\u2014if you learn about new methods you can mentally exclude them.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 23:05:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983824239982710784", "body": "@rodrigobac I\u2019m not sure what you mean by this", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 21:49:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983764657038032897", "body": "RT @jsconfis: Clear your schedule! Videos from JSConf Iceland 2018 are up. \ud83d\ude40\n\nhttps://t.co/5B5E1mujcQ", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 17:52:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983757485155799045", "body": "RT @ReactPodcast: \ud83d\udd25 NEW: episode 06 with @acdlite, where we do a deep dive into everyone's favorite topic, ASYNC REACT! \ud83e\udd23\n\n\ud83c\udfb5 iTunes https:/\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 17:23:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983732153392476162", "body": "@syllaband What is the point of testing this? It sounds like you want to test React itself (which we already do). I guess you could use test renderer though.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 15:43:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983728770266705920", "body": "@syllaband Depends on what specifically you want to test?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 15:29:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983711399766642688", "body": "@Meligy @BenNadel The problem with allowing its use before mounting is that this encourages people to create subscriptions before mounting (that call setState). But those subscriptions will never be cleared in many cases (server rendering, error handling, async rendering).", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 14:20:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983711152738795520", "body": "@avraamakis @react_js At FB, we\u2019ve run a codemod to prefix all methods with UNSAFE_ alias (https://t.co/UbERMeBfrL). Then individual teams can adopt &lt;StrictMode&gt; (https://t.co/PX4nIyMMyG) to display warnings and start migrating to new lifecycles. Not urgent.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 14:19:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983710746524749824", "body": "@Meligy @BenNadel I understand now, there\u2019s two warnings with similar warnings, but only one is about memory leak. The other one is just about setState() having no effect (because the call is useless before mounting). We\u2019ve changed wordings for both in 16.3.1 to be clearer.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 14:18:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983710336724488192", "body": "RT @fbsecurity: Today, Facebook launches its Data Abuse Bounty so that you can report any misuse of data by app developers. https://t.co/Dq\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 14:16:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983707844309643264", "body": "@Meligy @BenNadel This warning (not an error) tells you the app has a memory leak. I understand you may not be happy that it shows up, but if React silently did nothing, it wouldn\u2019t solve the memory problem. You need to clean up subscriptions on unmounting.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 14:06:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983706602866962432", "body": "@E_L_Pol @reactjs @udemy Start with official docs? https://t.co/UuHCiPFnCb", "favoritedCount": 13, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 14:01:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983706229821378562", "body": "@avraamakis @react_js There were no breaking changes (it\u2019s a minor release) so no. What do you want to update?", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 14:00:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983510971485507584", "body": "RT @0xca0a: I finally found the time to publish a formal introduction \u201cWhy React needed yet another animation library. Introducing: react-s\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Tue Apr 10 01:04:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983479073136627715", "body": "@bogas04 @GabeRicard @reactjs Note class fields aren\u2019t ES6. They\u2019re an experimental stage 3 proposal.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 09 22:57:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983476248444833792", "body": "@kentcdodds @jordanpittman When [1] needs to become [id] in example above, someone will concatenate strings instead of promoting it to a separate argument because that\u2019s what the API encourages. With an arrow, you use normal JS to access so it\u2019s clear how to use dynamic keys with no ad hoc syntax subset.", "favoritedCount": 18, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 09 22:46:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983475550479114242", "body": "@kentcdodds @jordanpittman Curious why? Strings are not statically typable, incompatible with any advanced compilation strategy like GCC, not always clear whether they need to be updated or not when changing API, etc.", "favoritedCount": 19, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 09 22:43:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983470479083220992", "body": "@swyx Sorry, that's a template we copy paste between projects :-( Here's the real one: https://t.co/vqGm5bP0SZ", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 09 22:23:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983447516325777408", "body": "@Swizec @ggrgur No", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 09 20:52:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983428341159079936", "body": "@ohsully42 @chriswearshats That's the plan but unfortunately there are many other things we're busy with so we didn't get to it yet", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 09 19:36:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983408780623908865", "body": "@chriswearshats You can look at source in https://t.co/LaZdhzl3sc, or build it yourself from that branch", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Mon Apr 09 18:18:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983131779296055296", "body": "@futuraprime @reactjs In general we don\u2019t recommend inheritance for React components. But nothing keeps you from overriding it on subclass. Can you share more details about how you planned to use it?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 08 23:57:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983094032577519620", "body": "@ManuelBieh @ryanflorence @m_kruschke FWIW in this case I agree doing it in the constructor probably makes more sense because even if ESLint rule wasn't there, somebody would reorder them \"for consistency\" anyway and break", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 08 21:27:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983091743448059904", "body": "@davidhbeck Have you tried create-react-app? Should give you one out of the box, no effort to set up.", "favoritedCount": 58, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 08 21:18:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983086126679445504", "body": "There\u2019s a soundcloud! Hi @whoa_olli I like your music https://t.co/vaJzNVPitO", "favoritedCount": 14, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 08 20:56:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983084413423677441", "body": "Currently digging this, it\u2019s a pity it probably has like 3 listens https://t.co/E3UCTYj3Yo", "favoritedCount": 14, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 08 20:49:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983083553088040961", "body": "@sindarknave Totally forgot about them, thanks! Just what I wanted", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 08 20:45:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983082006841118720", "body": "Looking for something like Penguin Cafe Orchestra but with wonky glitch", "favoritedCount": 26, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 08 20:39:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983079638321844225", "body": "@ManuelBieh @m_kruschke @ryanflorence You could also memoize generated object in render. But putting a function in state seems simpler :-)", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 08 20:30:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983076772102262787", "body": "@jaredpalmer @apollographql Didn\u2019t latest react-scripts fix work? https://t.co/VOwb4erGVa", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 08 20:19:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983075509075697665", "body": "@m_kruschke @ManuelBieh @ryanflorence Render shouldn\u2019t mutate state. There are dozen things that could go wrong but it\u2019s easier to remember this rule \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 08 20:14:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983058472970457089", "body": "@futuraprime @reactjs It\u2019s implemented \ud83d\ude42 Did you update both react and react-dom? Provide a full example please.", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 08 19:06:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983056853709082624", "body": "@m_kruschke @ManuelBieh @ryanflorence No, don\u2019t mutate state in render please.\n\nThe solution is to declare onChange before state \ud83d\ude42\n\nonChange = ...\nstate = ...", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 08 18:59:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983019363623153664", "body": "@pshrmn @acdlite Is this same as https://t.co/LbyMYGY2GT?", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 08 16:30:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "983000010836119552", "body": "RT @VladBezden: I'm reading 'The Road to learn React' book by @rwieruch It's a great book with latest 16.x features of #ReactJS It's contin\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sun Apr 08 15:14:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982690433288622080", "body": "@fu5ha Yes, but particularly interested in cases where it has some other semantics than a closure", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 18:43:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982689185827119105", "body": "@billyquith I\u2019m interested in cases where the behavior is different from closures. Not sure how\u2014that\u2019s what I\u2019m wondering about! https://t.co/PUYRA2qzqy", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 18:38:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982688932096892930", "body": "@WickyNilliams The cases where the practical difference exists are exactly the ones I\u2019m interested in \ud83d\ude42 I don\u2019t know but curious if any languages have an unusual twist on this", "favoritedCount": 9, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 18:37:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982687898842681345", "body": "I remember Visual Basic had a \u201cStatic\u201d keyword that persisted local variables between function calls. I think C also has that. Do you know any other languages (exotic ones are fine) that have first-class support for perserving some local state in a function?", "favoritedCount": 111, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 18:33:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982675576828899328", "body": "RT @left_pad: I wrote up some updates on the last month, some goals, some ideas, topics for next posts, and random thoughts\nhttps://t.co/PT\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 17:44:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982639114716622849", "body": "RT @acemarke: Reminder: my \"Redux Fundamentals\" workshop in New York City is in less than 2 weeks! If you've been looking to get started wi\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 15:19:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982635816722882560", "body": "This perspective is why @munificentbob\u2019s writing resonates with me, I felt the same way about languages and libraries https://t.co/natNG8CZT6 https://t.co/MbODt2KkQU", "favoritedCount": 633, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 15:06:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982629495621521408", "body": "RT @type__error: Can anyone recommend some good meetups in London that are tech-focused but not specific? (i.e. ones that would be good to\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 14:41:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982628526418472960", "body": "@wojtekmaj91 @reactjs Yep \ud83d\udc4d", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 14:37:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982628385334718464", "body": "@aliglenesk @radubrehar That\u2019s only relevant for performance critical code that runs thousands of times per second. In app code I\u2019d use Object.assign.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 14:37:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982627192181051399", "body": "@wojtekmaj91 @reactjs Seems like it broke on iOS https://t.co/razg3FzKkc", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 14:32:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982600686079827968", "body": "@nikgraf @FezVrasta @mtrebizan @acdlite No, in this case you want setState in cDU to update it", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 12:47:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982450696971804678", "body": "@paulhtrott @rianschmidt @reactjs This talk might explain \ud83d\ude42 https://t.co/HsM7BprCf6", "favoritedCount": 91, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 02:51:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982449554099490816", "body": "RT @munificentbob: Happy Friday, everyone! What better way to start the weekend early than by hacking on a stack-based VM in C! I got a new\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 02:46:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982439605948571648", "body": "@samanthabretous @reactjs Hope that helps, happy to answer more questions! In general we always post about these things on our blog so usually you can find answers there.", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 02:07:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982439478311706625", "body": "@samanthabretous @reactjs One more thing to note: as mentioned in the blog post, there are no actual deprecation warnings enabled in 16.3. We\u2019re first waiting for major ecosystem libraries to update\u2014to reduce the noise before the warnings are enabled.", "favoritedCount": 10, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 02:06:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982439239882297344", "body": "@samanthabretous @reactjs Semantic versioning allows to add deprecation warnings in a minor version (or, rather, semantic versioning doesn\u2019t specify anything about warnings AFAIK). Our strategy has always been to warn in minors and break in majors: https://t.co/KEdOYFvNgC", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 02:05:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982438771290451969", "body": "@samanthabretous @reactjs No breaking changes in 16.3 (or any other minor release): https://t.co/a3ybmcbvrH\n\nIndeed, as always, deprecations are gradual and the actual APIs don\u2019t change until next major version. Your code still runs. https://t.co/rNjjkwjVWW", "favoritedCount": 50, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Sat Apr 07 02:03:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982396047497617408", "body": "RT @vaidehijoshi: It\u2019s finally here! You can now watch my and @saronyitbarek\u2019s closing keynote from @EmberConf. I really loved giving this\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 23:14:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982391631176458240", "body": "RT @paulhtrott: Questions for the @reactjs fans out there. Why use react and not jquery? What is react giving me that\u2019s so special that I c\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 22:56:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982374449256247296", "body": "RT @gatsbyjs: We now have a RFC repository for planning and discussing major changes \u2014 following the lead of OS projects like @reactjs @yar\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 21:48:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982368754200907776", "body": "RT @stvkoch: I just published \u201cHow to build your own React-Router with new React Context Api\u201d https://t.co/IK0UueyxWo", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 21:25:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982331058111893504", "body": "@_gingur If you can provide an example where you think new way leads to more renders, please do, otherwise it\u2019s hard for me to comment. I think there\u2019s some misunderstanding going on.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 18:55:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982315821690220544", "body": "@_gingur Your sandbox is broken because you\u2019re comparing to prevState (which doesn\u2019t contain anything) whereas you meant prevProps. This one works: https://t.co/t7DIXvXv89", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 17:55:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982315319493570561", "body": "@_gingur If the work you\u2019re doing is async you\u2019re going to have an extra render anyway. Because it won\u2019t finish in time for the rendering. If the state update is known synchronously then you can do it in the static method.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 17:53:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982304730809602049", "body": "@OrlandPetoshati No", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 17:11:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982304660508823552", "body": "@_gingur It\u2019s not a good place for side effects (which is why it\u2019s static), use componentDidUpdate instead. https://t.co/iRwO6RbA53", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 17:10:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982284634745638917", "body": "@BogdanSoare @brian_d_vaughn @wesbos https://t.co/TduYxieikz", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 15:51:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982284259812691968", "body": "@danrot90 @chirimoya It probably will be", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 15:49:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982281202852876288", "body": "@FUKAIdesign @EdwardTufte This version hides uncommon methods by default: https://t.co/sJvqAL66nw", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 15:37:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982281120569053184", "body": "@DanShappir @FUKAIdesign The alternative is that you need to re-learn everything if React stagnates and becomes irrelevant \ud83d\ude42", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 15:37:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982280918483308544", "body": "@jonikorpi @hellobalint Here\u2019s a version that hides uncommon methods by default: https://t.co/sJvqAL66nw", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 15:36:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982280651985571840", "body": "@edimitchel Five years of use cases there \ud83d\ude43 Here\u2019s a version that hides uncommon methods by default: https://t.co/sJvqAL66nw", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 15:35:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982280301501140994", "body": "@dburles Here\u2019s a version that hides uncommon methods by default, hope it\u2019s simpler! https://t.co/sJvqAL66nw", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 15:34:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982278149491904513", "body": "Check out this interactive version by @wojtekmaj91! https://t.co/sJvqAL66nw", "favoritedCount": 17, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 15:25:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982271089408557058", "body": "@FezVrasta I think you answered it in your tweet: we want them to be very specific. If it's componentDidRender, it (1) gives wrong impression that it fires after every render, (2) that it works on server side, (3) that you're free to do anything there (which you're not)", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 14:57:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982270738559188995", "body": "@wpcarro yeah, will work in Babel 7", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 14:56:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982253448836956161", "body": "RT @wojtekmaj91: I've created @reactjs lifecycle methods diagram based on @dan_abramov's image. Fully interactive and accessible. Happy cod\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 13:47:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982245940655341569", "body": "@iamlucasmreis https://t.co/zlrIarSI7K", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 13:17:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982216244769116166", "body": "RT @kwuchu: I spent the past few months building a tool to help you make money from your blogs, web apps, and open source projects! @trysee\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 11:19:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982211090778959872", "body": "@ztaaz Maybe when the alphas are usable", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 10:59:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982211001708724224", "body": "@pedrasmachado Sure", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 10:58:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982080103122432005", "body": "@chad_b_morrow @flyosity No problem, I totally understand \ud83d\udc4d", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 02:18:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982079402078072832", "body": "RT @thlorenz: Liked the turbolizer hidden inside v8 tools so much that I pulled it out and made it a bit more convenient to use. Thanks to\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 02:15:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982078445466341376", "body": "@chad_b_morrow @flyosity If you\u2019re ever in London happy to chat \ud83d\ude42 Unfortunately anything I can say here will be torn out of context", "favoritedCount": 18, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 02:12:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982075719898554368", "body": "RT @jaredpalmer: Fun thought experiment: \n\nHow many times a day does React call render() around the world?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 02:01:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982075469725093890", "body": "@chad_b_morrow @flyosity Here\u2019s the exact opposite criticism from a few days ago: https://t.co/WzZVXpxB85. I agree there\u2019s plenty to criticise FB for but this seems to be a situation where anything is being interpreted in the most negative way.", "favoritedCount": 18, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 02:00:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982073636667478016", "body": "@chad_b_morrow @flyosity Have you read the article?", "favoritedCount": 8, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 01:52:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982072609524379649", "body": "RT @roshangautam0: @jsconfeu @jsconfis @dan_abramov @aweconf Please help us spread the word. We are trying to conduct the conference for th\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 01:48:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982072398018203648", "body": "@treshugart If it\u2019s just new lifecycles, add react-lifecycle-compat polyfill and it could be a patch. For context API, make it a major (IMO).", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 01:48:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982069231876562944", "body": "RT @apollographql: If we did an Apollo team AMA, what kinds of questions would you want to ask?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 01:35:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982068719366164482", "body": "@wycats @sebmarkbage It\u2019s good when @sebmarkbage does it, but not good when someone else does it to @sebmarkbage", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 01:33:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982049336606502915", "body": "@sebmarkbage Pure-shame not, lest you be pure-shamed", "favoritedCount": 27, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 00:16:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982049096516210695", "body": "@wojtekmaj91 Also I would move the checkbox to center below the chart, make it large and very prominent, and turn it off by default", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 00:15:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982048939607318528", "body": "@wojtekmaj91 Bug: https://t.co/uAF1RSQVzZ", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 00:14:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982045564723453952", "body": "@wojtekmaj91 I'd omit getSnapshotBeforeUpdate too. + maybe add animation on switch? :-)", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 00:01:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982045384359993345", "body": "@notbrent @browniefed Interesting. Maybe has something to do with how native views are allocated and in which cases they might be optimized away. I don\u2019t really know this part", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Fri Apr 06 00:00:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982038950125727748", "body": "@notbrent @browniefed Example?", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 23:35:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982038842034311168", "body": "@notbrent @browniefed I think it wasn\u2019t exposed because nobody used it, not because it\u2019s bad. cc @sebmarkbage we can expose it properly", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 23:34:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982031946980167680", "body": "RT @MrAhmadAwais: \u26a1 #Gutenberg 2.6 \ud83d\udc09\ud83d\udca7is out! Lots of changes and new stuff. \n\n\u2705 Drag/drop for sorting blocks\n\ud83d\udcbb Extensibility APIs\n\u269b React 1\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 23:07:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982030018296631296", "body": "@notbrent Core React feature. Just like error boundaries etc", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 22:59:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982029874847154177", "body": "@wojtekmaj91 Hey, https://t.co/bbL8I7Yrm6 is super cool. Do you think it's possible to add a checkbox that hides the \u201crare\u201d lifecycles? That would make it more accessible to beginners I think.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 22:59:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982028668355731456", "body": "@notbrent I imagine findNodeHandle would give you a view tag that you could pass there?", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 22:54:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "982028405007929344", "body": "@notbrent In other words does RN have portals? Yes: https://t.co/DXBctDTw6V. Does it work? I don\u2019t know.", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 22:53:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981998574719373313", "body": "@WickyNilliams @threepointone That\u2019s why we didn\u2019t call it this way. Duh.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 20:54:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981997976401973249", "body": "@pmcdougl @lencioni Maybe. It\u2019s just the upper left corner.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 20:52:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981997855236870144", "body": "@collardeau Some tracks I recently liked https://t.co/WTTjvGKue7", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 20:51:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981994207823921153", "body": "@jmulans https://t.co/bH4h6cKmgO", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 20:37:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981994120255365121", "body": "@threepointone getDerivedEstateFromPops()", "favoritedCount": 23, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 20:36:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981993876696297472", "body": "@sarah_edo @threepointone cc @tomdale", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 20:35:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981991063874359296", "body": "@lencioni I thought about it but decided against because there\u2019s already a lot of detail.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 20:24:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981990821489774592", "body": "@threepointone @ryanflorence We\u2019ll just laugh AT you then", "favoritedCount": 6, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 20:23:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981982884738355201", "body": "@edvinsantonovs I like either", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 19:52:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981975860021465088", "body": "Scotch egg is the best snack ever", "favoritedCount": 112, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 19:24:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981975353139875840", "body": "@hellobalint @glitch If it helps, the diagram is pretty much all React does. So even if it seems intimidating this is 80% of the library knowledge in a single picture.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 19:22:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981972645003628544", "body": "@hellobalint @glitch For React, have you tried going through our official docs (https://t.co/lVJlqQ5Nal) or tutorial (https://t.co/q2rkjjoeUY)?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 19:11:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981970675027111937", "body": "@hellobalint https://t.co/GlblFEKhfx", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 19:03:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981970289159483392", "body": "@markoops AFAIK the problem with webforms seems to be the server in the middle of every change, not the lifecycle order :-)", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 19:02:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981969914796957697", "body": "@stephenlast It was roughly the same (one more methods) but there was no clear separation between \u201cphases\u201d so it was confusing where you\u2019re allowed to do what", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 19:00:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981963527748452354", "body": "@MQuy90 @jaffathecake @albinotonnina @thysultan @kentcdodds This is right. https://t.co/impoC7pYAm", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 18:35:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981961847980085248", "body": "@ironfroggy If you prefer a HOC-like approach, you can always build a HOC yourself. I agree the API is low level. We might provide a higher level convenience API in the future but for now having this primitive is important, and the primitive needs to be a node in the tree for it to be fast.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 18:28:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981955668310679554", "body": "@DanShappir @FUKAIdesign We can\u2019t afford to break everything either without a migration path. We have &gt; 50,000 components that need to keep working so if there\u2019s a breaking change, it has to either be opt-in or be possible to automate.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 18:04:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981946689123692544", "body": "@DanShappir @FUKAIdesign Which diagram are you referring to? With this level of detail, previous year\u2019s diagram would be just as complex, except it also wouldn\u2019t have the clear separation between phases", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 17:28:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981944779876519937", "body": "RT @dan_abramov: The methods in bold are commonly used. The rest, not so much. I know it looks a bit scary but that\u2019s five years of use cas\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 17:20:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981943551457193986", "body": "RT @siddharthkp: Exciting development \ud83d\udc68\u200d\ud83d\udcbb\n\nI'm start a daily code vlog thing to show and tell I learn!\n\nhttps://t.co/g18eVwEP2D", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 17:16:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981943395278098432", "body": "The methods in bold are commonly used. The rest, not so much. I know it looks a bit scary but that\u2019s five years of use cases right there. \ud83d\ude42 If you\u2018re new to React, the ones in bold are the ones you should learn. The rest will follow.", "favoritedCount": 67, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 17:15:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981942444018282496", "body": "@ironfroggy Curious, why? \ud83d\ude43", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 17:11:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981940706674724865", "body": "@sompylasar Feel free to braindump in an issue when it\u2019s more organized", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 17:04:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981940390784847872", "body": "@FUKAIdesign Yeah those priorities are conflicting. That\u2019s why I\u2019m not comfortable putting it in docs yet. I think if we make it interactive with checkbox to reveal less used methods then it should be OK.", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 17:03:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981940143958450176", "body": "@tjallingtolle @BenLesh @kentcdodds File an issue in docs? We should add it, people keep asking", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 17:02:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981938503150948355", "body": "@sompylasar It\u2019s hard to discuss without specific examples. But I don\u2018t see anything that \u201cold\u201d React solves that \u201cnew\u201d wouldn\u2019t. If anything the model adds capabilities.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 16:55:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981938235067772931", "body": "@FUKAIdesign If you only look at bold methods, does it still look complex? The rest are for relatively uncommon use cases which nevertheless accumulate over the years if you want to solve problems in apps.", "favoritedCount": 10, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 16:54:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981927921123299328", "body": "@sompylasar I\u2019m struggling to understand a specific problem that would relate to this abstract description", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 16:13:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981927716919406592", "body": "@oriSomething @kentcdodds Yes (although instead of cWRP you should use the new gDSFP). But in some use cases the whole point is to render first. For example to measure DOM node to position a tooltip. Of course in other cases it\u2019s better to avoid setState in cDM/cDU.", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 16:13:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981926564936941569", "body": "@PAkerstrand @albinotonnina @kentcdodds If you read from it, yes, but some use cases are impossible to implement otherwise (e.g. measuring a DOM node to position a tooltip). Even in that case, React does what it can to minimize thrashing: https://t.co/1rTOrN8Aci. But sure, setState in cDM is not great.", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 16:08:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981926161889611778", "body": "@timarney You'd remove the Provider. https://t.co/560ezG2X0b", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 16:06:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981925990845833216", "body": "@AndresCalabrese @timarney Please no, anything with _ is a private API and shouldn\u2019t be used unless you\u2019re fine with breakage in patch versions.", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 16:06:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981913984155766784", "body": "@bhongbhibhat Same from React\u2019s point of view", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 15:18:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981913810016636928", "body": "@timarney What do you mean by \u201cdon\u2019t pass a value\u201d and \u201cdoes not work\u201d? Default value is used if there\u2019s no matching Provider above. Useful e.g. for unit tests.", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 15:17:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981911527308570624", "body": "@vitalii_akimov I\u2019m just not sure if your question is about lifecycle changes because this particular capability has not changed. Longer term \u201csuspense\u201d is the preferred solution to this", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 15:08:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981910470687952901", "body": "@hypnos_phi \"React updates DOM and refs\"", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 15:04:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981910404384346112", "body": "@LuizAdolphs https://t.co/bH4h6cKmgO", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 15:04:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981910269080363008", "body": "@dburles Have you tried making the same chart a year or two ago? It wasn\u2019t any simpler back then. Open to your suggestions on how to simplify the lifecycles without dropping important use cases or performance.", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 15:03:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981909807677362177", "body": "@chaichaijay Dotted means \u201cmay be paused/aborted/restarted\u201d.", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 15:01:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981909362242408448", "body": "@dev_drprasad That wouldn\u2019t be a big problem, but people tend to do all sort of stuff in componentWillMount, some of it clearly is a side effect", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 15:00:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981907014652780545", "body": "@jaffathecake @albinotonnina @thysultan @kentcdodds Yep! It's a bit confusing because we don't rely on JS stack for components and instead implement our own. So we just have a while loop https://t.co/j4XrNYkNbt", "favoritedCount": 7, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 14:50:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981906602130276358", "body": "@jaffathecake @albinotonnina @thysultan @kentcdodds setState doesn\u2019t actually do the work, it just sets a flag. React checks this flag after executing all componentDid* methods.", "favoritedCount": 5, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 14:49:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981905773696561152", "body": "@jaffathecake @albinotonnina @thysultan @kentcdodds Why a microtask? React processes setState in componentDid* synchronously. It\u2019s basically like\n\nwhile (hasMoreUpdates) { // setStates will appear here\n  doUpdates(); // may trigger cDM/cDU\n},", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 14:45:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981905473233440768", "body": "@nerdblogpl https://t.co/toQmLDzrTy", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 14:44:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981905436109672448", "body": "@sompylasar I don\u2019t understand what you\u2019re asking", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 14:44:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981905055979892736", "body": "@WickyNilliams Note that lib has an update that should fix this", "favoritedCount": 2, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 14:43:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981904946546130949", "body": "@albinotonnina @kentcdodds Seems right", "favoritedCount": 4, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 14:42:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981904823560933377", "body": "@zwirw No plans yet but maybe", "favoritedCount": 1, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 14:42:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981904768351309825", "body": "@vitalii_akimov In that case how could this work before?", "favoritedCount": 0, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 14:41:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981901443123818496", "body": "@WickyNilliams My guess is you see weird issues because your HOC copies all static methods onto outer wrapper, including gDSFP", "favoritedCount": 3, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 14:28:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981901084414398465", "body": "@albinotonnina @kentcdodds I didn\u2019t mean React is doing something special to \u201cyield\u201d, it\u2019s the other way around. Since React keeps executing updates scheduled during componentDidMount immediately, browser can\u2019t update the DOM. When React stops executing them, the browser can. That\u2019s it.", "favoritedCount": 14, "location": "London, England", "followers": 117923, "friends": 808, "timeStamp": "Thu Apr 05 14:27:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981901084414398465", "body": "@albinotonnina @kentcdodds I didn\u2019t mean React is doing something special to \u201cyield\u201d, it\u2019s the other way around. Since React keeps executing updates scheduled during componentDidMount immediately, browser can\u2019t update the DOM. When React stops executing them, the browser can. That\u2019s it.", "favoritedCount": 14, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 14:27:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981900592070184960", "body": "@vitalii_akimov Why not assign initial state to the result of first iterator call?", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 14:25:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981900331507441664", "body": "@albinotonnina @kentcdodds \u201cYielding\u201d is just a fancy word for \u201call functions have finished executing\u201d :-)", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 14:24:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981898707867226112", "body": "@WickyNilliams File an issue with an example? Hard to discuss without details", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 14:17:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981898554905120768", "body": "RT @dan_abramov: Here\u2019s a high res version if you want to print it or something https://t.co/jJ25cnfPer", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 14:17:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981898378115256320", "body": "Here\u2019s a high res version if you want to print it or something https://t.co/jJ25cnfPer", "favoritedCount": 247, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 14:16:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981886188612214784", "body": "@kentcdodds Yes", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 13:28:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981885976061542402", "body": "@ezeikel_ No breaking changes in 16.3 (or any minor releases)! But I documented just the \u201csafe\u201d ones. See the blog post on our gradual migration strategy https://t.co/c1TDGA80Iq", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 13:27:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981878011644571648", "body": "@horatiomoratio Also maybe my talk will give you some insight into the kinds of problems we\u2019re solving https://t.co/YcAcDqGhMw", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 12:55:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981877591379533826", "body": "@Chudesnov Yes. There is a way to flush changes synchrously (ReactDOM.flushSync) but it can work with both setState and forceUpdate.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 12:53:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981876899516502017", "body": "@dev_drprasad Not sure what you\u2019re asking but people do all sorts of stuff in legacy lifecycles", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 12:51:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981876634520293376", "body": "@pedpess Sounds like it\u2019s declarative to me https://t.co/Gv4jL5UzqK", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 12:50:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981869076166344704", "body": "@kentcdodds If that were the case then you wouldn\u2019t be able to measure *updated* DOM \ud83d\ude42 React does update the DOM but since it doesn\u2019t yield to the browser yet, nothing is painted until further setStates are processed", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 12:20:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981867453843230721", "body": "@peterc Sure", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 12:13:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981867042709098496", "body": "@fbartho Yes", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 12:11:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981866984953524224", "body": "@horatiomoratio Always open to suggestions! We have an RFC process if you want to share you ideas: https://t.co/ZoWIDk9bbr", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 12:11:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981866500255567872", "body": "@vitalii_akimov I\u2019m not sure what you mean by markup but you can do AJAX requests in componentDidMount", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 12:09:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981866255715127296", "body": "@Naveedh18 That\u2019s not a React thing. It\u2019s a Next.js specific API", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 12:08:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981866109136719874", "body": "@dev_drprasad It means you shouldn\u2019t try to touch the DOM, fire AJAX requests, and in general do something a user would notice there", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 12:08:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981865824179933184", "body": "@pedpess I\u2019m not sure what you\u2019re finding imperative about it", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 12:07:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981865625038573568", "body": "@souporserious If you want to measure it *before* the update yes.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 12:06:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981865398109958144", "body": "@Xopsy Initial props, and the state you set in constructor.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 12:05:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981716137036668928", "body": "@benwiley4000 Yeah, I get it, but even when people do that they feel gross. So I feel this is better than churning everyone around sCU", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 02:12:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981715115610398722", "body": "@ryanflorence @tylermcginnis @alexandereardon For posterity: https://t.co/7MX2YgYiq8", "favoritedCount": 27, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 02:08:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981714896411914240", "body": "@Cephalization https://t.co/OutUCWuUbA but I nearly died aligning arrows", "favoritedCount": 45, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 02:07:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981714826211848192", "body": "@ryanflorence I hope I\u2019m right. Did it by memory \ud83d\ude43", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 02:07:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981713865812606980", "body": "@benwiley4000 1. Yes. You can, although we still ask you to define initial state. It's fine for it to be empty though and move the \"meat\" into gDSFP.\n\n2. We always said shouldComponentUpdate shouldn't have side effects, just like render. In more distant future, we'll add a class-less API.", "favoritedCount": 22, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 02:03:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981712957007695872", "body": "The separation between two render and commit phases is exactly what makes async rendering possible. Anything in the \u201crender phase\u201d is safe to throw away, suspend, or restart from scratch\u2014because it\u2019s pure!", "favoritedCount": 125, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 01:59:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981712703323607041", "body": "This might provide some visual insight into the purpose of new lifecycles in 16.3 (as well as why some lifecycles became legacy). We can\u2019t put componentWillMount/Update/ReceiveProps into either render or commit \u201cphase\u201d without violating existing assumptions.", "favoritedCount": 94, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 01:58:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981712092611989509", "body": "I just made this diagram of modern React lifecycle methods. Hope you\u2019ll find it helpful! https://t.co/LJNMae58rp", "favoritedCount": 8268, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 01:56:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981710302021586944", "body": "Omg fail. I wrote \"pure and has side effects\" \ud83d\ude02 Wait a minute.", "favoritedCount": 206, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 01:49:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981710120307617793", "body": "@swyx https://t.co/zCiiXyGeqj", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 01:48:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981710015626141701", "body": "@ryanflorence @tylermcginnis @alexandereardon https://t.co/zCiiXyGeqj", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 01:48:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981684045259198464", "body": "@swyx Btw \"setProps\" is confusing, it's not a thing anymore. Probably should mean \"parent re-rendered\".", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Apr 05 00:04:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981681578194677760", "body": "@DavidW300 @iam13islucky @JoshWComeau @rwieruch I probably wouldn't have started programming if I didn't find books and forums in my native language at the time. I agree English becomes important at some point but let's not forget lots of people learn some way as I did", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 23:55:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981680159576281088", "body": "RT @RisingStack: Let\u2019s have a sneak peek at how @reactjs got started. We collected the most significant milestones in the history of React\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 23:49:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981675256774582275", "body": "@tylermcginnis @alexandereardon Pls coordinate with us :-)", "favoritedCount": 16, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 23:29:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981627988293890048", "body": "@chantastic @brian_d_vaughn Hmm never mind. I was thinking of something else and got confused. That\u2019s not a factor.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 20:22:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981619117617766400", "body": "@chantastic @brian_d_vaughn Though same beginners understand arrows-as-arguments perfectly fine. It's just top level declaration that tends to be confusing. Another reason to use function declarations for components in docs is because it lets you define them top-down instead of bottom-up. Helps narrative.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 19:46:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981618859324166146", "body": "@chantastic @brian_d_vaughn Old context docs use arrows *for components* because I haven't looked at them in detail. I always use functional declarations in React docs because it's already overwhelming to learn React, and beginners get \"function Foo() {},\" much faster than \"const Foo = () =&gt; {},\" in my exp.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 19:45:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981579352608591872", "body": "@stevensacks Bumping Jest would've been a breaking change. We already have a few other breaking changes queued up and it makes sense to do them together. Jest hasn't changed *that* much over two majors.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 17:08:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981579151361658881", "body": "@alisson_cs I don't write React apps, at FB we just use CSS (well, something similar to CSS Modules). React has no opinions on styling at all; build it the way you like", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 17:08:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981572971465793536", "body": "@igrigorik @tdresser Here is a reproducing case: https://t.co/bP7EJVPsrn. Source code: https://t.co/VL7kvXtGS9. Third of all time spent in mark. https://t.co/ZkXEb1178j", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 16:43:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981563876977381376", "body": "@icookandcode @sebmarkbage Hmm yeah.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 16:07:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981561222838484993", "body": "@icookandcode @sebmarkbage Sorry, hard to say without a reproducing case. Maybe you can write an equivalent with ReactDOM? Ref logic should be the same.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 15:56:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981559620861874176", "body": "@igrigorik @tdresser Would you prefer an isolated case (just perf calls) or a realistic one (perf calls in a library)?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 15:50:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981557808607850497", "body": "cc @igrigorik in case it\u2019s unexpected", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 15:43:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981557088773197824", "body": "The irony: performance.mark() call ends up being the most expensive one (by self time) in Chrome. I call it a few thousand times, but still I\u2019d expect it to have less overhead. https://t.co/Ejq4NPHk39", "favoritedCount": 97, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 15:40:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981556070446346240", "body": "@icookandcode @sebmarkbage Can you provide a minimal reproducing example please? e.g. in a fiddle", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 15:36:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981551213714980866", "body": "@jdylanstewart @kentcdodds @BenLesh The comment says \"closest theme Provider\". So yes, it looks for the Provider of the same context (in this example, \"theme\" context).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 15:17:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981550954494357505", "body": "@chad_b_morrow @BenLesh @kentcdodds Yes but you don't need to wrap it around *each* component. Only those components that actually *read* it. Components in between don't need to know anything.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 15:15:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981549816520916992", "body": "@jamiedixon No idea tbh", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 15:11:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981540776193662976", "body": "@manas_sh @BenLesh @kentcdodds Yes", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 14:35:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981537689060098048", "body": "@BenLesh @kentcdodds I added some inline comments that may help. This is \u201cwithout\u201d and \u201cwith\u201d context. Any clearer now? https://t.co/gHVLHujJH6", "favoritedCount": 68, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 14:23:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981536400322412544", "body": "@mrsteel @thetrompf Asking questions is always cool", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 14:18:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981536267178356741", "body": "@glykysmalik @acdlite It would be strange if I made it up", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 14:17:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981526087560658944", "body": "@BenLesh @kentcdodds If you just point out the first screenshot where it\u2019s not clear what flows into what, that would still be helpful :-)", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 13:37:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981517608687038464", "body": "@pie6k Honestly I could never bring myself to care about this. I don\u2019t get why people think it\u2019s important. Use whatever directory structure works for your team https://t.co/JhF9zMrUHP", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 13:03:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981517289911500800", "body": "@BenLesh @kentcdodds Can you give more feedback on where the docs get confusing?", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 13:02:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981517107278921728", "body": "@BenLesh @kentcdodds Also libraries like React Redux. Context is how they work \ud83d\ude42", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 13:01:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981496078867554304", "body": "RT @dan_abramov: React 16.3.1 is out! Contains a significant performance regression fix for development mode and a few bug fixes. https://t\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 11:37:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981496012480147456", "body": "Good discussion on some corner cases for migrating away from componentWillReceiveProps https://t.co/UW2ReaG0dk", "favoritedCount": 170, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 11:37:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981492767003201536", "body": "@montogeek @acdlite Yeah I hope he\u2019ll commit it \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 11:24:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981492520839467008", "body": "@montogeek @acdlite Neither Andrew nor me have CS education. I like to tease him on Twitter but he knows I mean well.", "favoritedCount": 48, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 11:23:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981492255520419840", "body": "@montogeek @acdlite I\u2019m just kidding. This is hugely helpful. I\u2019m only now understanding how this code works.", "favoritedCount": 15, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 11:22:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981489668586950656", "body": "@acdlite \u201cIt looks like you\u2019re trying to compensate for your lack of formal computer science education by writing a paper in comments\u201d https://t.co/MsXRkzineW", "favoritedCount": 190, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 11:12:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981487393894264833", "body": "@sebmarkbage @acdlite \u201ccc @acdlite on any change to this file\u201d", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 11:03:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981486193190821888", "body": "@oieduardorabelo @withspectrum I don\u2019t understand this. What is the point of setting state and then immediately setting it to something else?", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 10:58:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981485147362091009", "body": "@wojtekmaj91 Only if there are shallow equality checks you don\u2019t want to break. But with Provider this is important because it updates deeply.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 10:54:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981484742162944000", "body": "@deoxxa Same repo as the website. The page source includes file names in code sections.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 10:52:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981456102842912768", "body": "@ManuelBieh cDU would be too late (you\u2019d have to force an extra re-render). The solution is to just keep it in state. https://t.co/TduYxieikz", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 08:59:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981357821626339329", "body": "@Heaven_xz We did, it\u2019s a known issue but it\u2019s also somewhat expected it will be slower (just not *that* slow)", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 02:28:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981343555061985280", "body": "@fortybillion *you\u2019ll see", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 01:31:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981341936190570496", "body": "RT @bookercodes: We built an open source Slack clone complete with:\n\n\ud83d\udc49 Private rooms\n\ud83d\udc49 Rich media attachments\n\ud83d\udc49 Typing indicators\n\ud83d\udc49 Read re\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 01:25:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981341665574060033", "body": "@ArnaudRinquin @kentcdodds @aweary @reactjs Of course you still can. \ud83d\ude42", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 01:24:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981341332378566656", "body": "@fortybillion If that were true it would be pretty depressing. I gave a talk about our vision for the future of React (with real demos)\u2014I hope that if you watch it, you\u2019ll what we\u2019re working towards and why. https://t.co/YcAcDqXSE4", "favoritedCount": 16, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 01:23:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981334101088124928", "body": "Thanks to @neoziro for reporting the performance regression, @alshakero for providing a reduced test case, and @mlazowik for help profiling it.", "favoritedCount": 40, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 00:54:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981333480167555072", "body": "@neoziro @reactjs Fixed in 16.3.1", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 00:51:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981333357874196482", "body": "React 16.3.1 is out! Contains a significant performance regression fix for development mode and a few bug fixes. https://t.co/wloohbA68B https://t.co/HCAk5XFP5d", "favoritedCount": 588, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 00:51:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981331781575065600", "body": "@koblas Note that if you always keep some state \"in sync\" with props like this, you don't need to put it in state at all, just use props directly", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 00:45:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981331633239293952", "body": "@koblas No, just like you don't need to merge it when you call setState", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Apr 04 00:44:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981277208667856896", "body": "RT @joulee: A behind-the-scenes look at a nuanced and hard design problem: designing for trust and context. https://t.co/uIvZpzs1P5", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 21:08:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981254506871627776", "body": "@jamiedixon @lithinn Note react-scripts@1.1.3 has a workaround for this", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 19:37:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981253480026333184", "body": "@stevensacks Yes if you also upgrade react-scripts", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 19:33:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981249520452251648", "body": "Good @fbjest first bug! https://t.co/kVFzirA1Fd", "favoritedCount": 42, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 19:18:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981249178104836096", "body": "@stevensacks react-scripts@1.1.3 includes a workaround for this https://t.co/B7Imug5nWa", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 19:16:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981245476769955840", "body": "@aweary @sophiebits @reactjs I\u2019m not concerned about side effect itself (of course any component can add listeners), but about blurring the boundary between where it\u2019s safe to do effects and where it\u2019s not. I think this API might teach beginners to put side effects into render methods.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 19:02:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981242882077020160", "body": "@aweary @sophiebits @reactjs To me it was unexpected to see a side effect in a render \u201cchild\u201d. Typically that part is pure.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 18:51:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981232302637436928", "body": "@vitalii_akimov @sebmarkbage I don\u2019t think Sebastian actively pursued this proposal. But it\u2019s helpful for us as a mental model.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 18:09:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981180546184368128", "body": "@wldcordeiro @jackiehluo I do get a lot of fuzzy questions but they\u2019re generally at least somewhat anchored around React/Redux", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 14:44:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981179019868516354", "body": "@kentcdodds @jaredLunde @acdlite Put it one level deeper? I\u2019m not sure I understand the problem. Keep the object with methods in this.state.childContext, update its inner part when necessary, pass it as value.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 14:38:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981177431208943616", "body": "@jackiehluo Yeah, the more followers the more broad messages. I think this correlates with not being a native speaker. I got a few scary ones too.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 14:31:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981174881684525056", "body": "@Koalemos https://t.co/HXoG7VVyJn", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 14:21:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981174365592145920", "body": "@valscion @kentcdodds @jaredLunde @acdlite Yes", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 14:19:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981174154199105536", "body": "@kentcdodds @jaredLunde @acdlite The state object is changed whenever you setState. React doesn\u2019t mutate it \ud83d\ude42", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 14:18:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981172835728044032", "body": "RT @mxstbr: \ud83c\udf89\ud83c\udf89\ud83c\udf89 I'm beyond excited to announce that Spectrum is now fully open source!! \ud83c\udf89\ud83c\udf89\ud83c\udf89\n\nCome and help us build the future of online co\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 14:13:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981109731019382784", "body": "@vitalii_akimov @sebmarkbage No, more about how they match our conceptual model of how React works (even if they don\u2019t match the implementation). For example https://t.co/PP31eVV6pd. Even more relevant for features like suspense and some other future stuff.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 10:02:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981108804589891584", "body": "@kentcdodds @jaredLunde @acdlite Can\u2019t you put the whole thing including methods into state, and pass value={this.state},?", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 09:59:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981107317189042176", "body": "@mg0rn No, why?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 09:53:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "981106252108521472", "body": "@jbscript No", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 09:48:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980992838266707968", "body": "RT @sarah_edo: For those just learning to code now- remember when you were learning to drive? You had to think about everything constantly-\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 02:18:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980992776442728449", "body": "@kelin_oooo @ryanflorence New object always causes a re-render. Create when you actually change the data, not on every render.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 02:17:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980987765595795456", "body": "@SavePointSam Value could be primitive, or an array. Array can be large. Can\u2019t make assumptions that shallow check is cheaper.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 01:58:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980979893285433345", "body": "@stevensacks You can already do this by using 2.x alpha \ud83d\ude42 But that\u2019s not a fix. It will break again, and again, until Jest fixes resolution logic. https://t.co/kVFzirA1Fd", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 01:26:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980972626205032448", "body": "RT @sebmarkbage: When someone catches me using mutable state. https://t.co/y9Rb1wutCM", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 00:57:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980971799419604992", "body": "@stevensacks I think 6.x should work? Really, this shouldn't have been a problem in the first place, but Jest had a bug in 20.x that causes resolving issues :-(", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 00:54:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980968962228854784", "body": "@stevensacks The issue is related to package hoisting. Can you give me output of `npm ls jest-environment-node`?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 00:43:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980966838740766720", "body": "@stevensacks Maybe you use jest-enzyme or lint-staged? Both reported issues due to this", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 00:34:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980965059563200512", "body": "@minh_ngvyen If it's static then sure, if it changes over time then it should be in state", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 00:27:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980958401193697280", "body": "@stevensacks Is that the same or a different error?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 00:01:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980958321464172544", "body": "@matt_v Try this unstable API https://t.co/4p8xXksYvs", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Apr 03 00:01:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980957009926242305", "body": "@alexeyraspopov Right", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 23:55:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980956634972225536", "body": "@matt_v Not sure I understand what you\u2019re asking", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 23:54:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980956535558889472", "body": "@stevensacks OK, can you try react-scripts@1.1.2 (just released)?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 23:53:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980951609478848512", "body": "@stevensacks File an issue with a minimal repro, we can look", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 23:34:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980950981981609984", "body": "Playing with React 16.3 context API? Don\u2019t miss this section in the docs! Majority of the examples I\u2019ve seen so far have this problem. Not a huge issue but it\u2019s not hard to optimize this. https://t.co/4maFmcpl7h https://t.co/7NzWe0fZgH", "favoritedCount": 898, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 23:31:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980944530760347649", "body": "@stevensacks Maybe you meant this fix? https://t.co/WJdCWiFN8d It\u2019s not related to Jest versions.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 23:06:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980944418621464576", "body": "@stevensacks Can you explain why a library would mandate a Jest version?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 23:05:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980910978824011777", "body": "@swyx @StephenCookDev It's a bit more nuanced. This might help https://t.co/Z2sgSWctf8", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 20:52:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980887019743100928", "body": "@mrsteel Because composition solves this in a much less fragile way. Check out this doc: https://t.co/A7Y2V8iA4m", "favoritedCount": 80, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 19:17:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980834393794269184", "body": "@ryanbas21 You won't be able to replace them with stateful components without changing that code + defaultProps/PropTypes/DevTools won't work for them", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 15:48:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980834156304326657", "body": "@phil_m_holden Seems like creating it in contstructor and attaching in componentDidMount is reasonable?", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 15:47:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980826740997197824", "body": "@kentcdodds Note the React issue is much more work than something test-only. It requires a deep dive into how React works with events and DOM, and will likely need to be a breaking change scheduled for 17.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 15:18:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980826447181942784", "body": "@gastonmorixe @Jordy_vD_ No idea. cc @cpojer", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 15:17:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980823350032371712", "body": "@Jordy_vD_ 2.x alpha does https://t.co/gKPwNLenOT", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 15:04:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980822623839014913", "body": "@kentcdodds Yes, by contributing this https://t.co/AAsrVnktnS", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 15:01:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980820154631311362", "body": "@illBap @ryanflorence Ryan is referring to the routing part. \ud83d\ude42 He has access to the talk sources.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 14:52:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980819604871303168", "body": "@Jordy_vD_ React can\u2019t add syntax support, it\u2019s only a library. &lt;&gt; syntax is supported in Babel 7.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 14:49:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980815611876999168", "body": "@kentcdodds Just note dispatchEvent will only work if you enable bubbling and node is in the document", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 14:33:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980815523545001986", "body": "@kentcdodds There was no good reason IMO \ud83d\ude2c Yes", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 14:33:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980808486144630784", "body": "@srv_kumar Not sure what you\u2019re asking exactly. Does this help? https://t.co/k1IKE1EA0O", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 14:05:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980807288444383232", "body": "@kentcdodds Looks cool. I wish it didn\u2019t rely on TestUtils.Simulate and just simulated actual DOM events though. Unfortunately that\u2019s not what TestUtils.Simulate does \ud83d\ude33", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 14:00:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980807032298229760", "body": "RT @kentcdodds: I just published \u201cIntroducing the react-testing-library \ud83d\udc10\u201d https://t.co/LPQXerQugY", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 13:59:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980792297070542854", "body": "I sense a conspiracy https://t.co/0lo8Sy7KJO", "favoritedCount": 54, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 13:01:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980788039596302336", "body": "@ken_wheeler @sebmarkbage Well, that and also deprecates APIs \u201cmaybe\u201d", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 12:44:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980787826244706305", "body": "RT @CompuIves: Exactly one year ago I released CodeSandbox \ud83c\udf82. I tweeted this for my whopping 60 high school friends at the time \ud83d\ude02.\n\nSo much\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 12:43:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980787571595841536", "body": "@ken_wheeler @sebmarkbage I thought @sebmarkbage just moves files around", "favoritedCount": 22, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Apr 02 12:42:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980552637518110721", "body": "@IslamAttrash @liran_tal @reactjs @kentcdodds @acdlite Seems so, why not? Left side would get coerced to boolean (true if it\u2019s an object and isn\u2019t null). That\u2019s fast.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 21:09:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980552294331711488", "body": "@lvrbrtsn @acemarke @kentcdodds Seems reasonable.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 21:07:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980551543018663937", "body": "@IslamAttrash @liran_tal @reactjs @kentcdodds @acdlite I don\u2019t understand what you\u2019re asking. There\u2019s no such thing as \u201cevaluating\u201d an object or an array.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 21:04:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980526591565615105", "body": "Okay. This tweet was 95% a joke. https://t.co/qLRA1wSbw9", "favoritedCount": 351, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 19:25:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980515546209902593", "body": "A bundle size comparison based on this example is making rounds but I heard it uses React 15. Anyone wants to send a PR to update it to React 16? \ud83d\udc9c https://t.co/bLT71lFwx6", "favoritedCount": 61, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 18:41:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980512019613876229", "body": "@Lord_Neto_ No, it\u2019s just how React determines whether to call a function with \u201cnew\u201d or not.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 18:27:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980511608857341953", "body": "At least that\u2019s my understanding. Maybe I misread. In any case it\u2019s not a public API. Just a fun historical quirk.", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 18:25:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980511250416328704", "body": "@Lord_Neto_ Not the best possible reason but I guess it doesn\u2019t really matter since it\u2019s not a public API", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 18:24:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980510354810732544", "body": "Ever wondered why React.Component.isReactComponent is an object instead of a boolean? I got curious and apparently it was because of Jest mocking \ud83d\ude33\ud83d\ude05 https://t.co/n63xzeIEhN", "favoritedCount": 67, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 18:21:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980507322182184962", "body": "@lvrbrtsn @acemarke @kentcdodds We can\u2019t tell you what to do but there\u2019s no harm in passing props a few levels down. If people start relying on context for everything (which I anticipate beginners might) it will be tricky to debug the data flow.", "favoritedCount": 39, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 18:08:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980501876264366080", "body": "@Komemarvin @reactjs We check fn.prototype &amp;&amp; fun.prototype.isReactComponent. Which is defined on React.Component prototype.", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 17:47:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980501520843268096", "body": "@mqll_R Did you try Create React App? Should be less than five minutes, and no manual configuration.", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 17:45:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980473961338343431", "body": "@kapowaz @inclusicomps If data is static (no insertions, deletions or sorting) then index key is fine. Otherwise use some ID from the data itself.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 15:56:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980466892321193984", "body": "RT @_ericelliott: Keywords here are \"very hot path\". Before making these changes, profile. Record before and after perf. Test multiple brow\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 15:28:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980448516039421952", "body": "@ftrain @jackiehluo If you see a way to improve the docs for people with background similar to yours, I\u2019d love to know. I agree React is sort of a meta platform which makes this a bit awkward but I hope it doesn\u2019t come across as hostile. We tried our best to teach it and are very open to feedback.", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 14:15:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980446528497176577", "body": "@davemethvin @DanielHoffmann_ My new approach does both.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 14:07:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980446434012090368", "body": "@davemethvin @DanielHoffmann_ I also tried a version where the target object had Fiber shape. It was slightly faster. But static property assignments gave the biggest boost.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 14:07:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980445966904983555", "body": "@boubiyeah It\u2019s a good tradeoff if most use cases aren\u2019t hot paths.", "favoritedCount": 16, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 14:05:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980442907990732801", "body": "cc @bmeurer in case something here is unexpected", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 13:52:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980442692114173952", "body": "@DanielHoffmann_ What matters is how easy it is for compiler to create optimized code. The less dynamism there is, the better. Builtins aren\u2019t necessarily fast if they don\u2019t have enough information.", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 13:52:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980442326706327552", "body": "@minh_ngvyen https://t.co/uTA60ZXYEF", "favoritedCount": 23, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 13:50:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980436886752817152", "body": "@osama_jandali @ftrain @wesbos I feel like they\u2019re orthogonal, \u201clearning Redux\u201d is more about learning to describe immutable updates, and you\u2019d need to do it even if you roll your own Redux", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 13:29:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980436488860196864", "body": "It\u2019s interesting how small changes can have huge impact on performance in a very hot path. Case in point: 20 explicit assignments are several times faster than an Object.assign() call. https://t.co/u8aWqRDDIL https://t.co/LN9BGr5GT6", "favoritedCount": 483, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 13:27:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980433762784772096", "body": "@ftrain @wesbos Any feedback on what you felt was most missing in docs? We\u2019d like them to be better \ud83d\ude42", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 13:16:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980433671533539329", "body": "RT @ftrain: This React 16.3 context tutorial by @wesbos was cheerful and super-helpful to watch and makes up for gaps in the docs. I went f\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 13:16:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980433573735030784", "body": "RT @inclusicomps: \ud83d\udce2 NEW: Data Tables!\n\n* Getting the structure right\n* Going responsive (and then going even MORE responsive)\n* Sorting con\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 13:15:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980431113666613249", "body": "@theKashey @neoziro @reactjs Why doesn\u2019t componentDidUpdate work for you?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 13:06:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980430634802917378", "body": "@__aakash__ @reactjs I don\u2019t understand the report but twitter isn\u2019t best place anyway. Please file an issue in CRA repo.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 13:04:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980365369360769024", "body": "Mixins are the future of React", "favoritedCount": 1354, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 08:44:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980358194043158528", "body": "@icookandcode We don\u2019t ship breaking changes in minor releases \ud83d\ude42", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 08:16:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980353359554244608", "body": "@tomasdev Usually for that you\u2019d either use state only, or lift state up (and use callbacks to request changes to it). Syncing props and state should not be common.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 07:57:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980353122404110339", "body": "@BerdArt Yes", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 07:56:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980270933511475200", "body": "@neoziro Can you try `yarn build core,dom` from this PR and see if it\u2019s better? Build output is in build/node_modules. https://t.co/u8aWqRDDIL", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 02:29:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980270675100348417", "body": "@neoziro Yeah, ?react_perf was only for 15 but we kept it in docs for now", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 02:28:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980255209917206528", "body": "@swyx @mobz @kentcdodds Sweet! Seems a bit confusing to tie it to React until there are actually React-specific pieces (which might be better placed in actual React DevTools?)", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Apr 01 01:27:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980197024044904449", "body": "There are reports of DEV mode performance regression between React 16.2 and 16.3. Anybody wants to help profile to investigate? https://t.co/T6twcOPRxd", "favoritedCount": 65, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 31 21:35:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980133419236708353", "body": "@ellotheth @MetalArend Not unique", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 31 17:23:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980132295351906304", "body": "@palashv2 https://t.co/pNbWfAqA3f", "favoritedCount": 31, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 31 17:18:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980067092589350912", "body": "RT @eye_rean: Here's my thoughts on @ReactFest and a small review of each talk! ^_^ #ReactFest @reactjs @ReactJSgirls https://t.co/O546gaX6\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 31 12:59:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980064695427223553", "body": "@ellotheth @MetalArend Beware of race conditions. For example if you fetch by ID and ID changes later (so you fetch again) but responses come out of order, it will break.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 31 12:50:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980056239076933632", "body": "RT @IAmTrySound: Hey, folks! I'm looking for remote work. Doing some frontend stuff with react. Like to open source and make things better.\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 31 12:16:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "980036013518139398", "body": "@neoziro @reactjs File an issue \ud83d\ude42 Twitter is not the best place for bug reports", "favoritedCount": 25, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 31 10:56:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979910894586073088", "body": "Fascinating Miegakure is still being worked on nine years later and actually getting closer to the release https://t.co/26hRIm7y1v", "favoritedCount": 42, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 31 02:38:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979874848909463554", "body": "@austenpayan Don\u2019t forget to update all packages including react-dom", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 31 00:15:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979874705338503175", "body": "@austenpayan No. File an issue with an example?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 31 00:15:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979844067034005504", "body": "@jamie_gaskins @clearwater_rb Can you show a code example?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 22:13:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979843886200868866", "body": "@jamie_gaskins @clearwater_rb Nice! We took inspiration from OCaml\u2019s ref objects.", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 22:12:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979843374604804097", "body": "@neoziro You mean it regressed in DEV mode? I doubt that was intentional. Can you file a reproducing example?", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 22:10:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979833091022884864", "body": "@BerdArt What you describe with gDSFP sounds like the intended solution, yes", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 21:29:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979773335201615874", "body": "@zachcodes No", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 17:32:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979745329649213440", "body": "@munu5706 1) to help ensure purity which is important because it fires during interruptible phase 2) it can\u2019t *prevent* an update if you\u2019re already getting new props \ud83d\ude42 that\u2019s what shouldComponentUpdate is for", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 15:41:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979742098873307136", "body": "First PR https://t.co/mIpVRrqfqd", "favoritedCount": 23, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 15:28:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979740291493191680", "body": "RT @acdlite: @batmansmk You don\u2019t have to learn about all of them! Some of them, like snapshot, account for edge cases that are pretty rare\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 15:21:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979738819854520320", "body": "Maybe sometimes a rewrite is a good idea. https://t.co/fVEjClsYMT", "favoritedCount": 179, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 15:15:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979738673544617984", "body": "RT @acdlite: In the last year:\n\n- Error boundaries\n- Portals\n- Fragments\n- createRef\n- forwardRef\n- Context\n- getDerivedStateFromProps\n- ge\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 15:14:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979736562870177793", "body": "@naholyr @farbodsalimi @reactjs I\u2019m not sure if you\u2019re finding some issue with forwardRef() API or this example in particular \ud83d\ude42 forwardRef() itself solves a pain point that existed for years for HOC authors. Not expected to be often used.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 15:06:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979736298008309760", "body": "@drazisil @rikschennink @codejets @reactjs Can you show full code?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 15:05:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979734430297329664", "body": "@drazisil @rikschennink @codejets @reactjs That example was using callback refs. They\u2019re in the docs: https://t.co/xpiw4jxfb1", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 14:57:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979734230833000448", "body": "@naholyr @farbodsalimi @reactjs Props never included `ref` in React, why would it be overriden?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 14:56:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979723250606452741", "body": "@zachcodes If you feel adventurous sure, but there will be more bugs than in stable releases, and more changes between alphas.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 14:13:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979722954656370688", "body": "@_xaviergonz @MitchKarajohn Can you provide a code gist? I\u2019m having trouble following because I\u2019m not very familiar with Mobx.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 14:12:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979722773319778305", "body": "@runjep No because you don\u2019t have the instance there (so you can\u2019t schedule setState). This is by design because getDerivedStateFromProps will be called in an interruptible rendering phase in async mode. So it\u2019s too early to know you\u2019ll *need* to animate.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 14:11:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979716480047730688", "body": "@_xaviergonz @MitchKarajohn Wouldn\u2019t componentDidUpdate be sufficient for this?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 13:46:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979716480047730688", "body": "@_xaviergonz @MitchKarajohn Wouldn\u2019t componentDidUpdate be sufficient for this?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 13:46:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979716246672420867", "body": "https://t.co/pfFE1gR0Kl", "favoritedCount": 110, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 13:45:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979715149518069761", "body": "@runjep https://t.co/ru9jmG9aev", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 13:41:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979715049961992192", "body": "@runjep This is a good use case \ud83d\udc4d You\u2019d need to move newlyAddedIds calculation to getDerivedStateFromProps, and setting a timeout to componentDidUpdate.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 13:40:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979714183464931329", "body": "@_xaviergonz @MitchKarajohn Can you tell me more about why you want to modify mobx objects in response to prop changes (rather than the other way around)?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 13:37:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979682265579098112", "body": "@BrunoAltinet @farbodsalimi @reactjs What is?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 11:30:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979655036233019393", "body": "@agarrharr This is illustrating existing code you might have that subscribed to some data source. The exact API isn\u2019t the point, it\u2019s just an illustration. Your code might call it differently but we\u2019re talking about a pattern.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 09:42:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979654599710773248", "body": "RT @ryanflorence: Taking advantage of the new stuff at my @workshop_me training today.\n\ngetSnapshotBeforeUpdate on React 16.3.0-rc.0 is per\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 09:40:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979654155907330048", "body": "RT @ReactTraining: \ud83d\udce1 Just released: react-broadcast 0.7.0! \n\nUse it as a polyfill for your pre-React 16.3 app that wants to use the new con\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 09:38:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979651534723174400", "body": "RT @elijahmanor: \ud83d\udcf9 What's New in #ReactJS 16.3 (15 mins) https://t.co/6KN5awhWFl\n\n\u2705 New Context API\n\u2705 New getDerivedStateFromProps &amp; getSna\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 09:28:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979650467188879363", "body": "@rajaraodv @_developit @reactjs @preactjs It would be nice to update \u201cWhat's Missing?\u201d on the website to document current missing features. Fragments, error boundaries, etc", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 09:24:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979649989768089600", "body": "@tjbainbridge @reactjs Out now", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 09:22:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979649784259760128", "body": "@NaveenS16 @elijahmanor @kentcdodds Intentional. You shouldn\u2019t need to use them often \ud83d\ude09", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 09:21:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979649520924549120", "body": "RT @farbodsalimi: Can't wait to use @reactjs 16.3; #forwardRef https://t.co/3xdHm0tcLS", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 09:20:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979649351017533442", "body": "RT @andywritescode: Woohoo! The new #reactjs context API is officially released as part of React 16.3 \ud83c\udf89\n\nIt\u2018s finally safe to use contexts\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 09:19:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979649245589450752", "body": "@speedDeveloper @reactjs 16.3 doesn\u2019t enable async rendering.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 09:19:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979648548785541120", "body": "@patrickodacre Educational content thrives on describing additions but it creates an inaccurate impression that each of them is equally important. They exist to solve particular use cases, but being a leader, React generates so much buzz around even small additions that it\u2019s hard to ignore.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 09:16:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979648093833621505", "body": "@patrickodacre If you don\u2019t fix issues: \u201cwhy is this ticket still open a year later\u201d\n\nIf you do: \u201cso many new things\u201d\n\nWe try to strike a balance \ud83d\ude42. We know it can feel overwhelming but we hope you\u2019ll find those features and fixes useful when you need them.", "favoritedCount": 83, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 09:14:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979645644448129024", "body": "@frontsideair @brian_d_vaughn Moved context. Lifecycles are technically implemented inside renderer packages. This matters eg for React Native (which won\u2019t support them yet until we update the renderer).", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 09:04:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979548432112041984", "body": "This one\u2019s for you @sophiebits https://t.co/Ts2MDBxMdy", "favoritedCount": 203, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 02:38:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979535869169324032", "body": "@webows These paragraphs apply here too. In vast majority of cases the difference wouldn\u2019t matter and you should use cDU. For rare cases where it mattes, either prime the cache (e.g. in render) or wait for a nice API (\u201csuspense\u201d) that handles this down the line \ud83d\ude42 https://t.co/yYgXh1MQAq", "favoritedCount": 14, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 01:48:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979535174487683072", "body": "@whymclovin I would prefer something that memoizes and also lazily computes first time it\u2019s retrieved. Otherwise this encourages doing more work than necessary (e.g. maybe some render paths don\u2019t use that value, or it\u2019s only used in lifecycles).", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 01:45:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979534127073513472", "body": "@JaceHensley The \u201cuncontrolled-ness\u201d could be implemented as an independent render callback component I think", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 01:41:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979529018591543297", "body": "@JaceHensley Yep\u2014but arguably not a very common use case. Also a render props-like &lt;State&gt; API would make it easy to do outside of component. Just sayin\u2019", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 01:21:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979528368076058624", "body": "@webows componentDidUpdate is your friend! https://t.co/XX3Njj14aP https://t.co/ixpadJaqzu", "favoritedCount": 42, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 01:18:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979526271985242112", "body": "@whymclovin You could parse \u201con demand\u201d when you use it (e.g. lifecycles, rendering).", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 01:10:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979525166437978113", "body": "Should\u2019ve called it getDeridedStateFromProps()", "favoritedCount": 66, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 01:06:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979523793092739072", "body": "@OyeAnuj @brian_d_vaughn Also in your example you could probably just render &lt;Provider value={this.props},&gt; instead of syncing props to state.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 01:00:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979523628306968576", "body": "@OyeAnuj @brian_d_vaughn If you already use Redux (which also uses context) I don\u2019t see the point in duplicating the same information in another context provider/consumer pair", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 01:00:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979521369900769280", "body": "getDerivedStateFromProps() is long to type. This is good. You shouldn\u2019t use it that often. If you do, something else is probably wrong.", "favoritedCount": 95, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 00:51:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979521078618968065", "body": "For many people new to React, their intuition is \u201cI need to use some value, I get it from above, therefore I need to copy it to use it\u201d. This intuition is wrong. Derived state is a rare use case. Lift state up instead. https://t.co/tBXTAygMVm", "favoritedCount": 120, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 00:49:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979520657397567493", "body": "There are cases where you can\u2019t because state truly needs to be \u201cforked\u201d from the parent data flow. For example &lt;ColorPalette&gt; gets an initial chosen color as a prop but keeps current color in the state, and doesn\u2019t report it back until you press \u201cset\u201d. But this is pretty rare.", "favoritedCount": 53, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 00:48:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979520339968516097", "body": "If your components try to update their state in response to receiving new props, think hard if you could just use props directly instead (and remove that state).", "favoritedCount": 763, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 00:47:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979516037380046848", "body": "@TheRealPomax @reactjs Updating deps is probably going to be the most annoying part.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 00:29:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979515919373303808", "body": "@OyeAnuj @brian_d_vaughn If you meant to show an incomplete example that would explain it. Please show full code.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 00:29:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979515813463052288", "body": "@OyeAnuj @brian_d_vaughn Yes but your example is a bit confusing because you don\u2019t show where user ID is coming from, and why \u201cis logged in\u201d comes from above whereas the ID is in the state. I just mean the general data flow is confusing in your example, not related to context specifically.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 00:29:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979515175308021760", "body": "@walid_mahade @SurendarViki \u00af\\_(\u30c4)_/\u00af", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 00:26:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979514855827927040", "body": "@TheRealPomax @reactjs My tweet contains a link to automated codemods. I\u2019m not sure if you\u2019re looking for them or something else.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 00:25:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979514665976909824", "body": "@MitchKarajohn Depends on whether you want to keep them in sync on updates. Why do you initialize state based on props? Note it\u2019s very rarely necessary. If you often do this, there may be a misunderstanding. You don\u2019t need to \u201csync\u201d state with props in React.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 00:24:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979514278150537217", "body": "@TheRealPomax @reactjs Not quite sure what you mean but we always provide codemods for large changes. https://t.co/MYjMc7eeID https://t.co/LCgKX9zz4z", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 30 00:22:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979500267371749377", "body": "@OyeAnuj @brian_d_vaughn gDSFP is more appropriate but it\u2019s not clear to me why you mirror props in state in the first place. Why not just pass the value you receive from props directly to context provider?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 23:27:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979499586833219584", "body": "RT @sophiebits: Being trans-friendly in an app mostly boils down to letting people change their name/username/email/photo and not keeping a\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 23:24:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979499402535587841", "body": "@jkup @ReactFest (It\u2019s not really a sticker but it\u2019s not chocolate either so I prefer to eat without it \ud83d\ude42)", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 23:23:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979498277174423552", "body": "@jkup @ReactFest It looked so inviting I couldn\u2019t resist a bite!", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 23:19:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979498142906441728", "body": "OK I won\u2019t eat the sticker \ud83d\ude35 Couldn\u2019t resist", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 23:18:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979497508270411777", "body": "Nom nom nom @ReactFest https://t.co/EQ5SmDRdoI", "favoritedCount": 138, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 23:16:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979496332711866368", "body": "RT @sophiebits: I was interviewed for this article about how to make web apps more inclusive. https://t.co/IrYuislg1L", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 23:11:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979495771023249408", "body": "@wmertens @reactjs Sure, nesting is fundamental to this feature", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 23:09:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979495436351401985", "body": "@MitchKarajohn @reactjs It is \u201cclean\u201d, please trust us on this \ud83d\ude42 That\u2019s the recommended way.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 23:08:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979495216204910593", "body": "@batmansmk @reactjs Complexity that most third party libraries have to address (often in a buggy or ad-hoc way) is still complexity, even if you wouldn\u2019t know about it by looking at React API. These problems existed before but we didn\u2019t provide any help. Now we do.", "favoritedCount": 36, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 23:07:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979484841233272832", "body": "RT @leeb: Do you maintain a JS library that uses GraphQL? I need your help preparing for the next major release! https://t.co/DdpXfCYVCn", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 22:25:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979471052689506305", "body": "@brian_d_vaughn What\u2019s up with \u201cun\u201d?", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 21:31:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979467008726175750", "body": "RT @hswolff: .@reactjs 16.3.0 is out with a brand new official Context API! I made a video giving you a deep dive into how it works. Have a\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 21:15:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979465916135157765", "body": "RT @chantastic: Which (previous) React release were you most excited for? Which feature got you so excited?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 21:10:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979463736573546496", "body": "cc @ljharb maybe react-is could be useful to Enzyme etc", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 21:02:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979463501667274752", "body": "Full changelog for React 16.3. There\u2019s a lot of @brian_d_vaughn there, but also a lot of great contributions from external folks. Thank you! https://t.co/kNkJG07DfS https://t.co/ZfsojtVNMt", "favoritedCount": 220, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 21:01:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979463046627233792", "body": "RT @brian_d_vaughn: 16.3 also introduces a new ref-forwarding API that can be helpful for libraries that make use of Higher-Order Component\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 20:59:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979463036250533889", "body": "RT @brian_d_vaughn: 16.3 introduces a new component, StrictMode, that will help you prepare your applications for our upcoming async render\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 20:59:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979463023466344449", "body": "RT @brian_d_vaughn: React 16.3 has just been published! Enjoy! \u269b \ud83d\ude01 \ud83c\udf89\n\nhttps://t.co/ltblepelJl\n\nBig thanks to everyone who participated in t\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 20:59:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979462342500110336", "body": "@oscarc168 Yes unless there\u2019s a PureComponent or shouldComponentUpdate in the middle", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 20:56:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979462231925633024", "body": "RT @reactjs: React 16.3.0 has been released! Big thanks to all who contributed. \u269b\ufe0f\u2764\ufe0f\n\nhttps://t.co/G0RYl1Pjbv", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 20:56:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979425248637542405", "body": "@morewry Sure. Still it\u2019s often framed in a way that ignores that they\u2019re not zero sum.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 18:29:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979409675836944384", "body": "@brian_d_vaughn @chantastic And your patience.", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 17:27:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979387137845071877", "body": "@bhavikcpatel I guess it seems okay. Personally I feel like the very point of action types is to make it possible to search for them across the codebase. This fails the \u201cgrep test\u201d. https://t.co/qKcqytMY6w", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 15:57:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979381721316712449", "body": "@wookiebpl When you test you usually want to mock side effects. We let you do this with context. I don\u2019t see the point in testing throwing itself.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 15:36:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979381242369060864", "body": "@sompylasar @k1sul1 @brian_d_vaughn I think the main purpose was just to make it look ugly because it should feel bad to add it to new code.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 15:34:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979380818664677376", "body": "@stubbornella User experience vs developer app experience is so often a false dichotomy. Example: https://t.co/TSOZyGgpCs", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 15:32:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979362001897115648", "body": "@wookiebpl The generic mechanism you\u2019re referring to is something we are considering for the future though.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 14:17:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979361827569258496", "body": "@wookiebpl Sure you could do something like this. But it forces you to write code defensively and always check (and propagate the result through intermediate methods). I think that makes it easier to slip up.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 14:17:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979360505088311296", "body": "RT @iamsapegin: \ud83d\udc19 React @styleguidist 6.5.0 is out!\n\n* Page per section\n* \u201cFork me\u201d ribbon\n* Limited support for named exports\n* New option\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 14:11:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979357903000866817", "body": "RT @acemarke: There's been a lot of confusion and misinformation about Redux going around lately.\n\nI just posted \"Redux - Not Dead Yet!\", w\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 14:01:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979352798063153152", "body": "@jaredpalmer @erikras @NikkitaFTW @vicqr I think @jordwalke said it. He knows a bit of React.", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 13:41:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979351146803466240", "body": "@nicklockwood @brian_d_vaughn @sophiebits @EmberFoxie Aaaahh.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 13:34:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979349425276497920", "body": "@IAmTrySound https://t.co/sSNjVKCklQ", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 13:27:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979349208800088065", "body": "@aweary @jsconfis https://t.co/sSNjVKCklQ", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 13:27:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979348969737170944", "body": "@jonikorpi https://t.co/sSNjVKTVdo", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 13:26:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979348659497299970", "body": "@ryanflorence https://t.co/sSNjVKCklQ", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 13:24:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979348602203107328", "body": "@whymclovin https://t.co/sSNjVKCklQ", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 13:24:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979348572490665991", "body": "@theUIDev @sophiebits No, just through browser rAF. https://t.co/sSNjVKCklQ", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 13:24:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979348367489806338", "body": "@bhavikcpatel Can you show the code?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 13:23:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979317375613984769", "body": "@1003Marvin I don\u2019t know. What are you trying to accomplish?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 11:20:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979161197965725698", "body": "RT @linclark: ES modules will be in all browsers soon!\n\nBut who really knows how they work? \ud83e\udd37\ud83c\udffb\u200d\u2640\ufe0f \n\nI went on a cartoon deep-dive to explai\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 00:59:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979159479492186112", "body": "@asdrubalivan Can you give me a screenshot to clarify what you mean by \u201cpartially minified\u201d?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 00:53:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979158925655322625", "body": "@RonnieRaney @reactjs Does this help? https://t.co/Q74Um8z7UU", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 00:50:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979157657574608896", "body": "@asdrubalivan Not sure what kind of source map you\u2019re referring to. What did you try to debug exactly?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 00:45:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979151889915924486", "body": "@acdlite They moved to UK", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 29 00:22:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979143099770433536", "body": "RT @monasticpanic: Hey ya'll, check out the experimental release of our un-css-in-js lib: https://t.co/sLt40FZgS9\n\nzero styling runtime, al\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 23:48:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979142320800129025", "body": "@acdlite  https://t.co/92EVJ17WJ9", "favoritedCount": 24, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 23:44:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979141806930714624", "body": "RT @acdlite: Superego: \"I should tweet more about programming. It's why people follow me.\"\n\nId: \"It's not milk if it doesn't come from a ma\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 23:42:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979130874397708290", "body": "@Meligy Depends on what kind of system you\u2019re building and the properties you want it to have.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 22:59:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979127859699699713", "body": "@Meligy React intentionally doesn\u2019t used push-based primitives like Observables as a core primitive. See here: https://t.co/WRqSsGU2a6", "favoritedCount": 44, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 22:47:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979127637623918592", "body": "RT @swyx: @ilyagelman kicking off @NYCReact!\n\nlivestream \ud83d\udc49 https://t.co/MxfLpsUPKE https://t.co/K6cvbSyxpD", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 22:46:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979105171224629250", "body": "RT @mxstbr: \ud83c\udf89 Announcing Pose: A new, declarative animation library with an incredible styled-components-inspired React API by @popmotionjs\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 21:17:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979097209638719488", "body": "Can someone pls explain this mail ad to me https://t.co/1ZFbSEQH9j", "favoritedCount": 35, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 20:45:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979095052474609667", "body": "@brian_d_vaughn @sophiebits @EmberFoxie I don\u2019t remember replying like this but I might have on some personal repo. I vaguely remember a PR with this text and that it was clearly sent as a troll and wasn\u2019t a good faith contribution. I probably reported the author for spam and GH probably banned them.", "favoritedCount": 48, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 20:37:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979092904630259713", "body": "https://t.co/UFxJ7irCdz", "favoritedCount": 32, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 20:28:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979083179809177601", "body": "@alnemec Sure, I wasn\u2019t trying to make the opposite point \ud83d\ude42 Just saw the question and figured I\u2019d answer", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 19:49:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979082775583215616", "body": "@amorenovalls @Etienne_dot_js @ReactEurope @acdlite Context is how React Redux works internally", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 19:48:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979079902984114177", "body": "RT @monicalent: Hey friends \ud83d\udc4b I'm looking for advice on where to recruit some women developers for my team \ud83d\udc69\ud83c\udffb\u200d\ud83d\udcbb\ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb\ud83d\udc69\ud83c\udffc\u200d\ud83d\udcbb Who has had success\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 19:36:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979079793110069249", "body": "@Ryagnar @wmertens @reactjs There are polyfills like react-broadcast.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 19:36:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979075168768282625", "body": "What can Firefox debugger do better for React apps? Share your feedback: https://t.co/0iQYahe9RT", "favoritedCount": 19, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 19:18:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979074953181061126", "body": "RT @jasonlaster11: A couple of months ago, we added formatted @reactjs component previews with display names, props, and state.\n\nLast night\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 19:17:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979074544651657218", "body": "@RobertWPearce @reactjs componentWillUnmount is still good though", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 19:15:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979074274622402561", "body": "\u201cWhy go with the UNSAFE_ prefix?\u201d @brian_d_vaughn explains: https://t.co/RrEJCInTyG https://t.co/rCqbs9y3DZ", "favoritedCount": 71, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 19:14:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979043849493532672", "body": "RT @evilmartians: Get a deeper understanding of @reactjs Virtual DOM and learn some quick wins to optimize your apps. Our new blog post is\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 17:13:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979038522047979520", "body": "@pablo_mayobre File a bug pls with more device details? https://t.co/HKKqnI5K6R", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 16:52:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979026275506507776", "body": "RT @jaredforsyth: happening nowwwww https://t.co/G2JQy2rRJa", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 16:03:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979021943662837760", "body": "@enesguven9 Yeah", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 15:46:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979021470780272640", "body": "RT @brad_frost: Software projects, please stop with language like \"just run `npm install ...\" \n\nWhat does `run` mean? Where?\nWhat's npm? \nE\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 15:44:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979020711896461312", "body": "@_shrynx @reactjs There are more blog posts coming, this one is focused on lifecycles", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 15:41:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979020500729987073", "body": "@MaxLatoche Yeah it's a bitmask", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 15:40:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979020376532553728", "body": "@tjbainbridge @reactjs A week or two. I said the same two months ago though.", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 15:40:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979012785345572864", "body": "@yorchvivas Either works. defaultProps is nice for lifecycle methods in classes but shouldn't matter for functions.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 15:10:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979012671197589504", "body": "@vcapretz @reactjs No updates yet. Still unstable. Open to RFCs for a good public API though.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 15:09:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979002040138502144", "body": "RT @mobz: I've published the Lag Radar from @dan_abramov talk on time slicing in react. Variously described as the 'awesome frame drop cloc\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 14:27:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979001896001261568", "body": "@phelmphelm You can pass around extra things as explicit arguments", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 14:26:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979001751662743552", "body": "@Etienne_dot_js @acdlite Probably fine", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 14:26:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979001659748646913", "body": "@vkozulya \ud83d\ude2d why", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 14:25:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "979001540425011201", "body": "@rickhanlonii @Daajust WillUnmount is fine tho", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 14:25:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978982069572395008", "body": "@styfle @reactjs gDSFP has access to props and state as arguments. But it can\u2019t touch the instance (for example it can\u2019t set fields or refs). gSBU can.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 13:08:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978980155313082368", "body": "@phelmphelm You can always use something like Immer", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 13:00:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978980077328322560", "body": "@phelmphelm Split this into several reducers?", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 13:00:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978971968161665024", "body": "RT @reactjs: We're happy to share an update on asynchronous  rendering and the upcoming 16.3 release!\n\nhttps://t.co/bDq7YXefPw", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 12:28:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978964883894087682", "body": "@ketacode Use componentDidUpdate? I\u2019m not sure I see the problem. https://t.co/MLzmTMWrcT", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:59:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978964518792564738", "body": "@erikras @wmertens @reactjs For libs. I don\u2019t see why you\u2019d want to polyfill it for apps\u2014if you want to use a new API, use a React version that supports it.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:58:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978964239263191040", "body": "@afeno90 @reactjs Supporting it in the server renderer might take longer than that though.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:57:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978964147084972033", "body": "@afeno90 @reactjs Not clear yet. Might be in some form in 16.4 or 16.5.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:56:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978963691096936448", "body": "@boriscoder @sophiebits @rickhanlonii Yeah, it stays!", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:55:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978963562474496001", "body": "@iamdtang React compares prevElement.type and nextElement.type. If they're different, React decides these are different components and we shouldn't maintain the state (and the DOM) so it throws them away and recreates. Like if you replaced &lt;LoginForm /&gt; with &lt;SignupForm /&gt;.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:54:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978963053864767488", "body": "@cm_richards @sophiebits @rickhanlonii Facebook + Messenger + Ads + internal tools + whatever else", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:52:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978962708438675456", "body": "RT @drazisil: #100DaysOfCode Since I got so much help with my last @reactjs question (thank you very, very much) do y'all have any preferre\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:51:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978962554541297665", "body": "@ketacode Not sure I understand. Code example?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:50:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978961956383150080", "body": "@wmertens @reactjs To support both old and new React in npm components, you can use a polyfill. I\u2019m not sure if there\u2019s a way to use `getDerivedStateFromProps` if your *app* uses an old React. Maybe by patching Component.prototype? Seems fragile. https://t.co/TS5si5E1O6", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:48:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978961484788174848", "body": "Common question: if componentWillMount is going to be \u201cunsafe\u201d, what about data fetching for server rendering? https://t.co/toQmLDzrTy https://t.co/YsyttRvxOp", "favoritedCount": 185, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:46:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978960131651198977", "body": "RT @ThePracticalDev: React Suspense (A generic way for components to suspend rendering while they load async data) Q&amp;A\n{ author: @swyx },\nht\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:40:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978958530182090752", "body": "@valscion @brian_d_vaughn @reactjs Yeah so it always gives false on first render. Could be more explicit but meh.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:34:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978957909102080000", "body": "@acdlite @brian_d_vaughn @reactjs No, he\u2018s UNSAFE", "favoritedCount": 21, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:32:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978957628960399360", "body": "@pveyes @reactjs Not a React feature\u2014it\u2019s how async functions work in JS in general.", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:31:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978956744813633536", "body": "@OlegLustenko @reactjs There'll be a different blog post together with 16.3 that has the release notes. It's there. https://t.co/N8Ux0tyZ5i", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 11:27:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978946150337253376", "body": "@jkohlmann @reactjs @sebmarkbage Yeah, that\u2019s not really a viable migration path", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 10:45:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978821207574437888", "body": "@swyx @rickhanlonii Codemod will help with UNSAFE_ing them. For actually getting to an async-safe state you\u2019d gradually fix those cases and wrap fixed subtrees into &lt;StrictMode&gt; so they don\u2019t regress. Eventually the app won\u2019t have legacy lifecycles but it\u2019s okay for this to take time \ud83d\ude42", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 02:28:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978820652160507904", "body": "@wookiebpl (That\u2019s the same reason algebraic effects behave like \u201cthrow\u201d rather than some parallel execution chain)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 02:26:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978820502474149889", "body": "@wookiebpl Anything else is awkward because if you split render method in several, you\u2019d have to explicitly thread through suspense occurring in any of those. Error-prone and too verbose makes the API not worth it.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 02:26:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978820278175371271", "body": "RT @brian_d_vaughn: \ud83d\udc4b Just published a release candidate for @reactjs 16.3 to NPM!\n\nyarn add react@next react-dom@next", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 02:25:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978819770924584962", "body": "RT @sophiebits: @rickhanlonii componentWillUnmount is still OK", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 02:23:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978819763920089088", "body": "RT @sophiebits: @rickhanlonii We have 14815 results for \"componentWill\" in our web codebase.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 02:23:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978808297284349953", "body": "@wookiebpl React catches the error so it wouldn\u2019t reach the user code (save for a very rare case of try/catch in render).", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 01:37:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978808140882948097", "body": "@wookiebpl The \u201cthrow\u201d itself would be in library code (Apollo, Relay, or a cache we would provide). Not user\u2019s concern.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 01:37:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978805071289954306", "body": "@wookiebpl The approach was inspired by languages like Eff that has first-class support for algebraic effects (https://t.co/aAA7yhmiKd). There are also reasons why async/await wouldn\u2019t work well for this API. Happy to discuss if you\u2019re interested. \ud83d\ude42", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 01:24:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978801914140856321", "body": "@jlongster @brian_d_vaughn @reactjs Sure", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 01:12:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978801772050505728", "body": "@BillyWM I figured! But left it for future readers who might miss the context.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 01:11:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978800417680347136", "body": "RT @dan_abramov: * Obligatory disclaimer: this tweet is a joke, there is a gradual migration path, there are no breaking changes in minor r\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 01:06:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978800369584279552", "body": "@BillyWM We\u2019ve got you covered with migration strategies and examples! Let us know if there are any patterns that don\u2019t translate well and we\u2019ll be happy to chat \ud83d\ude42 https://t.co/DQmlhhvGDN", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 01:06:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978799879043547137", "body": "* Obligatory disclaimer: this tweet is a joke, there is a gradual migration path, there are no breaking changes in minor releases, etc. Don\u2019t forget to read the actual post. \ud83d\ude42 https://t.co/c1TDGA80Iq", "favoritedCount": 78, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 01:04:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978799442731130881", "body": "TLDR https://t.co/WVwc1dG3qs https://t.co/KGB2W9FNrh", "favoritedCount": 636, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 01:02:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978793067967909889", "body": "RT @acdlite: So much of React's architecture is based on stuff game developers figured out decades ago.\n\nLike double buffering. React has a\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 28 00:37:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978781911308005376", "body": "@brunnolou @iamdtang Note there are some issues with this particular approach https://t.co/AvSfAnT6Mu", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 23:52:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978781443978678272", "body": "@jlongster @reactjs We don\u2019t write a lot for the product code either. \ud83d\ude42 I was mostly referring to library code.", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 23:50:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978780462469480448", "body": "@sbogucki12 @Komemarvin I used to do .NET too!", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 23:47:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978780335591821317", "body": "@Komemarvin @sbogucki12 It should attempt to install normally and if it can't resolve DNS, fall back to offline mode. https://t.co/8jzmlhu1U8", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 23:46:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978772978921017349", "body": "@Komemarvin @sbogucki12 If you use Yarn and ran it at least once with connection then yes, it works offline too", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 23:17:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978772636074422272", "body": "RT @acdlite: @ken_wheeler @dan_abramov @brian_d_vaughn @reactjs The long term plan for server rendering is Suspense-y and has nothing to do\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 23:15:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978771328256921602", "body": "@jlongster @reactjs We\u2019ll release utilities for simulating async behavior in tests at some point later.", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 23:10:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978768029898170368", "body": "@brian_d_vaughn @ken_wheeler @reactjs Yeah please share your use cases.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 22:57:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978766846622126080", "body": "@JakeGinnivan @reactjs Mostly external side effects (that aren\u2019t safe to repeat) or code that expects will/did lifecycles to \u201cmatch up\u201d. Isn\u2019t possible in async mode where we can pause and abort rendering a tree midway.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 22:52:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978762051685318656", "body": "RT @brian_d_vaughn: @haroenv @reactjs This is why react-lifecycles-compat was created! It polyfills components so that the new getDerivedSt\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 22:33:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978761969816793091", "body": "RT @brian_d_vaughn: The @reactjs team has been working on a lot of cool things lately, and asynchronous rendering is probably the coolest.\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 22:33:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978730144935370752", "body": "@OhansEmmanuel Run `npm ls react-json-tree` to see where this dependency is coming from. Then try updating top level package. There\u2019s probably a React 16 compatible update already out.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 20:27:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978728984899964928", "body": "@sbogucki12 You can skip configuring webpack with Create React App \ud83d\udca1", "favoritedCount": 44, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 20:22:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978728654510460928", "body": "@OhansEmmanuel In other words the version of react-json-tree you\u2019re using is not compatible with React 16", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 20:21:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978728496955559936", "body": "@OhansEmmanuel The code using React.PropTypes but it doesn\u2019t exist in React 16. PropTypes was moved to another package. https://t.co/L2zPZSrVne", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 20:20:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978702589712912384", "body": "RT @ReactLondon_: We have fantastic talks from @elibelly, Cl\u00e9ment Pasteau &amp; @Alex_Lobera this evening. If you'd like to watch via the live\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 18:37:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978667799819313162", "body": "RT @Jahallahan: So @freeCodeCamp just published a chat I had with @lintonye about using React JS as a design tool :) https://t.co/R3SCq3XXTI", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 16:19:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978667599872581632", "body": "@SurendarViki Have you seen my course? I tried to keep it as simple as I could https://t.co/miApyNeXUf", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 16:18:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978665014998585345", "body": "@chofter There were a few (react-snap or something)", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 16:08:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978648113538879488", "body": "@andrestaltz @Vjeux @cmnstmntmn @jevakallio If you\u2019re ever there, ping me! We can pose in front of FB logo in the office. Haha", "favoritedCount": 15, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 15:01:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978647240930746368", "body": "@andrestaltz @Vjeux @cmnstmntmn That would be great! Ever go to London?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 14:57:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978646452095340544", "body": "@andrestaltz @Vjeux @cmnstmntmn I\u2019ve certainly felt more free to comment on anything related even a few months ago. Now I don\u2019t want to subvert the work of my colleagues through inaccurate wording that somebody will take out of context the next minute. Hope this won\u2019t be a self-fulfilling prophecy", "favoritedCount": 15, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 14:54:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978645785909833728", "body": "@andrestaltz @Vjeux @cmnstmntmn Those numbers are different because in context of JS (for example) you and I have some credibility. FB lost that credibility and needs to earn it back through hard work before the conversation can continue meaningfully", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 14:51:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978645331184439296", "body": "@andrestaltz @Vjeux @cmnstmntmn The climate is not conductive to a dialogue unfortunately. Let\u2019s just focus on doing our best work to fix those issues.", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 14:50:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978644699081838594", "body": "@andrestaltz @Vjeux @cmnstmntmn Same still applies. Will get amplified, distorted and billed as newsworthy because clicks. I\u2019m aware of the irony", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 14:47:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978610896896479232", "body": "@brayoh_k @acdlite Yeah not great. Add a slice() call there?", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 12:33:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978610404883562496", "body": "@brunnolou It still causes an extra re-render (not to the user, but it means calling render and reconciling twice). Avoid if you can. For things like DOM measurement you can\u2019t avoid it, but there are many cases when you can. Still, note: we are not affiliated with that ESLint plugin.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 12:31:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978610079476920320", "body": "@havesp @bytor99999 It\u2019s a rare escape hatch that you almost never are going to need, and that is built primarily for libraries like Relay. \ud83d\ude09 You\u2019re not even supposed to use the context itself very often, much less the bitmasks.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 12:29:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978609774332964865", "body": "@hsjawanda @reactjs @angular The compiler just transforms JSX, it doesn\u2019t care about how you package or ship modules. You can use any strategies you like: one JS file, many JS files, etc.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 12:28:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978609562562519041", "body": "@drazisil There are two things you can simplify in your example: (1) no need to keep filter state in both components, (2) you can extract renderButton() to avoid repetitive code. https://t.co/GVYLOuuyXy", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 12:27:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978607711612035072", "body": "@hsjawanda @reactjs Sure, that\u2019s how it was (and still is) used at Facebook \ud83d\ude42", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 12:20:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978606568148267008", "body": "@Elena_in_code Do official docs help at all? Anything in particular you struggle with? https://t.co/UuHCiPFnCb", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 12:16:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978606012293943298", "body": "@drazisil The job of React is to keep UI always correct as state changes. Sure, adding a class once may be easier than writing setState. But as the UI gets more complex it becomes infeasible to correctly write DOM manipulation code between all possible UI states.", "favoritedCount": 54, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 12:13:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978597680363528192", "body": "RT @reasonconf: We finalized the schedule for the main conference day at ReasonConf! \ud83c\udf89\n\nhttps://t.co/PQzCORSo1C", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 27 11:40:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978416944171937792", "body": "RT @acdlite: Ok, I have another visualization for y'all.\n\nAn important feature of async rendering in React is the ability to schedule updat\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 23:42:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978416327353397249", "body": "RT @BenLesh: Has anyone tried to update/use rxjs@beta, rxjs@foreward-compat or rxjs + rxjs-compat with React/Babel or even Node/Electron? #\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 23:40:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978353616204521472", "body": "@monasticpanic Maybe Apollo would\u2019ve been a better choice for these tradeoffs?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 19:30:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978350921833943041", "body": "@monasticpanic The perf benefit of static was very substantial for low end devices, AFAIK all products that migrated fully had improvements in metrics", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 19:20:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978329008340439040", "body": "RT @workshop_me: Are you getting the most out of Redux?\nThink you're overusing or underusing it?\nWant to get started with it?\n\nNobody bette\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 17:53:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978328785719386115", "body": "RT @CompuIves: \ud83d\udd34  Introducing CodeSandbox Live  \ud83d\udd34\n\nReal time collaboration in CodeSandbox. We're doing it live!\n\n- Create a live session fo\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 17:52:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978302188815572992", "body": "@alnemec There are 7 people at FB who work on React full time, and 4 contributors with commit access who help when they can. There are of course way more people who help with running the website, popular libraries, etc.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 16:06:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978299791934476288", "body": "RT @rwieruch: Wow, The Road to learn React received this amazing review on Amazon. It made my day! \ud83d\ude0d\n\n#ReactJs #JavaScript https://t.co/Sl3\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 15:57:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978292517799067649", "body": "@antmdvs @KubaWojtach It\u2019s not as bad as pre-16.3 (because at least updates work correctly) but it\u2019s still not intended to be something you\u2019d use very often. Wait for \u201ccontext is overused\u201d thoughtleading pouring in in a year and a half. \ud83d\ude42", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 15:28:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978269123028373504", "body": "@antmdvs @KubaWojtach I think there\u2019s too much temptation to use context when passing props does just fine. I\u2019d avoid context in most cases in application code", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 13:55:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978269123028373504", "body": "@antmdvs @KubaWojtach I think there\u2019s too much temptation to use context when passing props does just fine. I\u2019d avoid context in most cases in application code", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 13:55:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978236117970571264", "body": "@KubaWojtach Depends on what you\u2019re trying to do but maybe render props could help? Helps pass rendering intent (e.g. renderHeader) instead of all the props Header would need to render.", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 11:43:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978230748535812096", "body": "@iSudip7 Sure if you push it will help. But if your error message says \u201cwindow\u201d you haven\u2019t removed it. :-) maybe you forgot to recompile or something. Trust the error message.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 11:22:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978229750916411394", "body": "@alexewerlof Not sure what your conclusion was but I see thousands of people working hard to make it right. \ud83d\ude42 FB changed a lot since 3+ years ago but their old mistakes are still haunting the company", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 11:18:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978082123910443008", "body": "@iSudip7 @twostraws My very first suggestion included \u201cwindow\u201d because I thought you wanted to access a global. I misunderstood you. Your problem wasn\u2019t that, it was a difference in casing. Remove \u201cwindow.\u201d", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 01:32:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978081839406559233", "body": "@iSudip7 @twostraws Because you still have window.Chance in your code. But that\u2019s not what I suggested \ud83d\ude42 I suggested just Chance.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 01:30:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978081657193488384", "body": "@Swizec Might mess it up. I don\u2019t quite understand why this is useful. Can you show examplss for both branches?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 01:30:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978071464854409216", "body": "@iSudip7 @twostraws Please show the error you\u2019re getting when you have\n\nimport Chance from 'chance'\n\nAnd then use Chance?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 00:49:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978068923999510528", "body": "@iSudip7 @twostraws That\u2019s what the error said: \u201cchance is not defined\u201d. Because you defined Chance, not chance. I suggest making sure to read the error messages very \u201ctechnically\u201d because they often contain clues as to what happened.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 00:39:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978068574832128000", "body": "@iSudip7 @twostraws I think your original issue is that you imported Chance but tried to use chance. JavaScript is case sensitive. These are two different names.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 00:38:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978068357604921344", "body": "@iSudip7 @twostraws Either use import then use the name you imported (Chance). Not window.chance.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 00:37:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978067699443085312", "body": "@qrohlf @fbjest I don\u2019t work on Jest, thanks to folks who actually do \ud83d\ude0a", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 26 00:34:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978056642737602561", "body": "@MrAhmadAwais @andriijas @iansu @pete_tnt We\u2019ll keep our update behind an alpha tag for another month at least", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 23:50:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978056309709918209", "body": "@iSudip7 @twostraws Please share complete code that doesn\u2019t work. It\u2019s hard to guess", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 23:49:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978042204500496384", "body": "@linclark @JoshWComeau Wanted to note two aren\u2019t mutually exclusive. I often tweak a lot and even completely redo dozens of slides a few hours before the talk but I also prepare several weeks in advance", "favoritedCount": 18, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 22:53:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978032832726618117", "body": "@iddan @acemarke @reactjs @acdlite How did you plan to invalidate cells?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 22:16:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978032455306407936", "body": "RT @DeveloperSteve: Tomorrow night i'm excited to be speaking at Facebook Developer Circle: Melbourne about mobile development using @flutt\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 22:14:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "978029239348887556", "body": "Every London uber ride for the past three months https://t.co/Z2oqY64tCq", "favoritedCount": 19, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 22:01:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977989194986475520", "body": "@minh_ngvyen @appsforartists @brian_d_vaughn @sebinsua @probablyup Yeah", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 19:22:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977988387167784962", "body": "@minh_ngvyen @appsforartists @brian_d_vaughn @sebinsua @probablyup Not quite. StrictMode tags children created below with a special flag. When we fire lifecycles we collect ones with the flag.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 19:19:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977984040652460033", "body": "That bridge and chorus \ud83d\ude0d https://t.co/YJMYH6J479", "favoritedCount": 73, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 19:02:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977981846142189569", "body": "Seems like Webpack 4 is landing to Create React App soon-ish! Big thanks to @andriijas @iansu @pete_tnt for driving the project maintenance. https://t.co/S4GDxZFMGD https://t.co/FUXZUAGNkX", "favoritedCount": 445, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 18:53:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977975984761835520", "body": "@iddan @reactjs @acdlite The point is that the traversal *has to be* very fast. Running any user code for individual nodes would slow it down too much to make the whole approach infeasible. That's why it doesn't take a function.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 18:30:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977975589805182977", "body": "@notbrent Yep sounds like a context use case", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 18:28:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977974642102145026", "body": "@notbrent What problem are you facing?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 18:24:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977974502968700930", "body": "@iddan @reactjs @acdlite But then it doesn't let you invalidate more than a single item? Unless they share the same value (which goes back to your original problem).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 18:24:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977973599750508545", "body": "@iddan @reactjs @acdlite Strict comparison with what?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 18:20:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977973482616164352", "body": "@notbrent Can you be more specific about why you need this?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 18:20:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977969118111522816", "body": "@appsforartists @brian_d_vaughn @sebinsua @probablyup Yep. With an opt-in &lt;StrictMode&gt; that actually *warns* about UNSAFE methods below so that once a team cleans everything up, they don\u2019t introduce regressions.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 18:03:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977968400575148033", "body": "@notbrent No (and it was never recommended because it\u2019s also a problem for server side rendering)", "favoritedCount": 16, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 18:00:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977967517804187648", "body": "RT @brian_d_vaughn: @sebinsua @dan_abramov @probablyup Facebook is always using the latest version of React. (Right now it's using the alph\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 17:56:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977966283873570823", "body": "@sebinsua @brian_d_vaughn @probablyup We ran the codemod to use the new UNSAFE lifecycles across the codebase. We also added &lt;StrictMode&gt; that complains if you use UNSAFE ones so you can gradually opt in inside individual products.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 17:51:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977960658850516997", "body": "@iddan @reactjs @acdlite Not much you can do, would have to group unrelated items under one bit.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 17:29:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977960367644139525", "body": "@iSudip7 @twostraws Try window.chance. CRA asks that you explicitly access globals. Or if it provides an import, then import it.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 17:28:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977960053188845569", "body": "@webdad3 Curious what you found hard about trying React. Have you tried Create React App or did you use something else?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 17:27:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977959712393170944", "body": "RT @ElaziziYoussouf: \ud83d\udca1\ud83d\udca1Play with your components props with parcel-storybook \ud83d\udca1\ud83d\udca1I just update the Github repo !! https://t.co/CnUe5Auamq  @r\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 17:25:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977959538333814793", "body": "@hackerswagger @reactjs Are you sure you\u2019re looking at the right website? The docs are at https://t.co/UuHCiPFnCb. You\u2019re probably looking at some unofficial fork.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 17:24:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977957073232322560", "body": "@chantastic Wanna chat to me about this? There\u2019s nuance that gets lost", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 17:15:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977923322456563716", "body": "@minh_ngvyen @brian_d_vaughn I think it\u2019s better for a library to not use a certain new feature (if it wants to support old versions) than reimplement it with fragile code like this.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 15:01:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977922799246462976", "body": "@0xca0a I don\u2019t understand what you said about context. But this pattern looks technically completely equivalent to render props. I don\u2019t see why it would act differently.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 14:58:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977914448513060865", "body": "RT @orta: We\u2019re looking for JS peeps @Artsy. \n\n*personally* I\u2019m looking for someone in NYC, has done a bunch of OSS, wants to do OSS by Def\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 14:25:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977914377277001728", "body": "RT @ReasonTownFM: \ud83c\udf89 \ud83c\udf99 \ud83c\udf81 New Episode! Our first ever guest @_chenglou comes on to talk to @jaredforsyth about the philosophy behind @Reasonm\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 14:25:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977739545390272514", "body": "@brian_d_vaughn @probablyup I\u2019d add that if a polyfill for a certain feature is already provided by React team it\u2019s better to use that one over a third-party one because they are hard to get right, and fragmentation hurts the ecosystem. But again, only relevant to library authors.", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 02:50:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977738332972208128", "body": "RT @brian_d_vaughn: The React team has created our own polyfill (react-lifecycles-compat) to support libraries. Its goal is to enable share\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 02:45:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977738306053115904", "body": "RT @brian_d_vaughn: I've seen a few React polyfill projects pop up recently that experiment with upcoming APIs. It's great to see people ex\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 02:45:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977718979409170433", "body": "@pomber @swyx @ReactFest @gretastarlight @jsconfis &lt;Placeholder delayMs={0}, /&gt; means \"show a spinner immediately. Not sure how it would be related to the \"offscreen\" rendering with &lt;div hidden&gt;. I don't know what the final API will look like.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 25 01:29:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977643767116201985", "body": "RT @AliBasheer: \ud83d\udd25 Configuring and maintaining React, Webpack, ES6/7/8/Next, ESLint, Babel, etc. is not what I do while creating @WordPress\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 20:30:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977635262472835072", "body": "RT @omosolatweets: I also wrote an article/Step by Step guide for getting @reactjs SPAs to work well w/ web crawlers (Shoutout to @prerende\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 19:56:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977634201574019078", "body": "RT @jessepinho: SCREENSHOT TESTING IN REACT. Now that I have your attention, I wrote about visual regression tests using @reactjs, Storyboo\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 19:52:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977633655899254784", "body": "RT @sivakumar_k: Marvel: \"Infinity war is the most ambitious crossover event in history.\"\n\nMe: https://t.co/xZwfZWlneE", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 19:50:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977632881521627138", "body": "RT @rwieruch: The Road to learn #ReactJs got translated into French. So proud of having people who are eager to translate it! Thank you @Ec\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 19:46:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977632504566960131", "body": "RT @MThakkar_: React Native Elements just reached a HUGE \ud83d\ude80 milestone of being one of the first \ud83e\udd47 @reactnative libraries to reach 10K \ud83c\udf1f star\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 19:45:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977618306449510400", "body": "@mlusetti @reactjs I don\u2019t agree this in particular increases complexity\u2014separating of rendering and commit phases (which is what allowed this) actually solved a bunch of bugs that were caused by the complexity of less organized rendering", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 18:49:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977617968715706368", "body": "@kureevalexey Haha, great time \ud83d\ude1b See you around!", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 18:47:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977596141402542080", "body": "@sdowding @souporserious Maybe this? https://t.co/7vrkTqdP3V", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 17:20:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977595772718977025", "body": "@iamdtang And this is a fixed version: https://t.co/vHkAZcZh4i. Notice I don't use a dynamically created function as a JSX &lt;Type /&gt;. So it doesn\u2019t unmount on every render.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 17:19:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977595164242915332", "body": "@iamdtang See here: https://t.co/IPxPfsBJEJ. I added some local state to Checkbox. Every time I click it, the local state is gone because `Checkbox` type is different on every render, and React unmounts it. The docs explain it here: https://t.co/spVCcvatnI", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 17:17:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977543841615106048", "body": "RT @left_pad: I've left my job to work on open source full time!\n\nI just launched a Patreon at https://t.co/cYPsEme8iE so if you want to su\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 13:53:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977538816255909888", "body": "@saurabhshah Have you tried our docs? https://t.co/UuHCiPFnCb", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 13:33:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977537950480203777", "body": "@DankoKozar @reactjs Context is also hierarchical. You may have sibling trees that need to receive different context. But in any case you can build a HOC API on top of the context API if you prefer decorating outside.", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 13:29:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977536455407996928", "body": "@NTulswani No, it\u2019s still synchronous.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 13:23:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977536320733147137", "body": "@ferdaber ReactFiberScheduler.js", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 13:23:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977387933018836992", "body": "@keithjgrant rAF maybe? I\u2019m not sure really.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 03:33:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977373057810681856", "body": "@acdlite Evolution is a hoax, unfollow", "favoritedCount": 30, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 02:34:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977372503118053378", "body": "RT @kentcdodds: One of the real powers of the render prop API is its ability for you to build on top of it, not only for your components, b\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 02:32:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977361883735851010", "body": "@monasticpanic @brian_d_vaughn We have some ideas about what to do about those positional arguments. Making forwarding more convenient is a part of this but there\u2019s a bigger picture too.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 01:50:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977361543955451904", "body": "@brian_d_vaughn Does it have bad things too? You\u2019re making me suspicious.", "favoritedCount": 23, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 01:48:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977360836602793989", "body": "@monasticpanic @brian_d_vaughn Yes but that\u2019s only one level deep. If everything forwarded refs by default then you can\u2019t protect against it behind a functional component \u201cfacade\u201d. Change three levels deep would still \u201cpropagate\u201d.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 01:45:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977360587687591937", "body": "@monasticpanic @brian_d_vaughn I\u2019d argue your case is special. Vast majority of components are user code. Reusable leaves with high demand for DOM manipulation are not that common except for cases like Bootstrap.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 01:44:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977359698306437121", "body": "@brian_d_vaughn @monasticpanic This would also make replacing a class somewhere deep with a function a breaking change for an outer component. Because that class\u2019s ref might now be propagated automatically. Functional components are actually great for enforcing encapsulation boundaries.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 24 01:41:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977333658964017152", "body": "@mariusschulz Haha lol. Subliminal", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 23:57:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977298210816393216", "body": "@ThePaulMcBride Time slicing itself uses a bunch of techniques. We initially relied on requestIdleCallback but are seeing some issues with it and might have to rely on rAF and some custom logic until they\u2019re addressed.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 21:37:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977297984143740930", "body": "@yhaskell Because context value is determined by the closest provider? I don\u2019t understand what exactly you\u2019re asking", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 21:36:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977297538985406469", "body": "This is a good example of what a \u201cvirtual DOM benchmark\u201d usually won\u2019t tell you, but that has a significant impact on the user experience in real apps.", "favoritedCount": 80, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 21:34:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977297169102360583", "body": "Did You Know: to prevent layout thrashing, React batches setState in componentDidMount. If you have several components that call getBoundingClientReact in cDM and then call setState, React ensures that re-rendering happens *after* all DOM reads (but before user sees anything). https://t.co/9kmMAqscQL", "favoritedCount": 633, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 21:32:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977294830920437761", "body": "@benadam11 @acdlite And for most such top down subscriptions context will be the preferred approach.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 21:23:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977294723835662341", "body": "@benadam11 @acdlite Typically you have some HOC or other helper that you use everywhere. We\u2019ll provide our own that works well in these scenarios (and you can also look at it to learn if you don\u2019t want to use it).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 21:23:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977293790183657472", "body": "However, it comes with more constraints. Some of the \u201dhackier\u201c things we could previously get away with in lifecycles won\u2019t work well with either of those features. We\u2019ll be sharing more so stay tuned! https://t.co/etCj9z3ykN", "favoritedCount": 19, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 21:19:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977292802542460929", "body": "This is what makes time slicing and suspense possible: https://t.co/NZaVQrPs7X", "favoritedCount": 197, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 21:15:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977287759521075200", "body": "@jamiebuilds setState in the parent component + context API to propagate it? Again, haven\u2019t looked at the API in detail, but that\u2019s how I\u2019d imagine it working", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 20:55:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977261032963039232", "body": "@jamiebuilds React updates don\u2019t wait a tick\u2014they flush at the end of the browser event. This will get more nuanced with async. I haven\u2019t looked at how Unstated works but if you can use React\u2019s setState() as the base mechanism (instead of reimplementing it) that would help in the future.", "favoritedCount": 21, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 19:09:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977256427613024258", "body": "@TheComputerGal To be clear, we never explicitly recommended using inline styles \ud83d\ude42 Almost all examples on https://t.co/UuHCiPFnCb use regular className, and that\u2019s what we use at Facebook too. If you find cases where we push people to use inline styles please let me know!", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 18:51:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977254559453245441", "body": "@jlongster I did this so often with React bundle that I just added it to our build pipeline https://t.co/NFtDeG61yv", "favoritedCount": 38, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 18:43:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977254453425340416", "body": "RT @jlongster: Want to inspect your production minified build to make sure the right optimizations are being applied? Just run prettier on\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 18:43:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977231281808396289", "body": "@DankoKozar @reactjs This would force everything to re-render and make context API somewhat useless. You can already do this with {...this.props}, if you want but I wouldn't recommend.", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 17:11:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977230733247950849", "body": "RT @ryanflorence: Some people still think black folks and other people of color don't face a different world than white folks, still don't\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 17:08:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977203281763160065", "body": "@kaansey @reactjs That said context consumers won\u2019t re-render if the value is referentially equal anyway.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 15:19:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977199156824592384", "body": "@jpangelle I wrote this almost two years ago, if you only used Redux to avoid passing props down then you didn\u2019t need it in the first place https://t.co/3zBPrbhFeL", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 15:03:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977197122452951040", "body": "@mindplaydk We considered an API that isn\u2019t written in JSX, eg ThemeContext.consume(value =&gt; ...). But then people will attempt to use that outside of render path (where it won\u2019t mean anything). For better or worse JSX is how we signal deferred evaluation.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 14:55:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977194981847916545", "body": "RT @MediumEng: Medium\u2019s shifting gears and moving to React.js + GraphQL! @sachee explains how we\u2019re changing lanes without slowing down. ht\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 14:46:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977192140202758145", "body": "@kaansey @reactjs It doesn\u2019t. In new context API you render a child component in render callback, and pass context as a prop. Then it works like you would do with a prop.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 14:35:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977190442918924288", "body": "@DankoKozar @secoif @reactjs Your proposal also doesn\u2019t solve one of the main issues with context: clashes of string names. This is why it\u2019s an object with Consumer/Provider pair. Ensures no clashes. Any proposal based on names is a step backwards.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 14:28:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977190022725165057", "body": "@DankoKozar @secoif @reactjs Any static analysis here would have to outlaw tons of existing code because it\u2019s impossible to determine if context is being used. For example if you pass `this` as an argument to another function. These are hard problems and it\u2019s unnecessary to couple context to solving them.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 14:27:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977189579408269312", "body": "@DankoKozar @secoif @reactjs The problem isn\u2019t reading the context, the problem is knowing what to re-render when it changes. A static tool sounds hand wavy: happy to hear specific proposals but so far React works without adding magic meanings to normal JS operations like reading an object.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 14:25:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977184419579604993", "body": "@secoif @DankoKozar @reactjs That assumes components that use context always do that. But it can be conditional. So there\u2019s no way to know what to re-render ahead of time.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 14:04:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977181835884154880", "body": "@DankoKozar @reactjs React can\u2019t magically guess which component needs context", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 13:54:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977181878712262658", "body": "@Kikobeats Not yet", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 13:54:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977181473424932864", "body": "@adriendenat Sure, setState in componentDidUpdate causes an extra render (not directly perceptible to user but it slows down your app). And you render method can\u2019t assume the state is ready (because it won\u2019t be the first time).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 13:53:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "977181130817527808", "body": "@ExplosionPills I don\u2019t know, I\u2019m not involved. cc @timdorr", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 13:51:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976998992386109440", "body": "@brian_d_vaughn @JoshWComeau hope it works", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 23 01:48:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976912000763727877", "body": "RT @brian_d_vaughn: \u269b Just published React 16.3 alpha 3 to NPM!\n\nMostly bug fixes and DEV warning improvements:\n* Fixed possible infinite l\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 20:02:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976927229098823681", "body": "RT @jongold: \ud83d\ude4f\ud83e\udd19 congrats @figmadesign on the launch of your API!\n\nI just wrote about some of the toys we've been building with it at @Airbn\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 21:02:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976911980677169152", "body": "RT @CompuIves: I recently found out about `react-codesandboxer` by @Noviny, a React component that allows you to create a sandbox by just s\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 20:02:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976893450795745280", "body": "@rem It should change, but I haven\u2019t been involved with these projects for a long time and don\u2019t know if something broke", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 18:48:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976850256724971521", "body": "@georgespake https://t.co/ucMESpprwm", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 15:57:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976849420904992768", "body": "@toblix @PSuputsopon I wrote an article about it a long time ago. Redux was never intended to be a way to \u201cshare data between components\u201d, it was a way to write predictable update logic. https://t.co/3zBPrbhFeL", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 15:53:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976849826959822848", "body": "@AdamRackis Personally I was surprised. I joined FB right about the time privacy became a big focus internally, and didn\u2019t quite realize how permissive pre-2015 app policies were.", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 15:55:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976849198535577602", "body": "@18badf00d If saving 20 bytes makes a difference maybe it\u2019s better not to use JS in that app", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 15:52:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976840715237052417", "body": "@brian_d_vaughn @motleydev  https://t.co/ZictYHkERy", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 15:19:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976826964345610240", "body": "RT @ZackArgyle: The Web Platform team @PinterestEng is looking for a seasoned web engineer to help shape the future! If you like #Nodejs/#W\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 14:24:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976821398860525569", "body": "@mindplaydk But you can enforce your own separation as you like by splitting out component that are concerned *only* with rendering to the DOM. Up to you \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 14:02:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976821212704722944", "body": "@mindplaydk From my point of view, the \u201cconcern\u201d of rendering is to return a tree. Not literally \u201crendering to DOM\u201d. Usually those are React components. Context consumer is just another kind of component. I don\u2019t agree architecture should live \u201coutside\u201d of React because it combines V and C.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 14:01:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976820942558003200", "body": "@mindplaydk I think in general we don\u2019t optimize for people who know only HTML/CSS so I hope that explains our position too. We\u2019re optimizing for people who know JS. You can always separate concerns with components (e.g. extract \u201cpresentational\u201d ones).", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 14:00:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976813284635693056", "body": "@mindplaydk I think we\u2019re taking past each other. As I said earlier, if you feel strongly about it, you can write your own HOC to avoid putting this in render. Is this not solving your problem?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 13:30:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976799159243231233", "body": "@raybooysen @wycats Because they\u2019re taken by TS", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 12:34:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976798981555712001", "body": "@nogwater @peeja @reactnative That\u2019s it, keep it simple", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 12:33:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976798351831257089", "body": "RT @dan_abramov: @brian_d_vaughn angery reaccs only https://t.co/nJymnrJGtr", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 12:30:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976796740404826112", "body": "@marcusnielsen Seems like a good idea to me, yes", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 12:24:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976796620259020802", "body": "@mindplaydk The reason we avoided HOC is explained in the RFC. It strictly covers less scenarios than render prop. Render prop lets you be more granular about what gets updated. But again, you can easily make your own HOC if you prefer. The API is just lower level.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 12:23:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976796316792688640", "body": "@mindplaydk Context is about providing data to a subtree. Trees are created in render. That\u2019s basically it \ud83d\ude42 Again, if you feel strongly it should be injected via HOC, you are welcome to create one. I don\u2019t understand why you are fixating on this point.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 12:22:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976795822363901953", "body": "@grrowl If data for theme change is available immediately (and doesn\u2019t suspend itself), no, React can apply it to the \u201cprevious\u201d screen while the new screen is being loaded. No need to wait.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 12:20:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976795511083630594", "body": "@18badf00d I don\u2019t understand what you\u2019re asking for", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 12:19:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976661134257385472", "body": "RT @wiekatz: \ud83d\udce3 Folks, eBay Berlin is still looking for experienced React developers! \ud83d\udce3 https://t.co/I15NF7H7L1 \u2013 DM me if you're interested\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 03:25:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976660432231567361", "body": "RT @blanca_mendi: I won't be able to atend this year but I recommend you don't miss it! It's by far the best React experience ever! \ud83d\udc9c \ud83d\udc19 #re\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 03:22:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976660362488700933", "body": "@fasoroalexander Thank you!", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 03:22:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976660283711205376", "body": "RT @fasoroalexander: So today I (albeit inadvertently) found a bug in the componentDidCatch lifecycle method in #reactjs reported to Dan Ab\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 03:22:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976656275516768256", "body": "@PSuputsopon If you only used Redux to avoid passing props then you didn\u2019t need Redux in the first place", "favoritedCount": 35, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 03:06:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976637950858477568", "body": "@brian_d_vaughn angery reaccs only https://t.co/nJymnrJGtr", "favoritedCount": 246, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 01:53:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976634597139038208", "body": "RT @brian_d_vaughn: If you're using React in anger, be sure to use the angry build for best performance \ud83d\udc4c https://t.co/Z6PmD1Rm7r", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 22 01:40:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976500160657264641", "body": "@will_stone_ Redux implements its own event emitter. React Redux pushes that through context. So it has that downside of maintaining a subscription list. It\u2019s plausible we could make React Redux faster by using the new context API but that requires big internal changes.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 16:45:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976489888941043712", "body": "@elrumordelaluz That wouldn\u2019t be exposed :-) If you need to collect those instances, sure, you can do it by yourself in userland. I\u2019m just saying it would be wasteful for React to do this by default.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 16:05:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976489687119482880", "body": "@YazanAabed Here\u2019s an example implementation with an event emitter https://t.co/z86gfhkGiY", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 16:04:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976489281215762434", "body": "@YazanAabed Using old context API to pass an event emitter, subscribe() on mount, and then setState() in individual component on change", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 16:02:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976488821113147393", "body": "Another interesting about this approach is that this traversal is completely integrated with React, and thus works with async features (time slicing and suspense). You can switch a UI theme even while suspense waits for a page to load. Can\u2019t do this with a custom event emitter.", "favoritedCount": 39, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 16:00:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976488213836648448", "body": "It\u2019s plausible that we can add some caching for a list of subscribed components in the future but for now we don\u2019t think it\u2019s necessary in practice. We\u2019ll see. But importantly, you only \u201cpay\u201d for context updates when you actually use them. Static values are free.", "favoritedCount": 35, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 15:58:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976487847992725505", "body": "When there *is* an update, React walks the tree and marks matching nodes as dirty. The nodes are monomorphic so traversal is very fast. &lt;Consumer&gt; is a special type known to React, so a single field comparison is enough to detect and mark it. And the marking can be time-sliced!", "favoritedCount": 39, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 15:56:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976486996221849600", "body": "The new context API has zero cost for the initial rendering. It doesn\u2019t perform any subscriptions. Even if you read the context in many components (e.g. for passing a theme) React doesn\u2019t need to collect all those subscriptions in a giant array.", "favoritedCount": 37, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 15:53:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976486660144852993", "body": "We want to fix the \u201cdeep update propagation\u201d problem. But we don\u2019t want to pay the memory and initialization time cost for every single component that consumes context. Many context values change very rarely! It\u2019s wasteful to subscribe all those callbacks.", "favoritedCount": 33, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 15:52:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976486152197812229", "body": "I\u2019m often seeing a question: \u201cwhy not implement new context API in userland with an event emitter\u201d? Let me address it.", "favoritedCount": 190, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 15:50:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976406903952760833", "body": "@triketora I literally googled this yesterday", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 10:35:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976397461429374976", "body": "\u201cElevator pitch\u201d confused me for years because I read it as \u201cincreasing tonality\u201d. It just occurred to me what it really means.", "favoritedCount": 521, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 09:57:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976391384264531974", "body": "RT @mgechev: Excited to share my most recent research! \ud83d\udd2c Applying Machine-Learning with @GoogleAnalytics data for *faster* @Angular &amp; @Reac\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 09:33:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976391052843155456", "body": "RT @aphyr: Every time I've visited London I've had the irrepressible urge to write a tube-stop generator and I can't stop cackling https://\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 09:32:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976380982428340225", "body": "@HannahWaxman It\u2019s ironic that at the time closing down the APIs was criticised in tech circles as becoming more closed and hurting independent developers", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 08:52:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976380227734577152", "body": "RT @NikkitaFTW: My talk at React Fest where I tell you all the ways you can style in react is up! \ud83c\udfa1\nGod bless styled components! https://t.\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 21 08:49:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976240732049723392", "body": "@AdamRackis @jamiebuilds @johnwineman @drosenwasser Sure but blaming Flow for it makes no sense to me \ud83d\ude42 seems a bit random. Flow doesn\u2019t run build your code so it\u2019s not the thing that allowed you to use this pattern.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 23:35:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976240333330796545", "body": "@AdamRackis @jamiebuilds @johnwineman @drosenwasser So both TypeScript and CRA (which has the proposal enabled by default) are bigger offenders in this sense than tools like Flow or ESLint.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 23:33:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976239931801694208", "body": "@AdamRackis @jamiebuilds @johnwineman @drosenwasser If the proposal gets dropped then Flow could eventually stop supporting it. Code would break but it wouldn\u2019t be *because* of Flow since presumably Babel would also drop a dead proposal.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 23:31:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976239691807772673", "body": "@AdamRackis @jamiebuilds @johnwineman @drosenwasser If my understanding is right, saying \u201cFlow would tie itself\u201d is like saying \u201cPrettier would tie itself\u201d or ESLint etc. There\u2019s nothing Flow-specific here. If you used this proposal you opted in (or used a tool above Babel that did). Flow doesn\u2019t lock you into it.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 23:30:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976215828927582215", "body": "Hey @netflix make up your mind https://t.co/PG557dId7a", "favoritedCount": 130, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 21:56:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976196121411444736", "body": "@Papa_Justify cc @mobz", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 20:37:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976193833569521664", "body": "RT @peggyrayzis: My @ReactFest talk dropped today! \ud83d\udcfa Tune in for the story behind Apollo Boost and why I think empathy is crucial for creat\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 20:28:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976192924051492867", "body": "@oskarhane Just to verify: you\u2019re testing with production versions of everything?", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 20:25:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976192835585302528", "body": "RT @oskarhane: Who can educate our team in how to use Chrome Devtools and help me find a memory leak in a #React / #Redux / redux-observabl\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 20:24:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976171867613683712", "body": "RT @swyx: catching up on the @ReactFest videos thanks to @gretastarlight.. so the fourth new toy of React Suspense is eager loading!!! (dan\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 19:01:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976171664491851776", "body": "RT @tylermcginnis: Today I'm excited to announce something I've wanted to do for a very long time. \n\n\ud83d\udd7a Introducing the free React Bootcamp\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 19:00:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976165282799603712", "body": "@HannahWaxman I think pre-2015 app permission policy was rather na\u00efve and irresponsible. I found this to be a well-researched summary of what happened: https://t.co/to5fGhrdBJ", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 18:35:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976161579006922757", "body": "@Ganapativs Thanks to whoever of the contributors wrote that, I\u2019m not actively working on the project!", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 18:20:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976158724321669122", "body": "@jamiebuilds @codehitchhiker @celo_fett Let\u2019s rename it to \u201ccost\u201d", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 18:09:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976154280423055361", "body": "RT @JedWatson: Just published a new alpha of react-select v2 with support for portals and many more tests &amp; docs... check it out! https://t\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 17:51:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976112878637010944", "body": "RT @elibelly: Check out my @ReactFest talk on #internationalisation! \n\nIt's SO hard to get over the cringe of watching yourself on film but\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 15:07:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976107610859626497", "body": "https://t.co/qCIAbsOJHu", "favoritedCount": 24, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 14:46:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976091364411826176", "body": "@markspolakovs Not a fan personally. It\u2019s very contextual: not clear how it would work in other contexts", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 13:41:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976082477507891202", "body": "RT @ReactFest: \ud83d\ude4c the ReactFest videos are up \ud83d\ude4c\n\nWatch @reactjs talks on https://t.co/XrueAN1bo7\n\n@NikkitaFTW, @peggyrayzis, @siaw_stephanie\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 13:06:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976082365213704198", "body": "RT @maaz93: First wrote an app with @reactjs without doing any planning. Just tried to go with the \"flow\". I messed up so bad! Throwing sta\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 13:05:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976082302559236096", "body": "@CoodyMac @reactjs Sure: https://t.co/IxawYeJRpW", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 13:05:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976081973721620480", "body": "@iamdtang I think that to implement this correctly you\u2019d need to expose renderCheckbox() as a function rather than Checkbox as a faux type", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 13:04:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976081196903002117", "body": "@iamdtang Passing an arrow function seems like it would cause issues. You\u2019re recreating it on every render. React will think it\u2019s a different component type, and unmount/remount on every render. For the same reason it will destroy state inside Checkbox between re-renders. https://t.co/HIS4DVaiHs", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 13:01:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976080050071179265", "body": "RT @alexandereardon: react-beautiful-dnd v6.0 has shipped!\ud83e\udd18\n\n- A new multi drag pattern (with mouse, keyboard and touch support)\n- A server\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 12:56:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976076826975129600", "body": "RT @wycats: I wrote up some thoughts on the proposal to replace the current Stage 3 class proposals with a clean slate design: https://t.co\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 12:43:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976068098624237568", "body": "RT @wendychanhk: I just published \u201cReactFest 2018 London write-up\u201d https://t.co/nwfoUMWSI0", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 12:09:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "976067697413849088", "body": "Last time I checked, it was built with @reactjs. Great work! https://t.co/9NVXACh3Bj", "favoritedCount": 70, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 12:07:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975897925342679041", "body": "@_erica Give our official docs a try? https://t.co/IxawYeJRpW", "favoritedCount": 14, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 00:52:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975897781146660864", "body": "RT @inkblotty: Hey twitter friends!\n\nI'm giving a talk tomorrow at Denver's @reactjs meetup about Modular Accessibility. Stop by and say hi\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 00:52:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975897003677896704", "body": "RT @ryanflorence: I'm speaking at Seattle React.js this Wednesday about React Suspense.\n\nCome join us!\n\nhttps://t.co/2rB8OynN8X", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 20 00:49:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975839004099784704", "body": "@brooksmorgan @AustenAllred Didn\u2019t it already happen two years ago? Sorry if I\u2019m missing something. https://t.co/XIThyU4gaF", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 19 20:58:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975837519454638080", "body": "@erichmenezess (And you could always do this.)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 19 20:52:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975837452307976196", "body": "@erichmenezess If all you used Redux for is context API then you can move away from it any day and just roll your own subscription system that uses old context and can switch to the new one \ud83d\ude42 that was never the point of Redux", "favoritedCount": 30, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 19 20:52:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975704245499555840", "body": "@_cichocinski You\u2019re probably just hitting known bugs \ud83d\ude42 wait for a stable release or at least master merge", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 19 12:03:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975197153147670529", "body": "Took me long enough but I get this album now and it\u2019s gold https://t.co/v3HRtNcQro", "favoritedCount": 159, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 18 02:28:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975172661256052736", "body": "RT @mweststrate: Released #immer 1.2. It is now possible to pass an initial state to a curried producer! https://t.co/MPccLwdqBY", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 18 00:50:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975172344485482496", "body": "they\u2019re good dogs Brent https://t.co/3H430j1NoF", "favoritedCount": 29, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 18 00:49:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975169857393233920", "body": "https://t.co/0K10NLwWxv", "favoritedCount": 24, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 18 00:39:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975160486005301248", "body": "@hswolff I\u2019ve mostly learned to tune out US politics news. It\u2019s harder to resist digging into stories about the country I was born in (Russia) or the country I\u2019m living in (UK), or both. I caught myself today compulsively checking news on five different stories and it\u2019s too much.", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 18 00:02:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975159402314502144", "body": "I feel I\u2019m getting sucked into the news hole for the past few days. Send halp.", "favoritedCount": 97, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 17 23:58:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975156011332984832", "body": "@_wildservice @paularmstrong I\u2019m not talking about Facebook (thankfully) and I\u2019m also not saying I share this point of view. But I have seen people share that they\u2019ve seen this attitude from others.\n\nhttps://t.co/jJQdyKTTdD\nhttps://t.co/U5EYQtEmKR", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 17 23:44:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975147918222090240", "body": "RT @StackSmashing: This is brilliant: Common algorithms explained in the style of IKEA instructions. https://t.co/BIHCed5o0T https://t.co/w\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 17 23:12:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975124022567538688", "body": "@paularmstrong Another perception is that people advocating for expressing more things in JS don\u2019t care about accessibility. That\u2019s \u201cyou just hate blind people\u201d argument. Accusations like this isolate the communities to the point they don\u2019t want to waste the effort explaining to each other.", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 17 21:37:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975122995965554690", "body": "@paularmstrong One thing that makes this complicated (and not a fully technological argument) is the perception that HTML/CSS is seen by some as \u201cwomen\u2019s work\u201d and is thus being devalued. So \u201clet\u2019s put JavaScript in there\u201d is sometimes seen as arrogance intended to raise the barrier.", "favoritedCount": 47, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 17 21:33:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975077699013238785", "body": "@barrymdoyle @reactjs @fbOpenSource If you mean using CommonJS it\u2018s intentional in React tests. Lets us be a bit more flexible.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 17 18:33:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975076441560879105", "body": "@coreload @michaeljforster @BrandonBloom Could you explain more about how this is different from components in React? They also typically render other components, with lowest-level components using the DOM.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 17 18:28:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975074102250803200", "body": "RT @jonskeet: Blogged: Stack Overflow Culture - https://t.co/a2vShjpsCV - a 1-hour brain dump of my feelings about Stack Overflow. I could\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 17 18:19:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975054892321660929", "body": "RT @ArtsyOpenSource: Artsy has been using @reactnative for over 2 years now. In this video post @orta  gives an extensive retrospective.\n\n-\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 17 17:02:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "975021530353684480", "body": "RT @brian_d_vaughn: What is your favorite example of a documentation style for a React component with a lot of props? Ideally something tha\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 17 14:50:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974817826761560064", "body": "@davidmoodie @workboxjs @jeffposnick @addyosmani @ChromiumDev @reactjs Maybe it's okay. We'll be doing something like this for proxies. If you make a prototype we can take a look.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 17 01:20:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974811435036479489", "body": "@davidmoodie @workboxjs @jeffposnick @addyosmani @ChromiumDev @reactjs Open a proposal issue?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 17 00:55:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974811237866442752", "body": "RT @ken_wheeler: @rauchg @tomdale What if the real components were the friends we made along the way", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 17 00:54:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974811157713309696", "body": "@modernserf Not quite what you\u2019re asking but you might like this https://t.co/yIL2aKNXG3", "favoritedCount": 56, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 17 00:54:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974784950338834432", "body": "@davidmoodie @workboxjs @jeffposnick @addyosmani @ChromiumDev @reactjs Maybe it would be better to contribute this to CRA?", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 23:10:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974755946638577665", "body": "@WebDevDog @reactjs @ReactJSNews Let us know how that goes!", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 21:15:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974755946638577665", "body": "@WebDevDog @reactjs @ReactJSNews Let us know how that goes!", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 21:15:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974720740783214593", "body": "RT @gatsbyjs: Coming soon to Gatsby v2: Ludicrous mode data hot reloading ;-)\n\nhttps://t.co/by1PyOYXc0\n\n(note, this gif is not sped up at a\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 18:55:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974709885890957313", "body": "@nayafia It was manthreaded", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 18:12:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974696630762000384", "body": "@donal_tweets @maxedapps @reactjs @vuejs @angular When React came out it was universally ridiculed for that for at least a year. Took a while for people to take it seriously and see the good sides of that approach (and why it\u2019s not the same \u201cspaghetti\u201d code they expected).", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 17:19:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974695709239803904", "body": "@donal_tweets @maxedapps @reactjs @vuejs @angular I do agree that Vue approach is *objectively* simpler for folks who are less familiar with JavaScript and more familiar with template languages. It\u2019s  great we have many options to choose from!", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 17:15:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974695306595102720", "body": "@donal_tweets @maxedapps @reactjs @vuejs @angular Simplicity is subjective (IMO being able to use JS map/for/if is \u201csimpler\u201d than learning ngFor or v-if etc). But that\u2019s not even what I\u2019m talking about. I\u2019m just saying there are good reasons *for* mixing UI generation with other code. This talk explains: https://t.co/HsM7BprCf6", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 17:14:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974692710668996608", "body": "@donal_tweets @maxedapps @reactjs @vuejs @angular Note React isn\u2019t building HTML, it\u2019s building an object tree representation. That\u2019s pretty different and doesn\u2019t have the usual pitfalls (safety issues with escaping content, fragile tag mismatches).", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 17:03:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974692006743113730", "body": "@WebDevDog @reactjs @ReactJSNews Tried official docs?", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 17:00:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974689787117531136", "body": "RT @timdorr: My favorite feature of @unpkg is adding a trailing slash to the URL and peeking into the contents of npm packages:\nhttps://t.c\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 16:52:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974651704439427073", "body": "RT @_philpl: Come join our JavaScript comedy night here in London! Organised by @jevakallio &amp; @tazsingh, space organised by @oliverturner a\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 14:20:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974651474662838279", "body": "@kentcdodds You can reduce the size of snapshots by mocking out the components you\u2019re happy to keep as implementation detail. I think a lot of people don\u2019t realize that", "favoritedCount": 35, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 14:19:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974648989856485381", "body": "@avraamakis @RickBeerendonk Also it\u2019s core feature. There\u2019s no way it could be provided by third party package. In that case we wouldn\u2019t need to add it to React.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 14:10:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974648202061369344", "body": "@avraamakis @RickBeerendonk The implementation is about 30 lines of code. \ud83d\ude42 I think you\u2019re missing the point that this API is for library authors *whose libraries you are likely using*. You won\u2019t use it directly but it will benefit you.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 14:06:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974453478121725953", "body": "RT @acdlite: Part of React's philosophy is to provide escape hatches, for when the idiomatic patterns break down. This is great! But... whe\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 16 01:13:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974407530276442113", "body": "@amasad Mine was a txt file on the shared school server, every chat client just appended to it!", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 22:10:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974398848201261058", "body": "@leeb @bodil @glenathan &gt;look up finger trees\n\nAlready regretting this https://t.co/OHQjWbAsSV", "favoritedCount": 27, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 21:36:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974397767442468864", "body": "@jthoms1 @tomdale @acdlite Quite a lot, it seems! \ud83d\ude1b https://t.co/vj6F1APGTD", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 21:31:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974396585491750913", "body": "RT @JimDabell: @acdlite Good tip. Also, ensure that the libraries you use are For Humans. It\u2019s no good getting halfway through building som\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 21:27:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974392842733916161", "body": "@tomdale @acdlite A good library feels like this https://t.co/icj4CPVR4o", "favoritedCount": 193, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 21:12:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974391779570143233", "body": "RT @tomdale: @acdlite @dan_abramov This is an extremely misleading tweet. You neglected to mention that the blazing coefficient is only use\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 21:07:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974390629022216192", "body": "@acdlite This is a blazing good tweet", "favoritedCount": 78, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 21:03:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974390509551734790", "body": "RT @acdlite: Tip when evaluating libraries: check if it's blazing fast. If it's fast, but the README doesn't specify whether its fastness i\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 21:02:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974387534821289987", "body": "@monicalent The slides are beautiful \ud83d\ude0d Will there be a video of your talk?", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 20:51:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974387368919748608", "body": "RT @monicalent: And for anyone who'd like the slides, you can find them here:\nhttps://t.co/8VnASP81cY\n\nCome by our booth tomorrow to contin\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 20:50:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974380362875985920", "body": "@bMalinTech @reactnative Probably in next stable? cc @brian_d_vaughn", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 20:22:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974371401963630593", "body": "Wrote a bit more about the actual use cases for this. Thanks @RickBeerendonk for asking! https://t.co/j6u6duTDGL", "favoritedCount": 57, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 19:46:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974354152963952642", "body": "@brian_d_vaughn @MrHasanabas @sebmarkbage First link goes to error boundaries docs. I think you meant: https://t.co/prDEfGfrZi", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 18:38:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974284403605168128", "body": "@wonderboymusic @brian_d_vaughn There\u2019s a whole new context API but it is intentionally separate", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 14:01:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974281893779836929", "body": "@alexsauerbudge @reactjs That sounds pretty much like suspense cache works", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 13:51:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974276565935775744", "body": "@woutervanvliet @brian_d_vaughn @sebmarkbage Fair enough! I went with this example primarily because HOCs are already hard to understand for many, and I wanted to explain what the feature *does*. Thanks for feedback!", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 13:30:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974276356723879936", "body": "@woutervanvliet @fisicallyfeet @brian_d_vaughn @sebmarkbage Similarly, it lets a third party component \u201cwrap\u201d itself without breaking its API contract. Important both for existing use cases and for new context API.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 13:29:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974276089873948672", "body": "@woutervanvliet @fisicallyfeet @brian_d_vaughn @sebmarkbage Props like innerRef work but if you have more than a single wrapper (which is common if you use HOCs) then different libraries have to agree on how to name the prop. So at this point \u201cref\u201d is a common denominator.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 13:28:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974261152527118336", "body": "@FelixGeelhaar After that code goes into a stable alpha I might publish", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 12:28:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974260913174908929", "body": "RT @tolmasky: It makes so much more sense conceptually to render your whole app from one common root vs. every window in your app being it\u2019\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 12:27:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974259939249152001", "body": "@bitwiselover @sebmarkbage @acdlite \ud83e\udd2a", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 12:24:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974259746986450944", "body": "@Malyshkaaa @brian_d_vaughn @sebmarkbage \u042d\u0442\u043e \u0447\u0442\u043e\u0431 \u0440\u0435\u0444\u0441\u044b \u0444\u043e\u0440\u0432\u0430\u0440\u0434\u0438\u0442\u044c", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 12:23:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974258369606414336", "body": "@lesson_shop @brian_d_vaughn @sebmarkbage Have you read the RFC that my tweet links to? It\u2019s pretty explicit about the motivation.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 12:17:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974258270260080641", "body": "@thecodejack @brian_d_vaughn @sebmarkbage Works with any components. Main purpose is for HOCs really", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 12:17:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974257751940583426", "body": "@woutervanvliet @brian_d_vaughn @sebmarkbage If the component inside a library than wrapping it in anything becomes a breaking change. That\u2019s pretty painful for component authors today. I encourage you to read the RFC to learn more about motivation.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 12:15:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974257278374301696", "body": "@bryanrichards @brian_d_vaughn @sebmarkbage @reactjs You can already do pretty much the same thing with a custom prop like innerRef except every library has to come up with its own convention", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 12:13:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974089732463480832", "body": "RT @brian_d_vaughn: This alpha also includes the new create-subscription package:\nhttps://t.co/5rKFHEWEBc\n\nAnd the new react-is package:\nht\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 01:07:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974087098197331969", "body": "RT @brian_d_vaughn: You can try the new React.forwardRef API with the latest alpha release of 16.3!\n\nyarn add react@next react-dom@next htt\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 00:57:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974070648732635136", "body": "@cpojer @Meligy Why did you file that issue btw? Did you use to work on Relay?", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 23:51:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974086951149203456", "body": "RT @jbscript: Streaming some nwb maintenance / Babel 7 branch stuff in a bit: https://t.co/8LU66BvBmD", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 15 00:56:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974069961835597826", "body": "RT @jasonlaster11: I'm often pleasantly surprised by the new @FirefoxDevTools call stacks \ud83e\udd5e\ud83e\udd8a https://t.co/y5jK6QOmzB", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 23:49:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974052626965913600", "body": "@Meligy The naming similarity to Angular concept is accidental if that\u2019s what you mean \ud83d\ude42 The issue is more than two years old. Hope it won\u2019t be too confusing! https://t.co/4krKUZUNu0", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 22:40:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974052114182877190", "body": "@carlesnunez @midudev @StandardJS FWIW I use Prettier and stopped caring about this a long time ago", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 22:38:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974041267255611392", "body": "@chestozo @brian_d_vaughn @sebmarkbage You shouldn\u2019t do this in every component for sure \ud83d\ude42 This is an escape hatch for cases where people *already* do this except in more convoluted ways.", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 21:55:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974043128868102144", "body": "@chestozo @brian_d_vaughn @sebmarkbage Importantly this allows to add context and HOCs without breaking refs.", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 22:02:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974036214666973184", "body": "@AdamRackis @xjamundx @drosenwasser @rbuckton @bterlson That\u2019s true! I\u2019m just not familiar with how those patterns are used elsewhere.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 21:35:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974040428285657088", "body": "RT @NikkitaFTW: Regarding this there is already a lot of people on wait list and I wasn't expecting that so if anyone can help me and pair\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 21:51:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974035622276018177", "body": "@AdamRackis @xjamundx @drosenwasser @rbuckton @bterlson In other words: if Polymer was the only one who needed O.o would it be a good addition? Now replace Polymer with React and O.o with public fields. Except in addition, unlike O.o, public fields are just a convenience feature.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 21:32:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974034531018772480", "body": "@AdamRackis @xjamundx @drosenwasser @rbuckton @bterlson I agree in general. But is there enough \u201cdeep interest\u201d outside of React user base? React patterns come and go.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 21:28:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974034224226426881", "body": "@im_Benton You could preprocess API responses as they get parsed?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 21:27:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974017834266357762", "body": "@ClashCityKing @brian_d_vaughn @sebmarkbage Yes but this won\u2019t give you the DOM node directly. Only a wrapper instance.", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 20:22:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974013202194419713", "body": "@hasnain_ashfaq @im_jacobf @brian_d_vaughn @sebmarkbage Oceanic Next with a custom background", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 20:03:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974010214642012163", "body": "@im_jacobf @brian_d_vaughn @sebmarkbage Consolas Bold", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 19:51:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974009205064683520", "body": "@knitcodemonkey You totally are!", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 19:47:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973998880491802625", "body": "@AdamRackis @xjamundx @drosenwasser @rbuckton @bterlson It\u2019s not great but I also wouldn\u2019t say it\u2019s too late. The late realization is probably caused by different efforts (fields, private, decorators) not summing up to a cohesive picture, which you don\u2019t really know until we\u2019ve lived with all of them for a while.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 19:06:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "974008682311815169", "body": "I\u2019ve wanted this in React since forever. Pretty pumped about this (probably) going into React 16.3 release. Thanks to @brian_d_vaughn and @sebmarkbage! RFC: https://t.co/Cf80PddS2Q https://t.co/rEOJO3WHRR", "favoritedCount": 1678, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 19:45:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973996361707384833", "body": "@AdamRackis @matthewcp @xjamundx @drosenwasser @rbuckton @bterlson *event handlers in React. Doesn\u2019t necessarily mean the language has to accommodate a library. Especially considering in the future React might adopt a class-less component syntax anyway.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 18:56:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973996036611026946", "body": "@AdamRackis @xjamundx @drosenwasser @rbuckton @bterlson I don\u2019t think it\u2019s fair to pressure TC39 to adopt proposals on the basis of existing proposal usage. That just shifts the baseline of when we consider the feature to be ready. Stages exist exactly for this kind of experimentation; adopting earlier is always a risk.", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 18:55:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973995540013821953", "body": "@matthewcp @AdamRackis @xjamundx @drosenwasser @rbuckton @bterlson Same reason we\u2019re not using experimental syntax in React docs (except one or two places where we specifically describe it as experimental).", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 18:53:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973982959240917001", "body": "RT @sebmarkbage: @swyx @ryanflorence The twittersphere is a bit skewed to a few. The overall community is much broader so we're evaluating\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 18:03:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973980822356115456", "body": "@kentcdodds @btmpl @acemarke It\u2019s Twitter, man! Tbh I\u2019m surprised there\u2019s so *little* confusion. Expected it to be much worse. I suppose we did the job well.", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 17:54:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973980540947845120", "body": "Also I didn\u2019t come up with it, @sebmarkbage and @acdlite did. I just made a demo!", "favoritedCount": 29, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 17:53:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973980339990343681", "body": "PSA: there\u2019s no API called \u201cfuture-fetcher\u201d. The thing I demoed at JSConf is called \u201csuspense\u201d. It has no relation to Redux too. Watch the talk for yourself \ud83d\ude42", "favoritedCount": 114, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 17:53:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973959650386366465", "body": "@alexsauerbudge @reactjs If you\u2019re interested in prefetching, you can try rendering inside &lt;div hidden&gt; which, with the suspense PR applied, will optimistically render in idle periods without blocking", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 16:30:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973979653751832576", "body": "@kentcdodds @btmpl @acemarke The \"future-fetcher\" really did become a thing btw. People are quoting that to me and asking about it. \u00af\\_(\u30c4)_/\u00af", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 17:50:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973948867401125890", "body": "@koba04 I don\u2019t think it should use react-reconciler. Its primary purpose is handling updates. I think we need to extend/rewrite the existing standalone one. @acdlite experimented a bit.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 15:47:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973947067474292737", "body": "RT @jackiehluo: i finally understand how react fiber works, and you can, too! thank you once again to @linclark who drew cartoons that taug\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 15:40:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973946531370938375", "body": "@alexsauerbudge @reactjs Yeah we\u2019ll need some way to whitelist \u201cknown\u201d errors for this", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 15:38:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973945053684162563", "body": "@JanKoritak @janvorcak Key is still more predictable, it always does exactly the same thing if you change it to a unique value.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 15:32:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973942699194757121", "body": "@alexsauerbudge @reactjs Not sure what you mean", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 15:23:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973941317020585984", "body": "@janvorcak I don\u2019t see how cWRP would be \u201cmore bulletproof\u201d. It\u2019s the opposite: key ensures the whole tree gets remounted; cWRP only helps for one component.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 15:17:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973934555404079104", "body": "@EggsAreCute \u0412\u0441\u0451 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e )", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 14:51:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973941174812729344", "body": "@janvorcak It\u2019s not amazing but if you intentionally want to reset all child state then sure, use key. Alternatively use cWRP (to be replaced with getDerivedStateFromProps soon) to keep state \u201cin sync\u201d with new props, but you\u2019d have to do it on all levels.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 15:17:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973933874836398080", "body": "RT @mjackson: I'm always looking for people who are doing amazing work with @ReactJS so I can help promote them on the @ReactPodcast. Who i\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 14:48:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973924916264341505", "body": "RT @ryyppy: This is probably the biggest update for the #BuckleScript / #Reason community.\n`Belt` is the new standard-library with perf and\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 14:12:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973922218832023552", "body": "RT @ReactTraining: If you're in London, you won't want to miss this testing workshop by @NikkitaFTW \ud83d\ude05 https://t.co/iHKVwkIF0F", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 14:02:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973682641294766082", "body": "@scotttball yarn eject, that\u2019s it?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 22:10:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973921024063541251", "body": "RT @brian_d_vaughn: \ud83d\udc4b New (in-progress) RFC posted for a commit phase lifecycle, to be run before mutations (e.g. before the DOM is updated\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 14 13:57:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973665358249971712", "body": "Holy shit https://t.co/l8B0FUmKGN", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 21:01:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973635326131531777", "body": "@appsforartists Oh I have no idea. I haven\u2019t thought about it. I think the right backup plan might be to start preparing a US visa. From there, can decide what\u2019s a better longer term plan (not sure I\u2019d want to live in US).", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 19:02:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973634527473135616", "body": "@appsforartists Seems like the answer is Canada", "favoritedCount": 29, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 18:58:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973634251890491392", "body": "4th season of Americans: I\u2019m gonna be real dark and scary\nIRL: hold my novichok", "favoritedCount": 40, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 18:57:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973632793514250246", "body": "@arel_ra I hope so", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 18:52:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973625567022108673", "body": "@bbodien Well I\u2019m going to need to renew mine in December", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 18:23:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973625044554350592", "body": "The UK/Russia thing is getting scary. I wonder if my country can still screw things up for me. https://t.co/iJim55uRYF", "favoritedCount": 119, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 18:21:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973624668790968321", "body": "RT @amasad: Announcing @Replit 1.0: the IDE That Grows\u2014from Playgrounds to Fullstack Apps.\n\n\u26a1\ufe0f Opening a port is deploying\n\ud83d\udee0 Works with you\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 18:19:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973622789126189056", "body": "@kunsv 4 months of paid leave for both parents is very good for US.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 18:12:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973623644273496064", "body": "@jhicks154 London office has the same policy (4 months full paid leave.) No we don\u2019t require a CS degree. (I don\u2019t have one.)", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 18:15:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973622534678695938", "body": "@jsilvax No, we don\u2019t do remote.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 18:11:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973582219523641344", "body": "@bebraw @robinpokorny Finland is kind of an outlier here. \ud83d\ude42 The rest of the Europe is not that great at this AFAIK.", "favoritedCount": 18, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 15:31:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973581729037504514", "body": "@wlan0mon Nobody has them until they do. \ud83d\ude42 And if you\u2019re a father and consider parental leave policy as one of the lowest priorities guess who\u2019ll be taking care of the child in the first few months", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 15:29:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973579724097245184", "body": "@0xFF69B4 For both parents? I agree EU is doing better than US in general.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 15:21:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973571297161728000", "body": "@alexvcasillas Send a DM to me?", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 14:47:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973568551658442753", "body": "@LucaColonnello @acdlite That\u2019s the plan", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 14:36:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973568326226948096", "body": "@brian_d_vaughn Your tweets are too healthy", "favoritedCount": 19, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 14:35:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973567220503728128", "body": "@hswolff Buy a React license", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 14:31:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973561572357492742", "body": "By the way we\u2019re hiring, https://t.co/MJTyws0bBF https://t.co/HCtGjEAevU", "favoritedCount": 321, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 14:09:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973560630790774784", "body": "Lowest priority? Ah I see https://t.co/RD1VYyFFxm", "favoritedCount": 2676, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 14:05:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973437943556820992", "body": "@seldo *months", "favoritedCount": 44, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 05:57:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973433653324902401", "body": "@kesne Fair enough, just keep in mind suspense in latest alphas will be less efficient than in the future because we\u2019re currently rendering significantly more often than necessary.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 05:40:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973433416392888320", "body": "@kesne https://t.co/Alo83gZnsm(https://t.co/3IsbTEFtsp) could become https://t.co/Alo83gZnsm(props.cache, https://t.co/3IsbTEFtsp). For demo I used a singleton. But normally it\u2019s available via context. We haven\u2019t worked on ergonomics yet.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 05:39:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973432444354465792", "body": "@kesne This week sounds a bit early if you mean testing suspense (it\u2019s not ready and will miss some important optimisations for a few months). Testing context API itself is probably fine if you build React from master (still landing bug fixes).", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 05:35:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973427077159555072", "body": "@kesne Yeah. We intentionally didn\u2019t want subscriptions because it\u2019s too much of an upfront init/memory cost for things that tend to change too rarely. New context API walks the tree looking for Consumers, and that\u2019s fast because we just need a quick field check on each fiber.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 05:14:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973425340377911296", "body": "@kesne So there could be a HOC like withCache, or a render prop. Could also use context directly.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 05:07:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973424592898482176", "body": "@kesne New context doesn\u2019t use subscriptions. Just using Context.Consumer is enough, React lazily finds them all in the tree when necessary.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 05:04:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973421828654948352", "body": "I already tweeted this album but this specific track is too perfect https://t.co/7SCWnTPmMy", "favoritedCount": 44, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 04:53:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973421429059477504", "body": "@kesne You could transfer a subset of old data to the new cache instance when you create it if you were implementing your own", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 04:52:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973420486385430528", "body": "@kesne Pass cache through context. Invalidation sets a new cache instance at the top", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 04:48:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973417792635572224", "body": "@kesne Na\u00efve cache provider we\u2019ll publish as a reference implementation just invalidates the whole thing. You can go more granular with a custom cache.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 13 04:37:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973322190597820417", "body": "@true_shoorik I understand the frustration but it\u2019s not exactly new \ud83d\ude42 this issue has always existed. Yes, there are plans for a more powerful SSR.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 22:17:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973319090688413697", "body": "@wizbiz18 Check this out https://t.co/6krLksh0RI", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 22:05:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973314649495035904", "body": "@wizbiz18 I like Noname", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 21:47:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973309296711753728", "body": "@true_shoorik Yeah, I understand. That\u2019s a known limitation, don\u2019t have anything better for you right now.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 21:26:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973288526501605379", "body": "This is amazing https://t.co/91WT1YFoh8", "favoritedCount": 38, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 20:04:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973278075407478784", "body": "@true_shoorik Just try/catch?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 19:22:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973273719039758336", "body": "RT @tomdale: At @LinkedinEng, we built the same app twice with Glimmer.js and Preact. What happened next will shock you.\n\nhttps://t.co/qADV\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 19:05:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973262311640195073", "body": "RT @orta: I\u2019m speaking tonight at @iOSoho on our 2 years of using @reactnative in an existing codebase\n\nMain focus:\n  - What we wanted\n  -\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 18:19:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973259090402168832", "body": "My wife is sending photos from her trip into the English country and it\u2019s basically Minecraft https://t.co/MRuc5wqzkb", "favoritedCount": 994, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 18:07:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973232037435006978", "body": "RT @ReactAlicante: Are you a beginner? One more year, @ForbesLindesay will help you taking your first steps with #reactjs ! https://t.co/7Z\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 16:19:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973213505150074880", "body": "@ScribblingOn I try to catch up at top albums lists from a few publications each year \ud83d\ude42", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 15:05:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973212854202585088", "body": "https://t.co/ZZlJY4OywT", "favoritedCount": 49, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 15:03:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "973209355515564032", "body": "@eduardosanzb Nah I just typed it", "favoritedCount": 15, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 14:49:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972987850156371970", "body": "@pete_gleeson Spaghetti isn\u2019t the only problem. How would you keep &lt;MoviePage id={1}, /&gt; suspended in place while &lt;MoviePage id={2}, /&gt; starts loading, if fetching happens in components below? Error boundary would force you to unmount the existing component.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 00:09:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972986192164741120", "body": "RT @d_run: Continuations by example: Exceptions, time-traveling search, generators, threads, and coroutines - https://t.co/UwRFjp6hcJ\n\nCont\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 12 00:02:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972984418662043648", "body": "@pete_gleeson Looks cool! I don\u2019t think try / catch would catch promises from .read() in child components, right?", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 23:55:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972967439016386561", "body": "@pavanchirravuri @acdlite React components themselves act as potential yield points. If one component blocks the thread on its own there\u2019s nothing we can do, but it\u2019s fairly rare. In practice checking for more work between working on other components is often enough.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 22:48:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972964680414134272", "body": "@woodfung @jsconfis I\u2019ll share when known implementation bugs are solved and this functionality gets into an alpha", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 22:37:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972930926694068225", "body": "@Jhnnns Depends on the kind of side effect! For data fetching, the new way is probably going to be the best one after it\u2019s stable. For other effects componentDid* hooks are the best!", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 20:23:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972921119761158145", "body": "@kosamari Does it always have to be one or the other? \ud83d\ude42 I think it\u2019s cool we have a flexibility to do either. Shipping a lot of code to users without minifying is not a great user experience. OTOH it\u2019s great hobby projects can be done in a quick way.", "favoritedCount": 23, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 19:44:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972893167065411584", "body": "@dimomir Sure", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 17:53:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972877987292024832", "body": "@lmatteis @jsconfis Yes, we keep this in mind too. As I mentioned the actual API design is not final. In particular the &lt;Loading&gt; component doesn\u2019t quite make sense and we need to expose something lower level for the scenarios you describe.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 16:52:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972874073134063617", "body": "@cramforce @JSConfAU You might enjoy this post https://t.co/gNHxCihN77", "favoritedCount": 16, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 16:37:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972860355985772545", "body": "RT @dan_abramov: Credits:\n\n@jordwalke: first prototypes\n@sebmarkbage: new architecture, APIs\n@acdlite: implementation, APIs\n@ProvablyFlarni\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 15:42:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972859967698014208", "body": "@SIDDHANT6969 @jsconfis It can\u2019t possibly make a network call itself faster. But it makes it easier to do network requests from components and makes the user experience more fluid by avoiding extra loading states. Please watch my talk, it\u2019s hard to explain without seeing.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 15:41:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972856536073687040", "body": "Credits:\n\n@jordwalke: first prototypes\n@sebmarkbage: new architecture, APIs\n@acdlite: implementation, APIs\n@ProvablyFlarnie and @brian_d_vaughn: integration, migration and internal dogfooding\n@sophiebits: strategy\nme (with help from the community): demos", "favoritedCount": 75, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 15:27:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972853901031542784", "body": "@tomdale Yes, also props/state might change in the meantime so we\u2019d have to \u201cretry\u201d anyway.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 15:16:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972853036673650688", "body": "@gvidon Yes, React blog and @reactjs twitter", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 15:13:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972852938828865537", "body": "@RubenOostinga We have an independent project aimed to improve that but it\u2019s too early to see if that works out", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 15:13:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972852734641745923", "body": "@nojvek Not my ideas \ud83d\ude42 I just did the demos", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 15:12:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972852632397205504", "body": "@funtriangles @jsconfis Yes although the default caching strategy is na\u00efve. You can supply your own cache though.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 15:11:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972852057467170816", "body": "As always, keep an eye on our blog (https://t.co/D5RxIw8gep) and twitter (@reactjs) for updates! Anything important will be shared on both of these sources.", "favoritedCount": 55, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 15:09:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972851604083953665", "body": "Importantly, patterns unsafe in async mode often happen to cause subtle bugs, memory leaks, and other issues even in sync mode. So, while this migration will be gradual and opt-in, it will lead to better code even if you don\u2019t plan to use async features yet.", "favoritedCount": 24, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 15:07:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972851020803067906", "body": "We\u2019ll be posting more about problematic patterns and better alternative recipes on our blog in the coming weeks: https://t.co/D5RxIw8gep. The migration will be opt-in and gradual because nobody (even us) can rewrite their components. Innovation must happen incrementally in place.", "favoritedCount": 42, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 15:05:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972848952138780675", "body": "In addition to the ecosystem, we have over 50,000 React components at Facebook and can\u2019t just change their behavior. This motivates our recent and ongoing work on better lifecycles (e.g. getDerivedStateFromProps). You can provide feedback on our RFCs: https://t.co/ZoWIDk9bbr", "favoritedCount": 41, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 14:57:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972847917903032320", "body": "We\u2019ve found patterns that won\u2019t work well with suspense and time slicing. Particularly, side effects in willMount, willIUpdate, and willReceiveProps lifecycle hooks. This makes sense: both time slicing and suspense may \u201cretry\u201d rendering but side effects aren\u2019t safe to repeat.", "favoritedCount": 37, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 14:53:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972839650082656256", "body": "The true power of these features lies in React coordinating the work of the whole tree and providing the best experience for user\u2019s device and network. This is why there won\u2019t be a new \u201casync component\u201d base type. We want them all to benefit from these new capabilities.", "favoritedCount": 46, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 14:20:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972838329367584768", "body": "Suspense is a fundamentally new capability that lets you render a component tree \u201cin background\u201d while components are fetching data, and display them only after the whole tree is ready. For slow connections, it gives you full control over where and when to show a placeholder.", "favoritedCount": 59, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 14:15:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972837041527500801", "body": "Time slicing lets you render and update large React component trees without blocking the user interactions. It is a perceived performance optimization that becomes more relevant as your app adds features and its UI becomes more ambitious.", "favoritedCount": 41, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 14:09:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972836266806009856", "body": "In the talk, I show two different new capabilities enabled by the same underlying mechanism (\u201casync rendering\u201d). We call these capabilities \u201ctime slicing\u201d and \u201csuspense\u201d.", "favoritedCount": 32, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 14:06:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972833772470185984", "body": "In the coming months you\u2019ll be hearing more about \u201casync rendering\u201d in React. What does it mean for your app? Watch my talk at @jsconfis in which I show off the new capabilities that async rendering unlocks for your components. https://t.co/YcAcDqGhMw", "favoritedCount": 1136, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 13:57:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972831749985193984", "body": "@colshacol @fazlerocks @mweststrate Suspense is not a state management API", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 13:48:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972831310891966465", "body": "@rhodesjason @stevekinney Yes, there is expected to be more GC churn with listeners in DEV version", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 13:47:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972830593074520065", "body": "@DidierFranc Yeah we\u2019ll need to fine tune how that works \ud83d\ude42", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 13:44:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972825742219325442", "body": "RT @chrisvfritz: Hey, I launched a Patreon this weekend! \ud83c\udf89 If I've made your Vue work easier and you'd like me to spend 4x time doing that,\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 13:25:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972820342338129920", "body": "RT @brian_d_vaughn: This is a good opportunity to make an impact and gain experience maintaining a medium-sized OSS project. react-virtuali\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 13:03:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972656034845216768", "body": "@giamir lol good detective work", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 02:10:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972653752309121024", "body": "@stevekinney Are you measuring the production version?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 02:01:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972653371650961408", "body": "@iPAINTCODE @reactjs You can keep writing it explicitly if you prefer so", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 11 02:00:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972582899500363776", "body": "@Jordy_vD_ Probably makes sense to start with this polyfill? https://t.co/3nOKBh6doK", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 21:20:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972573639202758656", "body": "@Jordy_vD_ Context will likely be usable in a few weeks. Suspense coming some time this year but will require some ecosystem effort", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 20:43:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972547124469608454", "body": "In case you missed it, @acdlite talked about the past and the future of React on this podcast, and it was good https://t.co/gLjOQfbFan", "favoritedCount": 130, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 18:57:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972543356113911815", "body": "@TheLarkInn @trueadm Read all core webpack plugins", "favoritedCount": 43, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 18:42:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972543067822714880", "body": "@Norman_Coloma @reactjs @ReactTraining We\u2019re working on some things to make it easier in the future (not sure if you saw my talk). Won\u2019t help you today though.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 18:41:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972542478204194816", "body": "@trueadm Do something very boring?", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 18:39:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972541818792497154", "body": "@AdamRackis @tizmagik I don\u2019t know what exact API will look like but I imagine there would be a way to start fetching but flush the placeholder if it takes too long (and then stream missing data and HTML after it)", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 18:36:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972541435374391296", "body": "@Norman_Coloma @reactjs @ReactTraining I don\u2019t understand the question", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 18:35:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972541357783961600", "body": "@DidierFranc Error boundaries", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 18:35:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972541051075514370", "body": "RT @acdlite: @dan_abramov @pomber And yet, something between this and the processor must be acting suspenseful, otherwise the whole compute\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 18:33:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972538911305158657", "body": "RT @braposo: Just published a write-up of @ReactFest at https://t.co/BOQACSxQLj\n\nThis was an amazing event and I'm really excited to share\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 18:25:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972536334668779520", "body": "@pomber The API was right all along, it\u2019s just the implementation that was terrible \ud83d\ude43", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 18:15:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972532709464723457", "body": "@AdamRackis @tizmagik Do demos in my talk help? I think they\u2019re pretty explicit about what API could roughly look like.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 18:00:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972530811089182721", "body": "@tizmagik @AdamRackis If only we had an API to make this simpler to implement!", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 17:53:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972511029916729344", "body": "@geareduptech There\u2019s a lot of misleading and/or wrong things in it. Watch my talk for what I actually said \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 16:34:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972510346564067328", "body": "@JoshWComeau @coderitual I\u2019m still not a fan of code like this though. That animation isn\u2019t interruptible seems like a smell. I would probably express it as a state machine and hook it to componentDidUpdate instead.", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 16:31:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972506767170162689", "body": "@JoshWComeau @coderitual Okay, animation sequencing is a good use case for the callback! I was confused by your screenshot since it implied you only wait to read from this.state \ud83d\ude42", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 16:17:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972505500087660546", "body": "@geareduptech The stuff I showed has nothing to do with Redux. Your friend was misinformed by an article that was based on a joke tweet \ud83d\ude1b Yes that\u2019s the quality of blogs in 2018", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 16:12:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972505025783189504", "body": "@coderitual @JoshWComeau It\u2019s usually a better one too. Ensures effects are consistent regardless of where in the component you call setState.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 16:10:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972504528108052482", "body": "A thought on common \u201cawait setState\u201d proposals: https://t.co/gbnY2slPKF", "favoritedCount": 32, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 16:08:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972503993216917505", "body": "@JoshWComeau I think that this code looking ugly is a feature, not a problem. You\u2019re not supposed to need this often.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 16:06:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972503715071619072", "body": "@JoshWComeau If you just want to know the next state, you already have it. You just passed it to setState \ud83d\ude42 There are rare cases when you actually need to wait for it to flush (focus, animations) but setState callback is often used without any need so I want to push back a bit.", "favoritedCount": 16, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 16:05:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972501917468372994", "body": "@JoshWComeau Why do you need this?", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 15:58:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972454382024486912", "body": "RT @ReactJSgirls: It\u2019s amazing to see so many #ReactJSgirls being part of @ReactFest \ud83d\ude4c\ud83d\ude4c @type__error, @studioswong, @siaw_stephanie gave th\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 12:49:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972453781144309760", "body": "RT @elibelly: Had a great conference day yesterday at #ReactFest! Here are my slides  on internationalisation and how to get started in Rea\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 12:47:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972453515699290113", "body": "RT @brian_d_vaughn: Have you written a React component that subscribes to one of its props (e.g. a component that subscribes to a geolocati\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 12:46:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972297076955668480", "body": "@toshok Any precedents?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 02:24:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972295775655952384", "body": "@wycats What name would you choose for the property? It\u2019s the \u201cwrapped\u201d one.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 02:19:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972294836232519680", "body": "An object only has a single mutable object property. Object\u2019s sole purpose is to \u201cbox\u201d that value. How do you name that property? I\u2019ll start with most obvious choice: \u201cvalue\u201d. Do you know other notable examples from established APIs, in JS and elsewhere?", "favoritedCount": 163, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 02:15:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972279877582848006", "body": "@knitcodemonkey @FormidableLabs Sounds great, congratulations!", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 01:16:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972269477223124992", "body": "RT @acemarke: React-Redux currently supports passing `store` directly as a prop to connected components, as an alternative to accessing it\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 00:34:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972269141724983296", "body": "@colinrcummings Nothing wrong with that!", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 00:33:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972267723819569152", "body": "@acemarke Although I wouldn't be surprised if there is a way to still make it work somehow.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 00:27:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972267460564013056", "body": "@acemarke I think what we really might want there is a factory of Provider/connect pairs. Sort of like how context already works :-)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 00:26:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972266603160260608", "body": "@acemarke I think I might have used this when I connect()ed inside a library. Didn\u2019t want to \u201cdictate\u201d the Provider for the whole app below (and potentially override a user\u2019s Provider).", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 00:23:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972265677548675073", "body": "Only 2015 kids remember: npm install flummox", "favoritedCount": 258, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 00:19:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972264471476539392", "body": "RT @jessachandler: \ud83d\udcbb\ud83d\udd25HELP - I'm stuck in #nodejs API -&gt; front-end loop with #reactjs and #redux - must be doing something wrong. \nDo you ha\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 10 00:14:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972260400489226240", "body": "@erikras @jlongster In bed, chilling, listening to @acdlite :-) https://t.co/WeDS4n1Vop", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 23:58:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972260400489226240", "body": "@erikras @jlongster In bed, chilling, listening to @acdlite :-) https://t.co/WeDS4n1Vop", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 23:58:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972258683320176640", "body": "@jlongster Does this help? https://t.co/gFtPAir4i6.contains(https://t.co/UCqWdOVr4T) tells you whether the click was within or outside. Use that instead of stopPropagation (which would prevent React from ever receiving the event). https://t.co/BZIyVEkgqz", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 23:51:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972255752432865280", "body": "RT @TheWebPlatform: Episode 156 - React 16 - Fiber and Beyond with Andrew Clark (@acdlite) https://t.co/WJbw3mOSXp #JavaScript #ReactJS htt\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 23:40:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972253751749857280", "body": "RT @monicalent: Come see my talk @LandingFest in Berlin next week! I'll be talking about the technology behind @SumUp's design system and h\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 23:32:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972252094630637572", "body": "RT @moderndotweb: . @tarams sat down with @cowboyd @mweststrate @timdorr to talk about state management! Have you listened yet? https://t.c\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 23:25:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972250511901675520", "body": "RT @FioraAeterna: https://t.co/ZMtEjzJQ1U", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 23:19:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972249553322864641", "body": "RT @brian_d_vaughn: PSA: If you're a library maintainer and you're wondering about how you'll be able to use React's new getDerivedStateFro\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 23:15:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972248318226190336", "body": "RT @brian_d_vaughn: If you use the HOC pattern for React components, you may have found \"refs\" difficult to work with. You may have tried w\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 23:10:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972220924429832192", "body": "@purplevicki1 @ReactFest @gretastarlight @NikkitaFTW @elibelly @peggyrayzis @type__error @siaw_stephanie @YLDio You too, thanks for coming! Hope to see you again at future meetups", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 21:21:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972220012869181440", "body": "@eda_wu Hope you found it interesting!", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 21:18:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972219847701598210", "body": "@siddharthkp @thekitze Nah I just get real thirsty demoing this", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 21:17:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972217679519059968", "body": "RT @ReactFest: \ud83c\udf89We are so lucky to have such amazing sponsors supporting us - shoutout to @auth0 for being one of them! \ud83c\udf89", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 21:08:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972214161043271681", "body": "@DidierFranc I don\u2019t think this repo demoes suspense \ud83d\ude42 The main point is suspending rendering. This implementation can\u2019t do this in principle (it can only be implemented in React itself). So IMO this just creates confusion.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 20:54:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972213405082902528", "body": "@BillSorensen Wrap them in context that provides a mocked cache so the values are already there. No need to mock fetch. I think this actually makes it easier to test than data fetching in lifecycles.", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 20:51:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972212562602463232", "body": "@jadbox @feross One of future minors. My demos relied on some duct tape working around known bugs and missing optimizations. Pretty sure we\u2019ll ship in some form this year though.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 20:48:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972211241216245762", "body": "Wow, @ReactFest was truly outstanding. Thanks for a great vibe and top-notch content @gretastarlight @NikkitaFTW @elibelly @peggyrayzis @type__error @siaw_stephanie &amp; co. And huge thanks to @YLDio for sponsoring the event! \ud83d\udc9c https://t.co/C0VabBBqhh", "favoritedCount": 162, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 20:43:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972192932483751936", "body": "@ThePaulMcBride Sure although it they are, I\u2019d consider it to be a singe app", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 19:30:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972191509230620672", "body": "RT @neoziro: Envious from Creact React App error overlay? You can now add it in your app with a single line of code!\n\nIntroducing Webpack E\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 19:24:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972121997353324544", "body": "RT @peggyrayzis: Thanks @ReactFest, you were a great audience! \ud83c\udf89 If you'd like to learn more about #GraphQL and Apollo Boost, check out the\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 14:48:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972057617626488832", "body": "RT @ReactFest: We are live \ud83d\ude4c\ud83d\ude4c https://t.co/bQE9nL5Ptj", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 10:32:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "972039407132987394", "body": "RT @ReactFest: #Reactfest today!! \ud83c\udfa1\ud83c\udfa1\ud83c\udfa1\nFind us at One Embankment venue (8 Victoria Embankment, London WC2R 2AB), just under the Waterloo Bri\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 09:20:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971914809213059072", "body": "RT @hswolff: In a new video I delved deeper into React Suspense and how awesome it is to write async code in a sync style. https://t.co/vBx\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 01:05:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971910972473511937", "body": "@slicknet @kangax @zachleat @angustweets I\u2019d note it\u2019s not just extending that\u2019s harmful. Library devs today need to be just as mindful every time they do a duck typing check. https://t.co/H8atUeCNpK", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 09 00:50:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971823703595118592", "body": "@majapw @SVesselov @catheraaine @carolstran @nebrius @dgeb @DKundel @anialdam @WillsLab @vanessayuenn @floriidaaa @TryggviGy It was fun to hang out! See you some time", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 19:03:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971823056648851456", "body": "@raquelxmoss @johnlindquist @BenLesh In Russian they \u201cchick chick\u201d", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 19:00:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971821314871832579", "body": "I\u2019m glad I don\u2019t care about these meaningless news stories and don\u2019t waste my attention on them \n\n*proceeds to argue about smoosh* https://t.co/PzckZ5IbZc", "favoritedCount": 118, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 18:53:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971800914091757569", "body": "@capajj @catelandaxel @bterlson And is TC39 advancing proposals that conflict with those?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 17:32:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971800514772992000", "body": "@Shanx @jensimmons You\u2019re saying \u201ceven\u201d as if it was unusual \ud83d\ude42 All examples on https://t.co/UuHCiPFnCb use vanilla CSS, and that\u2019s what we do at Facebook too. While I\u2019m empathetic to people solving their problems with CSS-in-JS, associating React with it makes no sense to me.", "favoritedCount": 32, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 17:31:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971795539556798464", "body": "RT @sebmarkbage: If you write JavaScript, never do duck typing on something that might be a built-in. if (x.flatten) { ... },", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 17:11:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971795488931483651", "body": "RT @sebmarkbage: Did you know that .type can probably not be added to String.prototype because of an old version of React? :) I\u2019m kind of g\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 17:11:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971794738583044097", "body": "@catelandaxel @bterlson Can you offer specific examples? I\u2019m curious what other cases you are referring to", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 17:08:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971777245068054529", "body": "@Dru89 @Nimelrian @btmpl Yeah that\u2019s the plan, and you can hoist those as high up as reasonable (e.g. before the code loads).", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 15:58:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971760168336752640", "body": "@runjep @noopkat Cache the data, make sure you can retrieve from cache synchronously", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 14:50:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971759959615725571", "body": "@EphemeralCircle @acdlite @sebmarkbage Mostly because 95% of reconciler logic is about handling prioritized updates (which aren\u2019t an issue on the server).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 14:50:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971740148152053760", "body": "RT @noopkat: when implementing routing on a single page app _please_ put me back in the spot I was at within your infinite scroll list when\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 13:31:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971737944091512832", "body": "#componentDidSmoosh", "favoritedCount": 311, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 13:22:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971737378732888065", "body": "Related tip I picked up from @acdlite: include an obvious flaw in the proposal so people can direct their initial resistance to it. Then fix it \ud83d\ude43", "favoritedCount": 171, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 13:20:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971736544586469376", "body": "Consensus ProTip: suggest an API way more bizarre than you need so that compromise on what you really wanted seems like a reasonable middle ground to everyone.", "favoritedCount": 467, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 13:17:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971734012858421248", "body": "RT @workshop_me: \ud83c\udf99 https://t.co/IR1AbDRTFu Podcast Episode 2 is up!\n@bdougieYO interviews @ryanflorence about https://t.co/IR1AbDRTFu, his\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 13:06:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971733888388222978", "body": "@EphemeralCircle Great post! I know @acdlite experimented a little with suspense in SSR so he might have some extra insights. Fun fact: @sebmarkbage came up with suspense thinking about next gen SSR, and client-side just kinda fell out of that.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 13:06:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971733863859924992", "body": "RT @EphemeralCircle: I just wrote a think-piece on React Suspense and server rendering. https://t.co/qomrPjlRNH", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 13:06:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971723361331154944", "body": "@gkatsanos @bterlson Mmmm nope \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 12:24:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971718037043924993", "body": "RT @skidding: Check out this error page,\n\n1. Elegantly captures exceptions via React componentDidCatch\n2. Creates a GitHub issue link with\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 12:03:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971716570123788288", "body": "RT @dan_abramov: @bterlson I don\u2019t understand why people got worked up about it. I think maybe it\u2019s because the culture of ridiculous straw\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 11:57:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971715711176511488", "body": "@bterlson What TC39 sees: here\u2019s an important problem, here\u2019s a ridiculous way to solve it (let\u2019s find better ones!) What people outside see: OMG TC39 is conspiring to rename all methods to be cute because of geocities", "favoritedCount": 37, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 11:54:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971715298905780224", "body": "@bterlson I don\u2019t understand why people got worked up about it. I think maybe it\u2019s because the culture of ridiculous strawman naming suggestions to start a discussion about important topics isn\u2019t really widely known outside of TC39.", "favoritedCount": 21, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 11:52:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971713353860222976", "body": "RT @bterlson: So my stance on #smooshgate: it seems silly to break the web when there are other reasonable names to pick from. Hopefully fu\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 11:44:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971712118461489152", "body": "RT @acdlite: What if higher-order components added extra arguments, instead of adding extra props? A clever way to avoid naming collisions.\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 11:39:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971563991762984960", "body": "Flatten \u2192 Smoosh \u2192 The Life of Pablo", "favoritedCount": 328, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 01:51:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971541617202130944", "body": "@lmatteis @btmpl Specifically being able to add code splitting anywhere without things starting to jump and mess up the layout as they load feels like something I\u2019d use all the time", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 00:22:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971540824814182400", "body": "@lmatteis @btmpl I do think the mental model of how data fetching is done is compelling by itself though. No need to think about all those loading states and orechestrating them.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 00:19:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971540652898086912", "body": "@lmatteis @btmpl Yeah there\u2019s definitely a difference between a usable UI and a polished UI, and we\u2019re focusing on going the extra mile here. Because at some point that\u2019s the polish you need and it\u2019s hard on the web.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 00:18:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971537462035124225", "body": "@lmatteis @btmpl I don\u2019t know what you mean by \u201cthat much of a problem\u201d, but yes, waiting for a page to be ready before transitioning to it is a common requirement for high quality UIs that is hard to implement", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 00:05:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971536803109965825", "body": "@richvaldivieso cc @btmpl", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 08 00:03:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971535098138054657", "body": "@thomasABoyt Make it worse to make it better", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 23:56:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971534771473002497", "body": "@richvaldivieso We\u2019ll announce when this stuff is usable \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 23:55:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971518828260839424", "body": "@type__error @deer_ful @sailorhg I suppose this is it although it looks a bit lighter https://t.co/v854VT9BwW", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 22:51:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971518608772911104", "body": "@type__error @deer_ful @sailorhg Wow I love this, is there a Sublime port?", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 22:51:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971517963395268610", "body": "@theKashey @idaraselia @cramforce @cpojer \u0414\u0443\u043d\u0443\u0442\u044c/\u043f\u043b\u044e\u043d\u0443\u0442\u044c", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 22:48:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971455009396314113", "body": "@m_podlasin @_reznord @reactjs It\u2019s stable in the sense that we have 50 thousand components at Facebook and they must keep working. Nobody\u2019s going to rewrite them out of the blue. \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 18:38:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971439276276805634", "body": "@cramforce @cpojer \u041c\u043d\u0435 \u043f\u0440\u0430\u0432\u0434\u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f [].\u0441\u043a\u0443\u043a\u043e\u0436\u0438\u0442\u044c()", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 17:35:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971426878522318848", "body": "@jdan here\u2019s my soundcloud", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 16:46:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971425061738631171", "body": "mega mega upload https://t.co/LiS740Kzph", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 16:39:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971423615047618562", "body": "Creepy https://t.co/QTNE8hntqO", "favoritedCount": 42, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 16:33:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971419348173774848", "body": "@bradleymeck And note that fixing it might be outside the competence of even people who built those websites. E.g. if they just used a minified library/widget that happened to rely on MooTools. How are they supposed to \u201crefactor\u201d it now?", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 16:16:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971418733808889857", "body": "RT @bradleymeck: I feel like the people who would see programming polls are not the people who would have problems fixing things if we brok\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 16:14:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971406094290554881", "body": "@timarney We only show this for React &lt;=0.14 for now. Actually might be a good time to start showing this for React 15.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 15:23:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971404713039224832", "body": "@timarney Always been the case since we introduced those icons \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 15:18:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971397836251201537", "body": "@gwmccull @_reznord @reactjs Well I think it\u2019s a bit obnoxious if they appear too often. I think we mostly designed these warnings for ReactDOM.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 14:51:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971394346816868352", "body": "@gwmccull @_reznord @reactjs The warning itself is probably correct but: (1) it shouldn\u2019t fire for built-ins like Text, (2) it shouldn\u2019t be disruptive, (3) it should\u2019ve come out after the documentation is ready", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 14:37:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971393962429812736", "body": "@gwmccull @_reznord @reactjs Well.. you\u2019d need to at some point but we really should get the docs in order first.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 14:35:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971392986767675392", "body": "@gwmccull @_reznord @reactjs In the future we\u2019d appreciate getting pinged on issues about undocumented warnings coming from React \ud83d\ude42", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 14:31:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971392734417375232", "body": "@gwmccull @_reznord @reactjs Yes, we just learned a couple of hours ago. It\u2019s a bug. https://t.co/PB6PEUpfHu", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 14:30:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971392306967347200", "body": "@cramforce @cpojer [].\u0441\u043f\u043b\u044e\u0449\u0438\u0442\u044c()", "favoritedCount": 88, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 14:29:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971387171474214913", "body": "@aforty These are not alphas. I\u2019m sorry it\u2019s confusing. The \u201creact\u201d package it\u2019s referencing barely contains any code. That\u2019s not the real thing. The actual engine is getting synced separately (and we don\u2019t sync unstable versions of it).", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 14:08:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971385316539092993", "body": "@btmpl Problems solved by suspense are:\n\n1. Avoiding a \u201ccascade of spinners\u201d and instead showing a single spinner for requests originating from different components\n2. Avoiding spinners when the connection is fast enough \n3. Avoiding race conditions without writing very complicated code", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 14:01:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971384568417783808", "body": "@btmpl I think this part is a bit backwards. Suspense *is* the kind of thing that async mode enables. It\u2019s not a solution for some problem caused by async mode \ud83d\ude42 https://t.co/LRmywRWXDd", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 13:58:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971378338248953856", "body": "@_reznord @reactjs Please wait for official communication on this. We\u2019ll be sharing info in a blog post. It\u2019s more nuanced than just \u201cthey will be deprecated\u201d and we\u2019ll provide extensive migration instructions.", "favoritedCount": 47, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 13:33:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971378150117691392", "body": "@aforty https://t.co/PB6PEUpfHu", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 13:32:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971363929460039680", "body": "@LoanLaux A week or two but I\u2019ve been saying this for a month", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 12:36:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971361095003799552", "body": "@icookandcode I am talking about the react-dom package", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 12:25:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971360498628390912", "body": "@lwansbrough @notbrent https://t.co/CAkkk3fkPL", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 12:22:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971360414515826688", "body": "@mamadero https://t.co/CAkkk3fkPL", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 12:22:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971360263562846208", "body": "@mattia_asti @reactnative @grabbou https://t.co/CAkkk3fkPL", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 12:21:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971360148533993472", "body": "@vydimitrov Did you file an issue?", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 12:21:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971360012323999744", "body": "@rarity2017 Context API, yes. Suspense still needs more work.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 12:20:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971359691564515330", "body": "@idowudaramola @reactjs https://t.co/XApzi8eB1X", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 12:19:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971359548610138112", "body": "@DidierFranc I don\u2019t see obvious issues, make a code sandbox?", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 12:18:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971358505700675584", "body": "@hagenverfolgt https://t.co/CAkkk3fkPL", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 12:14:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971358165588762624", "body": "Follow up: I am talking about \u201creact-dom\u201d and \u201creact-native\u201d packages. That\u2019s where the logic lives. The \u201creact\u201d package is less relevant. We are well aware that RN uses an alpha of the \u201creact\u201d package but that\u2019s just a versioning artifact.", "favoritedCount": 37, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 12:13:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971357645415297024", "body": "@satya164 RN is not using alphas of React. The \u201creact\u201d package doesn\u2019t contain any actual implementation.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 12:11:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971357458089349120", "body": "@Kelset @kevinjonson This doesn\u2019t apply to React Native because the \u201creact\u201d package itself doesn\u2019t contain the implementation.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 12:10:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971357221719281664", "body": "@steida The \u201creact\u201d package version is irrelevant in this case, we sync the actual internals manually to React Native.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 12:09:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971201198031327234", "body": "@lxcid The \u201creact\u201d package itself is mostly irrelevant, that\u2019s not where the logic lives", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 01:49:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971200121433182208", "body": "I mean.. it should go without saying right? But people rush to write blog posts about new features exposed in alphas (a very popular topic), the readers feel they\u2019re missing out and upgrade to try them, then get burned by missing docs and assume we won\u2019t write them \ud83d\ude2c", "favoritedCount": 178, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 01:45:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971199380232564737", "body": "Please don\u2019t use React alphas in production! They have bugs, missing documentation, and unstable APIs.", "favoritedCount": 446, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 01:42:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971198632618840064", "body": "@brian_d_vaughn @mjackson To be fair that\u2019s arguably not a real HOC though so the point stands", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 01:39:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971193298823020544", "body": "@ryanflorence @lmatteis It\u2019s not about setState in Fetch, it\u2019s about setState that caused Fetch to render (or re-render)", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 01:18:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971189265462898688", "body": "@adamhaile @sebmarkbage @titanve @acdlite https://t.co/7TBXq7JonH", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 01:02:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971187357994102784", "body": "@ryanflorence @lmatteis These are exactly the kinds of details we don\u2019t want people to depend on or think about right now though \ud83d\ude42 Just note that deferring plays a role here too.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 00:54:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971187182621872128", "body": "@ryanflorence @lmatteis real_delay = Math.min(delay_prop, expiration_time). Expiration time depends on the kind of the update (lo pri updates are 5 seconds, high pri are 1 second)", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 00:54:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971186879721820160", "body": "@ryanflorence @lmatteis This is not exactly right. Deferring is what makes it possible to suspend rendering for more than a second. Otherwise React forces the placeholder to appear (even if delay you specified hasn\u2019t expired).", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 00:52:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971186304334614529", "body": "@lmatteis The calls you wait for should be safe to repeat. So you shouldn\u2019t mutate there. You can however use suspense for refetching after cache invalidation.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 00:50:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971182126556205056", "body": "RT @greglobinski: The @gatsbyjs -starter-personal-blog is ready to play with. Take a look at the demo site https://t.co/3nXdRPRmWf , the co\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Mar 07 00:33:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971158857656479744", "body": "RT @grabbou: To improve transparency around React Native releases, we have created a repository where you can follow updates: https://t.co/\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 23:01:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971135372234248194", "body": "wtf @netflix https://t.co/cPMovPlmxy", "favoritedCount": 132, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 21:28:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971131947438178306", "body": "@AdamRackis @AdamMaras @reactjs .read() call in my demo works by throwing a Promise if it\u2019s not ready yet. React catches that, knows to retry rendering later.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 21:14:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971131693615771649", "body": "@AdamMaras @reactjs We\u2019ll be posting an RFC with explanation for why we went with this design. Happy to hear about alternatives.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 21:13:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971131499356540929", "body": "@AdamRackis @AdamMaras @reactjs (This is why I really suggest watching my talk before diving into discussing implementation details of how this works)", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 21:12:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971131336072269824", "body": "@AdamRackis @AdamMaras @reactjs Right, user space code calls something like https://t.co/GcvDVHugGP(https://t.co/3IsbTEFtsp)", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 21:12:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971130997520719874", "body": "@AdamMaras @reactjs I understand the concern but IMO there is no need to frame this in such a patronizing tone \ud83d\ude42", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 21:10:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971130704447852545", "body": "@AdamMaras @reactjs Also I don\u2019t think the answers are too confusing:\n\n1. Because the data isn\u2019t ready yet\n2. Because React retries rendering when the data is ready\n\nThis may be surprising today but I don\u2019t think this is hard to explain to somebody who\u2019s using React for the first time.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 21:09:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971130138846007296", "body": "@AdamMaras @reactjs Right. But let\u2019s make sure we are comparing this to what beginners need to learn to deliver a decent UX for data fetching + code splitting across many levels of components.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 21:07:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971128133587030018", "body": "@AdamMaras @reactjs Application code wouldn\u2019t be the one doing the throwing (or catching) explicitly so I don\u2019t imagine you\u2019d be debugging that control flow very often. As for being unusual, JSX was also unusual some time ago \ud83d\ude42 things become familiar when popular libraries do them.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 20:59:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971121357483397122", "body": "@gavricz Actually looking for new ones myself", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 20:32:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971120008100229120", "body": "@AdamMaras @reactjs Conceptually we think of them as similar to algebraic effects. Hope that helps \ud83d\ude42", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 20:27:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971116506926014464", "body": "@evanderkoogh @acdlite @acemarke We\u2019ll provide some ideas later \ud83d\ude42 I don\u2019t know answers to all these questions but @acdlite experimented with it", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 20:13:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971107838067138566", "body": "@evanderkoogh @acdlite @acemarke That API actually came out of SSR discussions \ud83d\ude42 Start rendering, wait for data for a little, if it takes too long then emit placeholders + later &lt;script&gt; tags that render the expired content.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 19:38:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971100726985412609", "body": "@adamhaile @titanve @acdlite cc @acdlite @sebmarkbage I\u2019m not sure", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 19:10:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971093668634550272", "body": "@btmpl @aweary Hmm no, I just mean that if I used setState() rather than deferSetState() in my talk for showDetail (and deferSetState is just unstable_deferredUpdates), it would always show a spinner after a second, even if I provided a bigger delay.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 18:42:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971092538420551680", "body": "@btmpl @aweary So if you ever see if not \u201crespecting\u201d the timeout you specify, and showing the placeholder too soon, it probably means you need to wrap in deferredUpdates (and if that doesn\u2019t help, ensure the deferredUpdates call itself is setTimeout\u2019d).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 18:37:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971092374691766273", "body": "@btmpl @aweary We assign an \u201cexpiration time\u201d based on update priority. For events like clicks, it\u2019s ~1 second. So you\u2019ll get a placeholder after a second even if you \u201cask\u201d for a bigger delay. But deferredUpdates() lets you opt into a longer expiration time (~5 sec).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 18:37:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971090711893377026", "body": "@btmpl @aweary There\u2019s also a known issue with unstable_deferredUpdates not working in an event handler. Have to also wrap it in setTimeout or Promise.resolve.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 18:30:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971089064257642496", "body": "@btmpl @aweary Yes that would help. The issue is that the first render is (currently) synchronous so placeholder kicks in immediately. You can either make first render async with createRoot, or you can trigger a deferred state update after mounting: https://t.co/fvNZNz2nwT", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 18:24:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971083736040333312", "body": "@matt5409 IMO: use normalizr", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 18:02:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971083625415528448", "body": "@btmpl It\u2019s not obvious what exactly you are expecting and how what\u2019s happening doesn\u2019t match your expectations. Can you be more explicit?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 18:02:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971078811797393413", "body": "@notbrent @threepointone Note cache is shared across whole app. It doesn\u2019t disappear on unmount, doesn\u2019t need to be hoisted up etc. So it is intended *for* sharing fetched data between components.", "favoritedCount": 25, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 17:43:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971076748103254018", "body": "@munchybunch @Vjeux @alangpierce https://t.co/YcAcDqGhMw", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 17:35:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971066433705791488", "body": "https://t.co/bZbS8NmgHA", "favoritedCount": 21, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 16:54:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971056899021066243", "body": "RT @tylermcginnis: \ud83d\udd7a\ud83d\udc83 Happy to announce my new Redux course is now live.\n\n\u2705 Build your own implementation of Redux\n\u2705 Build your own impleme\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 16:16:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971055264748142593", "body": "RT @jdan: Me reviewing code at age:\n\n19 - \"I don't know what any of this is, looks good\"\n21 - \"Can you rename this variable and indent the\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 16:09:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971054153270251521", "body": "@lmatteis @aaronjensen @acdlite Not sure how that\u2019s related. You invalidate when you think the data might have changed and you want fresh data.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 16:05:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971033132072947712", "body": "@MikeBarnhardt @reactjs Ironically the whole idea came out of thinking about a better SSR \ud83d\ude42 So yeah, it is part of the plan", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 14:41:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971032098428645377", "body": "@adamhaile @titanve @acdlite For low priority updates, both reconciliation and commit happen in rIC callbacks. Reconciliation is time sliced, commit is not. There\u2019s no added benefit to waiting for rAF to commit once everything is ready.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 14:37:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971031701358104581", "body": "@aaronjensen @acdlite Na\u00efve version just invalidates the whole thing. You can go more granular if you implement your own cache.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 14:36:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "971030783417896960", "body": "@0xFF69B4 https://t.co/YcAcDqGhMw", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 14:32:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970823222429208576", "body": "@necolas The ones with logos of all sponsors are the best", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 00:47:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970822786984960001", "body": "RT @marcosc: Fires up Web Payment spec in text editor. \n\nThrows on some Cardi B. \n\n\ud83c\udfa7 \"...I don't spec now, I make money move...\" \ud83d\udcb8 https://\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 00:46:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970822623859965959", "body": "RT @kristjanmik: Best scam of the year has successfully ended. We sold a bunch of people tickets to a #javascript thing but all they got wa\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 00:45:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970820381388001281", "body": "@PhilippSpiess Except https://t.co/rqe9CfW2B8 is unresponsive while loading. We can do better!", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 00:36:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970817262159646720", "body": "RT @brian_d_vaughn: Do any of your @reactjs components expect (native) Promises or observables as properties? I'd love to learn more about\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Mar 06 00:24:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970795119619330049", "body": "RT @raganwald: Many people quote \"Liskov Equivalence,\" but did you know that her language CLU pioneered\u2014in 1975!\u2014many of the language featu\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 22:56:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970787097769578496", "body": "@_pier Throwing any promise will work but we don\u2019t encourage doing this directly since you\u2019ll likely throw a different one every time so it\u2019ll never resume. Our reference cache implementation reuses pending Promises. https://t.co/TKRJgUDrBz", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 22:24:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970785243178422272", "body": "@meandmycode @sebmarkbage Anywhere I can read?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 22:16:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970784727534899201", "body": "@_pier You can pretend it\u2019s similar to algebraic effects like in Eff or Koka. That\u2019s what I do.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 22:14:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970782883668463617", "body": "@_pier It\u2019s not costlier than a network request. \ud83d\ude42 If we did this thousands of times in a loop that could be a problem, but we don\u2019t. The catch is a few call stack layers above, in the same place React normally catches errors (e.g. for error boundaries).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 22:07:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970778660105019392", "body": "@thatlokiiguy Relevant branch. Note: might be buggy. No demos online yet. https://t.co/TZDWfqV7Ok", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 21:50:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970778536100364289", "body": "@fbspin https://t.co/YcAcDqGhMw", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 21:50:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970772315456835584", "body": "@AndaristRake @YassineElouafi2 Parallel requests in sibling components *are* started automatically but there's no way to start a request if e.g. you're not sure what's going to be rendered. I do think tooling will solve this though \ud83d\ude42", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 21:25:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970771648403124225", "body": "The parts before that mark will probably make sense in another year or two", "favoritedCount": 18, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 21:22:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970770558047653888", "body": "Specifically, starting from 51:35", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 21:18:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970766490457837568", "body": "If you watched my talk, I suggest to rewatch @sebmarkbage\u2019s talk a year ago. My talk\u2019s narrative framework is largely inspired by it. And now that you\u2019ve seen specific examples (wasn\u2019t possible back then), it should make more sense. \ud83d\ude42 https://t.co/C5LYt5m2WC", "favoritedCount": 263, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 21:02:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970763423003922434", "body": "@birkirgudjonson Placeholder = React.Timeout with a slightly different API. Loading API is probably wrong anyway. I built from this PR: https://t.co/TZDWfqV7Ok", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 20:50:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970759808096882690", "body": "@olivtassinari cc @brian_d_vaughn", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 20:35:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970759690618658816", "body": "@olivtassinari Hey, are you aware we\u2019re shipping a polyfill that does this correctly? Please don\u2019t jump ahead yet, we\u2019ll publish a blog post for library authors soon. https://t.co/ltXdmhP0vN", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 20:35:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970759074924126209", "body": "@YassineElouafi2 Yes, \u201cfetchers\u201d (name TBD) would need to be shared since they are cache keys.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 20:32:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970758867779977217", "body": "@_pier Yes (cache throws a Promise, React catches it). Conceptually similar to algebraic effects.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 20:32:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970758753753722880", "body": "@EphemeralCircle @sebmarkbage Yeah we'll write it up", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 20:31:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970752047673937925", "body": "@YassineElouafi2 e.g. in my movie demo, &lt;MoviePageLoader&gt; that does code splitting could also include\n\nmovieDetailsFetcher.preload(https://t.co/3IsbTEFtsp);\nmovieReviewsFetcher.preload(https://t.co/3IsbTEFtsp);\n\nThen we\u2019d start these two requests a bit earlier.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 20:04:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970751771198058496", "body": "@YassineElouafi2 Yep (if it finishes fast enough). If not, then it waits (just like before). So preload is an optimization but not necessary to use the feature.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 20:03:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970750376294141954", "body": "@skippykawakami Yep", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 19:58:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970750189450465281", "body": "@YassineElouafi2 That doesn\u2019t require changing code of leaf components though. The conceptual model is similar to HTML rel=\"preload\".", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 19:57:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970750033770446853", "body": "@YassineElouafi2 Yes. You\u2019d use a special preload() API to tell React to start fetching certain things earlier if you know they\u2019ll need to be fetched. Tools like Relay/Apollo can automate this but there\u2019s still a manual way to do it.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 19:56:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970743661834194944", "body": "@andrestaltz @brian_d_vaughn @lincolnnathan21 Re: hot/cold, I\u2019m taking responsibility for explaining these incorrectly \ud83d\ude2c My Rx knowledge is from pretty far back and I probably forgot more than a half of it", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 19:31:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970737782095261696", "body": "@WesleydeSouza When it resolves, React can retry rendering.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 19:08:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970737696657289218", "body": "@WesleydeSouza Nope, it just throws a Promise if there is a cache miss (yes, throws). Thus interrupting execution. React catches that and knows to wait for it. Conceptually it\u2019s a bit like algebraic effects in languages that support them.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 19:07:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970728134797643776", "body": "@ribeiroigao @acdlite @sebmarkbage Either use an API that supports cancellation (e.g. axios) or keep a flag like hasUnmounted and check if before calling setState. In the future, suspense solves this.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 18:29:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970727864827023360", "body": "@acdlite @aweary @reactjs That was a nice present", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 18:28:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970727207919341568", "body": "@acdlite @aweary @reactjs A few more APIs and you\u2019ll be 30", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 18:26:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970726168772186112", "body": "RT @npmjs: npm ci is here, and it's very, very fast. learn more here: \nhttps://t.co/KwfmVKFJY0 https://t.co/ktpax8IBTk", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 18:22:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970724483031068672", "body": "RT @ryanflorence: I just published \u201cRender Props, React.createContext \u2026 But How?\u201d https://t.co/jlMCjZxK9c", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 18:15:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970717873835511808", "body": "@aweary @reactjs Gist from @acdlite two years ago https://t.co/Jh0uZxdjnO", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 17:49:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970713936646598656", "body": "RT @_theconsolelog: Brand new episode all about async @reactjs . Sorry to have kept you in suspense! https://t.co/Gn8l8LAFj8", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 17:33:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970712024966746112", "body": "@Saifadin They\u2019re similar but work better in my experience. No idea re: \u201chow I\u2019d structure\u201d, just a bunch of packages?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 17:25:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970710869683384320", "body": "RT @zeithq: We are honored to introduce Jessica Rose (FutureLearn / Open Code / Trans*Code) and Andrew Clark (Redux / React / Facebook) as\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 17:21:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970709216926339077", "body": "RT @ReactRally: What a fantastic morning to submit a talk to React Rally! https://t.co/Iwrfjkid6R", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 17:14:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970695210014576641", "body": "@aweary @reactjs This + context is how React Redux was supposed to work in the very first version. We couldn\u2019t do it because React got in the way. Hopefully we can get back to it \ud83d\ude42", "favoritedCount": 82, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 16:19:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970694073131651072", "body": "@selbekk @_Nec @sebmarkbage @gmzjuliana Lol didn\u2019t even occur to me \ud83d\ude05 \u201cuse cotton\u201d;", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 16:14:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970693689659060226", "body": "@karlrokeeffe Yep", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 16:13:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970693526735466497", "body": "@tung_js @n7best Right, and this coordination gets more complicated the more levels down an async dependency lives. With suspense it\u2019s automatic.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 16:12:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970692880535875587", "body": "RT @sebmarkbage: Immer looks like a good project. I\u2019m pretty convinced that temporal mutability like this is a good model. As long as it is\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 16:09:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970692789083176960", "body": "@WillyJLiu The point of this article doesn\u2019t quite make sense to me. You shouldn\u2019t use properties for *all* methods, only those that *need* to be bound and that you\u2019d bind anyway. Such as event handlers.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 16:09:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970691898196267008", "body": "@dimomir Focus on one thing at a time, find people to help me with things I\u2019m bad at", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 16:05:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970691709200994305", "body": "@WesleydeSouza Thanks! I\u2019ll probably share when we release an alpha with those features and more bugs are fixed", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 16:05:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970691461002952705", "body": "@Saifadin Monorepo maybe? I like yarn Workspaces", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 16:04:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970690887964602369", "body": "@ashwinkumar_v No specific timeline. Will need both some implementation work (important optimisations are missing) and ecosystem work (some lifecycles will need to change, stay tuned for blog updates).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 16:01:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970684476983595008", "body": "RT @monasticpanic: Ya'll @react_bootstrap needs to update to bootstrap v4. Plenty of first-time or beginner open source contribution opport\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 15:36:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970684402777849858", "body": "RT @dan_abramov: @titanve @acdlite For example if your transition from Feed to Profile, but only deep ProfileInfo needs some data, React ca\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 15:36:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970684362772631552", "body": "@titanve @acdlite For example if your transition from Feed to Profile, but only deep ProfileInfo needs some data, React can render the rest (in memory) while the data is being fetched. Resulting in faster update once data is ready.", "favoritedCount": 30, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 15:36:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970684028604092421", "body": "@benwiley4000 @acdlite Does this help? https://t.co/3kV3EIX4Ko", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 15:34:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970683958265634816", "body": "@titanve @acdlite So the new ability is to start reconciliation (a slower process) even when you don\u2019t have enough data to actually commit the final changes yet. So it can start earlier and be faster when data is ready. Don\u2019t wait for IO to do CPU work.", "favoritedCount": 14, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 15:34:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970683705768513536", "body": "@titanve @acdlite Commit = change the DOM. This is usually fast. Reconcile = call the render method, find out what should be rendered, call the next render method, etc. This can take a decent amount of time on a deep tree.", "favoritedCount": 45, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 15:33:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970683410514677760", "body": "RT @acdlite: simple-cache-provider has a `.preload` method that you can use to initiate a request before React gets to the component that n\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 15:32:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970683399068442624", "body": "RT @acdlite: What's nice about suspense is that you can start rendering *before* all the data has returned. That's something that's not pos\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 15:32:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970683388653981698", "body": "RT @acdlite: In React, if a component suspends, we keep rendering the siblings as deeply as we can. Suspend means \"don't commit,\" not \"don'\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 15:32:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970478268464943104", "body": "@aulisius7 Note we\u2019re not all guys \ud83d\ude42 I know you probably didn\u2019t mean it this way but unfortunately people often *do* imply that. So personally I try to avoid saying \u201cguys\u201d to spare the other person from guessing what I meant.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 01:57:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970476791205892103", "body": "@thatlokiiguy I just made a demo, it\u2019s the rest of the team who did a hard work implementing and coming up with those features!", "favoritedCount": 50, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 01:51:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970476598561558528", "body": "@ken_wheeler @dabit3 Yes that\u2019s what I mean. I\u2019m just noting that a \u201ctheme\u201d doesn\u2019t have to be a string or an object with styles. If you need really deep branding extensions, a theme object could contain render methods for different parts of UI", "favoritedCount": 18, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 01:50:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970476118926090240", "body": "@aulisius7 Any library can provide a cache as long as it\u2019s compatible with a few principles we\u2019ll explain later. Ours is just a reference implementation.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 01:48:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970475731854782468", "body": "@gmzjuliana Polyester is an anti-pattern!", "favoritedCount": 49, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 01:46:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970475731854782468", "body": "@gmzjuliana Polyester is an anti-pattern!", "favoritedCount": 49, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 01:46:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970475633737437184", "body": "@gmzjuliana Omg I wouldn\u2019t mind if this worked", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 01:46:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970449492238651392", "body": "@EphemeralCircle We have ideas on how to make it work but it\u2019ll need some help from community", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 00:02:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970449369760698370", "body": "@EphemeralCircle Hope it didn\u2019t disappoint", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Mar 05 00:02:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970445426020290560", "body": "@kyleshevlin @ken_wheeler AFAIK @monasticpanic and co changed API in 2.x so I expect that one to be better", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 23:46:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970445258071986177", "body": "@kyleshevlin @ken_wheeler That\u2019s why it might be a good idea to stop using its 1.x API \ud83d\ude42 it was invented like four years ago and didn\u2019t evolve with React patterns", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 23:45:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970443578681057281", "body": "@DJ1CON Haha you were great!", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 23:39:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970443296744013825", "body": "@modernserf They organized it at the party venue \ud83d\udc4d", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 23:38:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970435081897742336", "body": "RT @sehurlburt: Twitter tip:\n\nPost a mix of positive &amp; critical tweets. For anything critical (think: mentions filled with people arguing o\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 23:05:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970393214891982848", "body": "Bye \u00cdsland https://t.co/AkuAeOppfv", "favoritedCount": 74, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 20:19:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970385772657471488", "body": "@nickhudkins Not really. Mostly just an active listener \ud83d\ude42", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 19:49:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970384791131521024", "body": "@lmatteis Yeah", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 19:45:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970379600588046336", "body": "@bdwain Not quite yet (missing a lifecycle hook), but this is tightly related and will likely be possible in the future.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 19:25:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970379460624121856", "body": "@lmatteis Yep. Also once a spinner shows, make it possible to prevent showing the real thing for ~500ms (so that it doesn\u2019t flicker if data comes right after).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 19:24:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970379291258126338", "body": "@swyx @hswolff You can\u2019t choose buckets. React chooses them automatically based on when you fire an update and whether it\u2019s marked as deferred or not.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 19:23:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970377185667280896", "body": "@sto3psl We\u2019ll make the latter possible, yes.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 19:15:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970376566474670080", "body": "@AubreyArcangel @necolas Not a fan personally, just cotton always feels nicer to me", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 19:12:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970375307063685120", "body": "@swyx @hswolff I don\u2019t understand the second question.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 19:07:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970372699808727040", "body": "@necolas Pet peeve: polyester t-shirts with project logos. Look, if I really love the project I\u2019d maybe wear it, but it\u2019s just bad material quality. How can you care about perfect pixels and not notice that the thing is unpleasant to wear.", "favoritedCount": 84, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:57:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970368445358530565", "body": "@berryboy No but I did a talk https://t.co/YcAcDqGhMw", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:40:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970367604585062400", "body": "@hswolff Yep! Except we don\u2019t even use a priority enum anymore. Instead we assign \u201cexpiration times\u201d (aka deadlines) to individual updates, expressed as actual datetimes.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:37:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970367415921070080", "body": "Release train is a good metaphor for how rendering works in Fiber (and why time slicing and suspense works). https://t.co/Aj92lN7dhs", "favoritedCount": 21, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:36:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970367192746414081", "body": "@JoshWComeau That doesn\u2019t help if I do a setState() inside some deep child. Its update may trigger data fetching, but my placeholder is on top level. How could that top-level HOC \u201cforce\u201d a deep child to render its old state but also start rendering (and fetching) with its new state?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:35:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970366495015489537", "body": "Importantly, any component can do this without explicit coordination with parents. I can make any leaf component depend on something, and that constraint will \u201cjust work\u201d wherever it\u2019s rendered.", "favoritedCount": 31, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:32:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970365930126573568", "body": "@montogeek Not yet", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:30:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970365891367104512", "body": "@hswolff Before rendering, we calculate the state \u201cfor which\u201d to render based on that queue.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:30:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970365762954199041", "body": "@hswolff We have a queue of state updates. They\u2019re grouped into buckets by \u201cexpiration time\u201d. Expiration time = when does this update *have* to be flushed. For interactions, it\u2019s &lt; 1 second, but deferred updates (e.g. data fetching) defaults to 5 seconds.", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:30:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970365017613914118", "body": "@hswolff Yes", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:27:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970364972332134400", "body": "The new capability here is that any component can \u201csuspend\u201d the update that caused its render from \u201ccommitting\u201d. At least for a while. This was never possible before.", "favoritedCount": 47, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:26:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970364619058446336", "body": "While JS is single-threaded, maybe this metaphor might make sense. Imagine the new tree is rendered on another \u201cthread\u201d. When it\u2019s ready, they\u2019re swapped. But the old thing still \u201clives\u201d until it happens. Except we don\u2019t use threads, we use cooperative scheduling.", "favoritedCount": 66, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:25:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970364274441900032", "body": "If it takes too long then sure, either keep the spinner inline in the old view, or even put a big one instead of the whole old tree. But you have the option to avoid the empty state at all if loading is fast enough.", "favoritedCount": 27, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:24:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970363904319741952", "body": "For example, if you\u2019re moving from Feed to Profile, it won\u2019t show an empty page and then a spinner after timeout. It will keep Feed in place (potentially with some inline indicator) and wait for Profile to be ready before transitioning.", "favoritedCount": 42, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:22:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970363567433187329", "body": "Suspense lets you *delay* rendering the content for a few seconds until the whole tree is ready. It *doesn\u2019t* destroy the previous view while this is happening.", "favoritedCount": 51, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:21:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970363226574721030", "body": "@wmertens @Lord_Neto_ But yes, we can immediately \u201cexpire\u201d the fallbacks and then stream &lt;script&gt; tags that put real stuff in them as it gets ready.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:19:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970363058030772225", "body": "Most common question I get about suspense so far: \u201cCan\u2019t we implement this as a HOC?\u201d No. Here\u2019s why it\u2019s different.", "favoritedCount": 244, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:19:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970361452753190917", "body": "@wmertens @Lord_Neto_ We\u2019ll share more details on proposed SSR strategy later.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:12:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970359829343719430", "body": "@NathanLoding @housecor @jsconfis It\u2019s right here \ud83d\ude42 https://t.co/YcAcDqGhMw", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:06:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970358884417376258", "body": "@giltayar @DanShappir @jsconfis @Wix Less reflows in limited amount of time definitely gives you better performance. Cascade of spinners typically causes many reflows. I\u2019d also say that making code splitting effortless means people will use it more often.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 18:02:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970356114700341250", "body": "@DanShappir @giltayar @jsconfis @Wix The second one kinda fell out of the first one. Wasn\u2019t planned originally.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 17:51:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970355897921875970", "body": "@DanShappir @giltayar @jsconfis @Wix Yeah, I\u2019d say these are \u201cmicro\u201d and \u201cmacro\u201d versions of the same capability (interruptible rendering + ability to rebase deferred updates)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 17:50:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970355593348304901", "body": "@rhodesjason @acdlite Look at git history to find the PR that added it \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 17:49:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970355403455426561", "body": "@lmatteis @acdlite We don\u2019t know yet. Will see. I think most likely we\u2019ll need some changes to React Redux for this.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 17:48:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970319902916730880", "body": "@lmatteis @acdlite Why?", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 15:27:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970308746961412102", "body": "@_phis @sarah_edo @dmakogon @github You can go to their profile and choose \u201cblock or report\u201d", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 14:43:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970307935741112320", "body": "@hackuun @CompuIves @sarah_edo \u0421\u0435\u0440\u0433\u0435\u0439, \u0443\u0433\u043e\u043c\u043e\u043d\u0438\u0442\u0435\u0441\u044c", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 14:40:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970303263248666624", "body": "@sarah_edo @dmakogon @github Reported on GH too", "favoritedCount": 68, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 14:21:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970300868116537344", "body": "@c_pellegrino @andreas_wissel Yeah, same thing. I went with \u201ctime slicing\u201d because it\u2019s a bit more intuitive. \u201cIncremental rendering\u201d might mistakenly get interpreted as intermediate results being flushed to the screen.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 14:12:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970298667642048521", "body": "@art_al_ar \u041f\u043e\u0447\u0438\u0442\u0430\u043b. \u0427\u0435\u043c \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u0446\u0435\u0440\u0435\u0431\u0440\u0430\u043b \u043d\u0435 \u043e\u0447 \u043f\u043e\u043d\u044f\u043b", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 14:03:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970286135057543168", "body": "@giuseppegurgone Yeah, if you have a dynamic array of frags. For example mapping a list of items to frags.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 13:13:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970259083633799168", "body": "@Heaven_xz @Dru89 @acdlite Try implementing the Img component from my talk and you\u2019ll see \ud83d\ude42", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 11:26:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970258458862850048", "body": "@jordanpittman Note the key feature of suspense is the ability to *not* render the placeholder if the data loads fast enough", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 11:23:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970242169184440320", "body": "@TheLarkInn \ud83d\ude1d", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 10:18:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970115449714339840", "body": "Also the guys who make the shawarma are actually in charge of the playlist. Skipping songs, sometimes pausing for a minute to pick the next track. \ud83d\udd25", "favoritedCount": 56, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 01:55:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970112822905581568", "body": "Even a shawarma joint in Reykjavik blasts bangers at 2am, no tracks without hi hat triplets. This place is special", "favoritedCount": 166, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 01:44:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970108193371230209", "body": "@_nickwalt Yep, it\u2019s just cache, can be used in any component", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Mar 04 01:26:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970084870482481152", "body": "RT @ShopifyDevs: Join us March 15th for our first [free] apps webinar of the year - Creating Accessible #React Apps with @svinkle. Register\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 23:53:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970073394598334466", "body": "@AdamRackis @winterbe_ @intelligibabble @kylemathews @tizmagik Babel loader is the one doing the caching. Works fine in my experience.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 23:08:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970067151636828160", "body": "@roshangautam0 Yep! It was cloudy but I did see a few lights \ud83d\ude42", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 22:43:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970067013816258560", "body": "@AdamRackis @winterbe_ @intelligibabble @kylemathews @tizmagik Yes but that\u2019s cold start. If you cache them on disk then it can\u2019t be longer by definition unless something always evicts the cache.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 22:42:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970065210835955712", "body": "After seeing Iceland a bit this feels different. https://t.co/IJRZLwbxiv", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 22:35:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970028229271670784", "body": "@ryanflorence Had a lot of help from @ken_wheeler @mobz and @sophiebits with that one!", "favoritedCount": 25, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 20:08:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970026776226402305", "body": "@Lord_Neto_ We\u2019ll likely offer opt in at some point in 16.x release cycle", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 20:03:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970023231724941312", "body": "I\u2019m definitely in Iceland https://t.co/VU65cApQ04", "favoritedCount": 101, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 19:48:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970022356587442176", "body": "@intelligibabble @kylemathews @AdamRackis @tizmagik It\u2019s the question of how you minimally care to support. If you care then sure, ship ES5 code, I\u2019m all for it. But many Node module authors already don\u2019t care at all, and we need solutions for that world.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 19:45:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970019412592951296", "body": "@Lord_Neto_ https://t.co/YcAcDqGhMw", "favoritedCount": 38, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 19:33:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970019305118162945", "body": "@sompylasar I did smile when I said I\u2019ll put some side effects in render \ud83d\ude43", "favoritedCount": 21, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 19:33:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970019038482059264", "body": "@intelligibabble @kylemathews @AdamRackis @tizmagik Yes cold time would suffer. There are many inefficiencies in typical pipelines though (for example no multi-threading). In CRA we\u2019re doing this in the same release as we add thread-loader and bump webpack so that should dampen the hit.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 19:32:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970018337488072704", "body": "@intelligibabble @kylemathews @AdamRackis @tizmagik What\u2019s special about ES2015? Train is moving. Do we compile entry point for every version? In the scenario I imagine the norm is to publish only  code in latest approved standard version. Consumers compile it to the lowest they need.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 19:29:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970017863284256774", "body": "@intelligibabble @kylemathews @AdamRackis @tizmagik However there is a potential optimisation. If your app supports browser equivalent of &gt;= Node 6, there is no need to run Babel in package that promises to run on Node 4. Because we know a priori it won\u2019t contain \u201cnewer\u201d code anyway.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 19:27:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970017465756475392", "body": "@intelligibabble @kylemathews @AdamRackis @tizmagik All modules. ESM is orthogonal to this. When ES2019 comes out you don\u2019t want people who ship code to browsers to instantly get ES2019 code in patch releases.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 19:26:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970016260741312513", "body": "@sompylasar I just didn\u2019t shave for a few days \ud83d\ude42", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 19:21:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970015925654245376", "body": "@intelligibabble @kylemathews @AdamRackis @tizmagik If you have thoughts about it please talk to me. We\u2019ve already spent a bunch of time thinking about this problem. Don\u2019t want everyone to bump into the same issues when we already know them", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 19:19:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970015053763235840", "body": "@intelligibabble @kylemathews @AdamRackis @tizmagik That\u2019s why we won\u2019t respect babelrc in CRA. Just env preset alone for third party deps. AFAIK Parcel is doing the same. Sure there\u2019ll be thinkpieces once we release those updates \ud83d\ude42", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 19:16:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970014660391993345", "body": "@ClaireAsdey @hackuun @CompuIves @sarah_edo Haha sorry, twitter is confusing, angry twitter even more so \ud83d\ude1b", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 19:14:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970010597592043522", "body": "@ClaireAsdey @hackuun @CompuIves @sarah_edo Um, only the most popular Egghead course that also happens to be free? I dunno really \ud83d\ude02 https://t.co/QDxZI09F7O", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 18:58:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970008482475896832", "body": "RT @pwadhwani2592: My first talk video @ReactFoo Pune is out!!! Feeling amazing!!\ud83d\udc83\ud83d\udc83 \nGot any suggestions/comments/feedback do let me know!\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 18:50:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970007869717434368", "body": "@cdaringe Keynote \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 18:47:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970007538157735937", "body": "@pomber If this was possible in userland we probably wouldn\u2019t be adding a new primitive for this", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 18:46:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "970007252559106048", "body": "@pomber No. It\u2019s not just props either. Update could be a setState inside a deep component.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 18:45:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969997683745320961", "body": "@jsg2021 @IAmTrySound @AdamRackis @sebmarkbage Valid but somewhat confusing IMO.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 18:07:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969980421059563520", "body": "@EerSteam Personally I\u2019m lucky that I can afford to feel shitty for a couple of weeks and then recover. I\u2019m not saying anyone should repeat that, or even that it\u2019s a good tradeoff.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:58:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969980114850238465", "body": "@EerSteam I\u2019m not glorifying this but that\u2019s exactly the reason why I don\u2019t like doing talks and rarely agree to give them. It would take me a month or more of full time work to do it otherwise. I\u2019m making a compromise.", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:57:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969979721361641474", "body": "This is a really nice deep dive into a sketch of Fiber implementation by @pomber. https://t.co/3N9bIgdZnN", "favoritedCount": 685, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:56:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969977281413296128", "body": "@lnplum Maybe, if you invalidate after first render? @acdlite might answer better.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:46:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969976329000144898", "body": "@seldo Freaks and Geeks", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:42:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969976101530472454", "body": "@AdamRackis My biased answer: please wait for Create React App to supoort it, then sure \ud83d\ude00 (2.0)", "favoritedCount": 15, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:41:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969975294999388160", "body": "@MrAhmadAwais @reactjs @acdlite Blame @sebmarkbage \ud83d\ude42 I just made a demo.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:38:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969974890374803456", "body": "@AdamRackis @sebmarkbage What you\u2019re asking is also unrelated to format. \u201cModule\u201d field is into about using ESM, not about using all ES6 features. For example webpack 2+ users shouldn\u2019t suddenly get React that breaks old browsers just because they updated it. But again, we just don\u2019t use those.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:36:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969974515982839808", "body": "@AdamRackis @sebmarkbage Why would React have those? We care very much about the code we ship and don\u2019t use abstraction that generate that code. Our ES5 is clean.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:35:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969974015895973890", "body": "Doesn\u2019t mean I didn\u2019t prepare but some things literally came together at 5am", "favoritedCount": 94, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:33:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969973613205082112", "body": "I slept only an hour before my talk, that\u2019s why I look a bit like a ghost. I worked so much on the slides that by the end of that day normal text seemed italic to me. Glad I\u2019m back to normal now \ud83d\ude42", "favoritedCount": 574, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:31:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969972676176596992", "body": "@_nickwalt I just used PC out of habit, there was no particular reason. You can suspend any component. But PC is also a class like C so I don\u2019t understand what you\u2019re asking.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:28:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969972352682528770", "body": "@Heaven_xz @Dru89 @acdlite HOC can\u2019t implement suspense. Notice suspense lets you *avoid* showing the spinner if load is fast enough. HOC would always show a spinner right away.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:26:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969971141065543680", "body": "@AdamRackis @sebmarkbage What kind of Babel bloat? Interop thing around requires?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:21:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969970888417439745", "body": "@MaxiCilauro External package.", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 16:20:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969963666564112385", "body": "@lmatteis @acdlite @sophiebits The crucial feature of suspense is that we can *avoid* showing the spinner completely if the loading is fast enough. React suspends the whole tree. That\u2019s the part error boundaries wouldn\u2019t help you with. And why it has to be a primitive.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 15:52:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969963300212658177", "body": "@lmatteis @acdlite @sophiebits So you can\u2019t catch it the way you described below. \u201cPlaceholder\u201d from my demo is a new primitive.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 15:50:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969962938365808640", "body": "@lmatteis @acdlite @sophiebits This part isn\u2019t right. Suspense shares internal infrastructure with error boundaries but technically those are separate features. Suspense is handled by React itself. https://t.co/2RhYdNf8mR", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 15:49:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969962405882146817", "body": "@AdamRackis @sebmarkbage There\u2019s a discussion in issues. What concrete benefits do you expect? You won\u2019t tree shake much.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 15:47:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969961351924903938", "body": "@wong_jim The simple cache provider (that we provide implementation for) has a na\u00efve invalidation strategy: invalidate everything. You can go more granular with a custom cache.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 15:43:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969937042812612608", "body": "@andreas_wissel @c_pellegrino Time slicing is one of the features enabled by the new architecture. You don\u2019t need to know about how that architecture works to use it though.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 14:06:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969930265110941696", "body": "@nrako @winterbe_ @runjep @acdlite I\u2019m not sure I understand why it\u2019s useful to adjust delayMs.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 13:39:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969929555245981698", "body": "@getify Often one lives inside the other.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 13:36:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969929261841879040", "body": "@getify I\u2019m excited about both of these directions and fail to see why they\u2019re supposed to be mutually exclusive. Are we dividing camps prematurely?", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 13:35:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969927428859682817", "body": "@winterbe_ @nrako @runjep @acdlite So 500ms sounds like a good time? \ud83d\ude42", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 13:28:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969926886523535360", "body": "I omitted this in my demo but components would usually get cache (necessary to .read) from context. This means that in tests, you could supply a fake cache to mock out any network requests.", "favoritedCount": 274, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 13:26:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969920034289127424", "body": "@NaveenS16 Yes!", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 12:58:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969919017002717184", "body": "Rainbow in a waterfall because why not https://t.co/GGRALXsc7E", "favoritedCount": 293, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 12:54:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969914484969132038", "body": "@pavanpodila @sophiebits See here on workers https://t.co/J7iLMBUioL", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 12:36:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969913114673246208", "body": "RT @jdaudier: I just published \u201cNotes from Dan Abramov\u2019s Beyond React 16 Talk\u201d https://t.co/oPwpZM5fRX", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 12:31:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969908643637420037", "body": "@hackuun @CompuIves @sarah_edo I wish there was a way for Sarah to take away the knowledge she gave you, asshole. https://t.co/WFVBR6WrMl", "favoritedCount": 29, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 12:13:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969904578195058688", "body": "@runjep @acdlite If the new view loads fast enough, showing a spinner and immediately replacing it is a worse experience than just letting the new view appear with a small delay. User will perceive spinner as taking longer.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 11:57:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969878733954961413", "body": "RT @acdlite: But it would be bad if a rogue component were able to suspend the tree indefinitely. That's why &lt;Placeholder delayMs={...}, /&gt;\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 10:14:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969878648747626497", "body": "RT @acdlite: This is why when a component suspends an update, it suspends *the entire screen*. React will keep rendering the siblings, but\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 10:14:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969878215249596416", "body": "@karlrokeeffe Not available yet but I\u2019ll publish when the feature is ready to get into an alpha", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 10:12:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969877730811576320", "body": "Never expected this tune to get associated with Iceland in my mind but here we go \ud83d\ude02 local dive bars are wild https://t.co/5XdJAwJ7SU", "favoritedCount": 71, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 10:10:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969877043432304640", "body": "RT @acdlite: An important feature of React is consistency. When you schedule a state update, every component that relies on that state is c\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 10:08:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969797778506469376", "body": "@marcfawzi @kylemathews That it\u2019s done automatically, without the need to orchestrate this. Component that does the transition doesn\u2019t need to know anything about data that the new tree needs. Also, this isn\u2019t necessarily about transitions: the feature works for any React update.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 04:53:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969725369661214720", "body": "@carljreyes @iammerrick I don\u2019t see how that relates to features I talked about. Neither of them makes it \u201cmore\u201d or \u201cless\u201d JS than it already is.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Mar 03 00:05:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969709922358300672", "body": "@iammerrick @ryanflorence *this info. Autocomplete went mad", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 23:03:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969709598671343618", "body": "@jthoms1 @acdlite @iammerrick @mjackson @sebmarkbage It does (and there\u2019s an RFC to make integration more convenient) but web components just don\u2019t solve our problems. I think my demo gave a good overview of problems that an imperative primitive like WC doesn\u2019t help with at all.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 23:02:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969709195447631872", "body": "@iammerrick @ryanflorence For tools like sentry what you really want is for React to report component stacks. We plan to add that. This is more valuable than browser stack anyway because if you have a setState that includes its parent. Whereas with JS stack this UFI would never be included.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 23:01:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969708862717808640", "body": "@iammerrick @ryanflorence I don\u2019t think this changes anything from React 16 in that respect. React 16 already doesn\u2019t use component stack. So you won\u2019t see real parents there.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 22:59:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969708012771344384", "body": "@iammerrick @mjackson @Meligy We use it for data fetching. By that point a microsecond doesn\u2019t make a difference. We\u2019re not throwing thousands of times in a loop.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 22:56:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969707800787025931", "body": "@iammerrick @ryanflorence I\u2019m sure could provide better APIs for that. We just need input from product developers on specific problems they face. I\u2019m sure logging etc will be a big part of making async convenient to use but we really need help identifying issues.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 22:55:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969707297583837185", "body": "@jamiedixon @mjackson @Meligy @iammerrick We\u2019ll post an RFC later", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 22:53:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969705848871247878", "body": "@pat_metzdorf Yep, we have that too :-)", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 22:47:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969705179502317569", "body": "@acdlite @iammerrick @mjackson @sebmarkbage I guess we can get rid of components, the browser already has those.. \ud83d\ude1b", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 22:45:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969704981552140289", "body": "@mjackson @Meligy @iammerrick Except throw, not return. Which is much more ergonomic when render calls other methods.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 22:44:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969704815302410240", "body": "@iammerrick @ryanflorence Also note that React 16 emits performance entries for component tree with respect for async stuff. So you get the context if you capture user timing info.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 22:43:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969704560427257861", "body": "@iammerrick @ryanflorence You can always force updates to be sync if you really want to.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 22:42:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969703782467756033", "body": "@iammerrick @ryanflorence What do you mean by \u201cstack-based reconciler\u201d? React 16 already uses loops, not stack. Even in sync mode.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 22:39:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969691472760049665", "body": "@iammerrick I think the primitives are really important. As I mentioned, the actual code you write feels sync.", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 21:50:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969683869090840576", "body": "@ReactLeaders Idempotency is the important part. Also it\u2019s sort of pure if you consider data fetch to be something like an algebraic effect. Just have no other way to model this in JS.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 21:20:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969683390269214722", "body": "@pomber Isn\u2019t able to avoid showing the spinner if the update is fast enough though.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 21:18:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969682640319254529", "body": "New context API is going to be great for component branding. Put some render props as default context values and then export a context provider to let branded versions override.", "favoritedCount": 315, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 21:15:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969681531383017472", "body": "@MechRush Eventually yes", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 21:11:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969678233909243910", "body": "RT @peggyrayzis: Come work with me! \ud83d\ude0e If you produce awesome technical content or know someone that does, I'd love to talk with you.\n\n@apol\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 20:58:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969644982335426562", "body": "@samdbeckham I just demoed it \ud83d\ude42 @sebmarkbage came up with the API, @acdlite did the implementation work", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 18:45:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969643876498706432", "body": "RT @acdlite: ZEIT is doing really impressive work in the server-rendered React space. Next.js was one of the inspirations for React Suspens\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 18:41:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969642492999192576", "body": "@jason_frazzano React is just using normal JS, I don\u2019t see why there would be GC problems. Maybe if you can come up with an example that illustrates the issue I can answer better.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 18:36:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969641701252923392", "body": "@pshrmn &lt;Loading&gt; itself is probably wrong for this reason: https://t.co/UTx8oDd8YZ. But you\u2019re right we\u2019ll need to re-examine how routing works too.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 18:32:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969639418704183296", "body": "@lashuel @K4y1s Not sure but if it\u2019s possible then you could do it in userland. All React needs is a prop.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 18:23:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969639001555636224", "body": "@jason_frazzano If user interacts with the page it\u2019s up to you really. You could tell React to abandon that state transition just by calling setState again. Not sure I understand the second question.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 18:22:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969636123533365248", "body": "@btmpl @Nimelrian Again, if you think about this as similar to algebraic effects it will make more sense. Nothing dirty about them. https://t.co/aAA7yhmiKd", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 18:10:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969635823003078662", "body": "@btmpl @Nimelrian Returning gets awkward because you have to be careful to thread it all the way. For example if render() calls renderHeader(). So you have lots of extra checks and it\u2019s very awkward to write.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 18:09:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969629411996766208", "body": "The more important part about the render function is its idempotency, not purity. That is preserved. Arbitrary side effects are still bad. Conceptually you can consider suspense to be similar to algebraic effects in langs that support them. https://t.co/4vXATOoXpS", "favoritedCount": 41, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 17:44:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969628656418086912", "body": "We are working with their maintainers to figure this out. Don\u2019t have any definite info right now but I think we\u2019ll have some more specific thoughts when suspense is released in an alpha. https://t.co/j7yCvl3tTO", "favoritedCount": 34, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 17:41:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969628300036526083", "body": "I\u2019ll answer some questions that we haven\u2019t had time to address here.", "favoritedCount": 58, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 17:39:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969627684761415682", "body": "@K4y1s @lashuel Yes, the trick is that once we do show a spinner, we should suspend showing the real content even if it\u2019s ready for a little bit to avoid the jarring flash. That\u2019s also going to be possible.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 17:37:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969613357337776128", "body": "@wisecobbler See here https://t.co/UTx8oDd8YZ", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 16:40:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969613240605999104", "body": "@wisecobbler Yep! But the reason Loading is probably wrong is because it currently requires to be a common ancestor of thing to update and new screen. Which makes it really inconvenient if you eg navigate between two detail screens.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 16:39:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969612814280282112", "body": "RT @jsconfis: Please ask questions for the panel discussion https://t.co/XpMaHW7f8Z #jsconfis", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 16:38:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969611407850426369", "body": "RT @acdlite: @samselikoff @ForceTheIssue @sebmarkbage @dan_abramov Generators 1) incur lots of overhead, even if data is already cached, an\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 16:32:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969611179466379264", "body": "@wisecobbler The &lt;Placeholder&gt; part is solid though.", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 16:31:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969611100932231168", "body": "@wisecobbler I\u2019m finding it really hard to explain which probably also means it\u2019s a wrong API.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 16:31:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969610653173534720", "body": "@wisecobbler It\u2019s a bit subtle. &lt;Loading&gt; API is probably wrong anyway. For now I suggest forgetting about it, and just taking note that we *will* have some way to update old UI while new UI is loading.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 16:29:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969609960861634566", "body": "RT @acdlite: @ForceTheIssue @sebmarkbage @dan_abramov I think the main two advantages are 1) if the value is already cached, there\u2019s no add\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 16:26:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969607646025256961", "body": "@crandycodes You might like my talk (second half especially) https://t.co/YcAcDqGhMw", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 16:17:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969605271994716161", "body": "@jmeaspls Up to you really", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 16:08:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969604044707811333", "body": "@acdlite @sophiebits Putting it as a child never occurred to me! That makes sense.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 16:03:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969603682236026880", "body": "@xander76 @sophiebits @greweb We could visualise this in React DevTools and offer hints on which requests would be most impactful to preload.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 16:01:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969603268736376832", "body": "@jmeaspls Error boundaries", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 16:00:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969601740755619841", "body": "@acdlite @sophiebits I guess I could &lt;DebounceProps&gt; with getDerivedState and timeouts.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 15:54:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969601212759846913", "body": "RT @sarah_edo: Up next! https://t.co/IaOPXHTszU", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 15:51:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969600999961890816", "body": "@triketora You\u2019re not alone", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 15:51:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969599394868842496", "body": "@AshConnell With a potential new lifecycle hook, I think so! https://t.co/PgwowFEaIS", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 15:44:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969599098105057280", "body": "@redonkulus Error boundaries", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 15:43:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969598971516768256", "body": "@tizmagik Main implication so far: we\u2019ll need help updating SSR code to handle this \ud83d\ude42 We\u2019ll post more details later", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 15:43:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969598690590588928", "body": "RT @sophiebits: @greweb @dan_abramov Parallel. This is how the movie details and reviews fetch in parallel during the talk demo.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 15:41:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969598401036931072", "body": "@niklasbostrom @sophiebits Yep, ideally. Not sure what the most idiomatic way would be.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 15:40:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969598276902248451", "body": "@sophiebits I haven\u2019t figured out yet. Paging @acdlite.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 15:40:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969597052031299584", "body": "@iamstarkov @roman01la @oleg008 @acdlite There\u2019ll be an RFC with more details", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 15:35:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969596895961153536", "body": "@roman01la @oleg008 @iamstarkov @acdlite So Placeholder is a new primitive (name TBD). But internally it does use the same infrastructure as error boundaries, just with suspend/retry semantics.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 15:34:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969596260855504897", "body": "@roman01la @oleg008 @iamstarkov @acdlite That\u2019s exactly why it\u2019s implemented in React and not userland. Impossible to do the same way in userland. React needs to be aware so it can suspend the whole tree from committing an update until everything resolved.", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 15:32:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969596026276536327", "body": "@roman01la @oleg008 @iamstarkov @acdlite The crucial difference with suspense is that suspense lets you *not* show a spinner if it loads fast enough.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 15:31:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969595462222254080", "body": "@bobrowley Indeed, that\u2019s another problem we plan to solve with suspense (didn\u2019t have time before the demo).", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 15:29:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969583003306545152", "body": "@bobrowley Prefetch is also possible, yes", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 14:39:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969578432538476544", "body": "@lashuel The spinnners also cause DOM reflows and jank if they appear and disappear too fast", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 14:21:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969576703524769792", "body": "@toggleModal The meat of these tutorials is usually handling prop changes and race conditions. Suspense handles both correctly out of the box. So I hope any new tutorials would be much shorter.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 14:14:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969572037688782853", "body": "RT @acdlite: Did You Know\u2122\n\nReact Suspense doesn't necessarily rely on async rendering. It works in sync mode, too. But the downside is tha\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:56:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969571606807961600", "body": "@wachunei Yes", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:54:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969571511953756161", "body": "@4iAmAve You have all the control over what gets rendered \ud83d\udc4d", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:53:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969567873667665920", "body": "RT @sophiebits: Spotted at FB HQ this week: 4 of us crammed into a 2-person room to give early feedback on @dan_abramov's talk https://t.co\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:39:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969567685112684545", "body": "@iratebostonian @reactjs Woah this looks like a bug. Please send a fix if you know one! cc @kylemathews @joecritch", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:38:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969567230802481154", "body": "@michael_scharf The article is wrong btw, I suggest to check out my talk to see what I actually demo-d. Has nothing to do with redux", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:36:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969567037734387712", "body": "@elsdoerfer @MauriceDB Async/await doesn\u2019t work for multiple reasons. Returning a promise isn\u2019t ergonomic either. We\u2019ll post more technical details and reasons we went with this in an RFC later.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:36:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969566774235713538", "body": "@wachunei Not necessarily. If it loads fast enough we can just show the whole thing when it\u2019s done. If it takes too long we can put a small spinner close to the \u201cnext\u201d button on previous screen.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:35:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969566467204222978", "body": "@LuizAdolphs Yep! We don\u2019t have an API for this yet (that\u2019s why Loading is \u201cbroken\u201d) but you\u2019re right it wouldn\u2019t unmount the first page unless enough time passes to trigger top level Placeholder.", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:33:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969566228544139264", "body": "@OliverJAsh I\u2019m a bit confused. What is your top call frame? What causes setStates? This is the one you need to wrap.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:32:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969565851111383047", "body": "RT @SVesselov: Huge thanks to @jsconf for having me here to talk about styling in React. You can view the slide-deck here: https://t.co/o7z\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:31:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969565014326734848", "body": "@OliverJAsh ReactDOM.unstable_batchedUpdates(() =&gt; { /* call them here */ },);", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:28:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969564803189665792", "body": "RT @acdlite: Did You Know\u2122\n\nYou can suspend from inside of getDerivedStateFromProps. It \u201cjust works\u201d because it\u2019s part of React\u2019s render ph\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:27:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969564749225656320", "body": "@acdlite Oh wow I didn\u2019t think about it", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:27:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969564332735565824", "body": "Quiz: in my second demo, what would you do if you wanted to navigate from a movie detail page to the next movie detail page (assume it\u2019s ID + 1)? Would you see a loading state in between?", "favoritedCount": 46, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:25:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969563838935896065", "body": "@HosseinSaniei @reactjs @jsconfis No (without making it extremely convoluted). Check my last Img example. The real difference is any leaf component can suspend the whole tree because React acts as a coordinator.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:23:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969356484114083846", "body": "@chrisvfritz Thank you!", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 23:39:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969562683707219968", "body": "@jlongster @jordwalke @skevy @EricVicenti In either case the \u201cthrow\u201d is localised to a tiny method, and \u201ccatch\u201d lives in the exact same place we\u2019re already catching errors in React 16 (and haven\u2019t had perf problems due to that).", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Mar 02 13:18:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969352425659387904", "body": "@eoghandotio I don\u2019t have a clear idea of how everything should work yet but I imagine that react-redux might start fully using React state + context internally, and could provide store-like objects to the external code.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 23:23:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969352077569855489", "body": "@eoghandotio In my view the important part of \u201cRedux\u201c was never the library, it was the kind of code you write (e.g. reducers). It doesn\u2019t matter if that code gets plugged into createStore(), React state, etc. Reducer paradigm itself is perfectly compatible with async.", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 23:21:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969352077569855489", "body": "@eoghandotio In my view the important part of \u201cRedux\u201c was never the library, it was the kind of code you write (e.g. reducers). It doesn\u2019t matter if that code gets plugged into createStore(), React state, etc. Reducer paradigm itself is perfectly compatible with async.", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 23:21:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969348759770619904", "body": "@alanzanattadev @EricVicenti It shares infra with componentDidCatch() but isn't exactly 1:1. Placeholder is a new primitive (in this PR it's called Timeout and has a slightly different API).", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 23:08:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969348575867043842", "body": "@alanzanattadev @EricVicenti You can always build from source for fun https://t.co/TZDWfqV7Ok", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 23:08:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969347338643890176", "body": "@shauns_uk It gets called again", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 23:03:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969344290567704577", "body": "State update is synchronous so the placeholder kicks in immediately. Let\u2019s split synchronous (for the input) and async (for the Translate component) values and slow down the API. Now it doesn\u2019t show \u201ctranslating...\u201d right away. https://t.co/Ehb78rLB3s https://t.co/97c9SSYbDq", "favoritedCount": 146, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 22:51:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969342817628753920", "body": "Here\u2019s a tiny translation app (using API names from my demo) https://t.co/Y76L1b7s4x https://t.co/fw96QkyRSd", "favoritedCount": 137, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 22:45:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969340874814578690", "body": "Suspense is so interesting. I adjusted my mental model for some use cases (loading data for another view, code splitting, loading images). But I feel I\u2019m still missing so many potential use cases.", "favoritedCount": 278, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 22:37:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969336255447207938", "body": "@bohencode @jsconfis Honestly I found myself struggling to think about it until I realized this metaphor maps nicely", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 22:19:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969325117636513792", "body": "@necolas Rebrand it as better DOM", "favoritedCount": 32, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 21:34:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969324373889994752", "body": "@Jamie_Carlisle @matthewhaworth @iddan @jordwalke @sebmarkbage @acdlite @ProvablyFlarnie @brian_d_vaughn @sophiebits You can watch here https://t.co/YcAcDqGhMw", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 21:31:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969324226871209985", "body": "@chananb The problem is it was no longer illustrative. Chrome released an update the next day that moves gif rendering off the main thread. :P", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 21:31:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969322078221586437", "body": "@jkup Procrastinate", "favoritedCount": 19, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 21:22:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969318977821446147", "body": "@ryzokuken @jsconfis Yeah it\u2019s a bit hard to believe until you try it for yourself tbh. There\u2019s nothing similar that I\u2019ve seen yet. (Because it\u2019s hard to pull off architecturally.)", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 21:10:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969318410336260096", "body": "@Restuta @alkapa I also didn\u2019t eat anything almost all day because of the travel and then finishing the talk", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 21:08:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969318244493512705", "body": "@Restuta @alkapa I\u2019m ok but I only slept an hour the night before the talk. Many last minute changes to make it good. \ud83d\ude42", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 21:07:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969317642325692419", "body": "@ryzokuken @jsconfis Of course it doesn\u2019t mean it\u2019s *impossible* to do a similar transition without suspense. Just that it won\u2019t naturally work by itself, you have to hook up the logic to do this. Whereas with suspense, any leaf can suspend parent tree from flushing.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 21:05:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969317415510335489", "body": "@ryzokuken @jsconfis So I\u2019d say suspense enables a similar scenario but solves it with higher control over granularity of loading states, and a possibility of avoiding one altogether.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 21:04:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969317086270033921", "body": "@ryzokuken @jsconfis No. Vue\u2019s async components don\u2019t wait for the whole tree to be ready, they\u2019re displayed immediately in a loading state. Suspense, on the other hand, lets you avoid intermediate loading states if the update is fast enough.", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 21:02:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969315977803550720", "body": "CPU demo a week ago https://t.co/UU9FdXuo6x", "favoritedCount": 93, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 20:58:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969315292940824576", "body": "How movie demo looked like a week ago https://t.co/ELHxczNoIg", "favoritedCount": 120, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 20:55:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969314205781385216", "body": "@erikras By \u201cfeel\u201d I mean \u201cas experienced by user\u201d. As soon as you\u2019ve used async/await the option of synchronously doing something is out of the window.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 20:51:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969313639701377024", "body": "@fbartho Aside from requestIdleCallback parity and in general rollout strategy for the async mode, there's nothing DOM-specific in suspense.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 20:49:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969296102137651200", "body": "@gaithoben @ken_wheeler @kkga_ @sophiebits @mobz Thanks!", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 19:39:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969287726100090881", "body": "@jlongster @sebmarkbage So the actual work won't happen until rIC", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 19:06:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969287641807183873", "body": "@jlongster @sebmarkbage As far as I can see Promise.then calls requestRetry which calls requestWork which outside of sync contexts will just schedule an async update", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 19:05:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969287003660578818", "body": "@AlicanC If your code is imperative then it probably does. If it's declarative, what's time anyway?", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 19:03:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969286591960309761", "body": "@jlongster @sebmarkbage cc @acdlite not sure if we handle this right", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 19:01:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969283615036203008", "body": "@wSokra @Jhnnns I think our general solution for multiple fetchers is just put them into siblings although I see your point. We could provide some helper too.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:49:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969283255672430594", "body": "That\u2019s kind of the meta message of my talk. Things that are traditionally sync don\u2019t have to \u201cfeel\u201d sync. Things that are traditionally async don\u2019t have to \u201cfeel\u201d async. Be intentional and bridge the gap when you need. https://t.co/1PX4hfU8vK", "favoritedCount": 155, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:48:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969280998268653573", "body": "RT @jlongster: @sebmarkbage @dan_abramov It all makes sense now. The same use case in my app is there's a white flash when switching certai\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:39:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969280734333685760", "body": "@rimunroe @reactjs Also https://t.co/648iuxgxZr", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:38:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969280622396170247", "body": "RT @sebmarkbage: @sanketsahu @jlongster @dan_abramov You can pretend it does an algebraic effect behind the scenes. That's how we conceptua\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:38:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969280475830341632", "body": "@jlongster @sebmarkbage Yes", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:37:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969280340178194433", "body": "@rimunroe @reactjs It's a bit more subtle. It's a lasting change, but also doesn't mean you can now mutate or do any data fetching. It's only a particular pattern of reading from a React-friendly cache that's now allowed (and we'll discuss it more in future RFCs).", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:36:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969279722558541830", "body": "@markdrew53 @jlongster Wait until we can get it into an official alpha", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:34:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969279039147044864", "body": "@suchipi @jlongster I need to build more with this myself to better understand the use cases. But I suspect something like a search box with a list of results (suspended by API call) could be that case.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:31:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969278495196176384", "body": "@wSokra @Jhnnns https://t.co/SfnTOQIqLD", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:29:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969277896308207617", "body": "@suchipi @jlongster In other words it's the *state update itself* that is asynchronous, not the component tree. Even though the tree can suspend the state update.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:27:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969277770449805315", "body": "@suchipi @jlongster What if my state update is reordering children? It doesn't have to necessarily be a new tree.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:26:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969277362373365761", "body": "@limscoder @reactjs Yes we'll post RFCs eventually", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:25:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969277111109373953", "body": "@vvoyer @zachcodes If you always know both, sure. There's still a flash of the image \u201cfilling in\u201d that would be nice to avoid though.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:24:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969276841222721538", "body": "@jlongster I don't understand how you can communicate from a parent with a child-that-does-not-exist-yet, or if the child exists, where the currently rendered child has gone.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:23:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969275290840166401", "body": "@jlongster Not sure I understand. A gist would help to compare.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:16:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969272728736948232", "body": "@_alinz @sophiebits @ThatBraxGuy @sbegaudeau @sebastiansoft @ken_wheeler @kkga_ @mobz https://t.co/YcAcDqGhMw", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:06:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969272260648472581", "body": "@suchipi @jlongster Yep. And notice that you might not even want to show the spinner at all if they load fast enough (but still not instantly).", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:04:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969271953394683906", "body": "@jlongster This way if the network is fast, I don\u2019t have appearing and disappearing spinners everywhere. In fact I can render the loading spinner on my *old* tree while my *new* tree is being prepared.", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:03:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969271792958427138", "body": "@jlongster The important part is that technically I *start* rendering immediately. I call setState({ showDetail: true },). But React lets me avoid turning the screen into one big spinner right away, and instead keep the old view while the new view is being \u201cprepared\u201d.", "favoritedCount": 31, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:02:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969271569708183552", "body": "@jlongster I don't see how you can implement this in userland. &lt;Parent&gt; renders &lt;Middle&gt;. &lt;Middle&gt; renders &lt;Child&gt;. &lt;Child&gt; wants some data before rendering. How can &lt;Parent&gt; possibly know that and prevent the update from committing (e.g. for a second) before showing the placeholder?", "favoritedCount": 22, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 18:02:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969263935588306944", "body": "RT @reactjs: Just published \"Sneak Peek: Beyond React 16\" \u2013 many thanks to @jsconfis for the video! https://t.co/CdZkw4Zjas", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 17:31:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969256989028167680", "body": "@wSokra @Jhnnns We\u2019re doing this in code path that triggers network fetching. At this point you\u2019re not CPU bound anyway.", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 17:04:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969254274092986368", "body": "Great talk by @majapw on challenges of RTL and styles in JS", "favoritedCount": 44, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 16:53:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969251993989603330", "body": "@samselikoff We thought this would be pretty controversial in the community. Hence why the talk doesn\u2019t mention this and instead focuses on the *why*", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 16:44:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969246505155604482", "body": "@samselikoff More details https://t.co/Nh4ElSwhSJ", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 16:22:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969246179748995072", "body": "@samselikoff Sounds right. https://t.co/vH8AmTFPIq() throws (yes, throws \ud83d\ude1b) a promise if result is not in the cache. React will wait for that promise, then retry that tree. (Assuming another update doesn\u2019t make this unnecessary, e.g. switching to another view)", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 16:21:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969243433977221120", "body": "RT @elijahmanor: \ud83d\udcf9 Create React App: Part 4 - Forking instead of Ejecting (7min) https://t.co/Qo2G7nG4oM\n\u26d4\ufe0f npm run eject\n\u2705 fork create-rea\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 16:10:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969243240196136964", "body": "@samselikoff This is also why \u201cfetching in render\u201d is a bit of a misnomer (although useful as an explanation of the goal). Render stays idempotent. Cache read throws if the value is missing, so React knows to retry later.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 16:09:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969242838289600512", "body": "@samselikoff So render() itself isn\u2019t really asynchronous. If it requires data rendering \u201cfailed\u201d. But when the data is ready, we try again. Memoization saves us from recomputing what hasn\u2019t changed. (Currently disabled but crucial before the feature is considered ready.)", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 16:07:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969242307169054721", "body": "@samselikoff To be clear render() doesn\u2019t become a state machine. The mental model is \u201cfail and retry when we have data\u201d. That\u2019s why don\u2019t use async/await.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 16:05:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969218754797334529", "body": "https://t.co/zrm6BvUPVj", "favoritedCount": 538, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 14:32:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969217534548471808", "body": "@ELLIOTTCABLE I almost messed it up at the end, but what saved me is I made the exact same mistake in one of the dry runs so I remembered it", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 14:27:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969217379963166720", "body": "@ELLIOTTCABLE Thank you", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 14:26:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969216849819914241", "body": "@greweb Not my idea, I was just telling about it \ud83d\ude42 I should\u2019ve been clearer. This is @sebmarkbage and @acdlite\u2019s doing.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 14:24:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969216232246390784", "body": "RT @ReactRally: Our hand-picked speakers for React Rally 2018: @sxywu, @threepointone, @ken_wheeler and @sugarpirate_. Want to speak with t\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 14:22:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969215625083187201", "body": "@sebmarkbage @stevenlangbroek @jamiebuilds @acdlite I now remember we had a discussion around last November where we weren\u2019t sure how it should work. Turned out we just lacked an extra constraint to guide us.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 14:19:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969215247449026560", "body": "@mike_gichia @sophiebits I was lucky! Some flights around me did", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 14:18:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969214785194688512", "body": "@stevenlangbroek @sebmarkbage @jamiebuilds There is: rendering doesn\u2019t proceed with other siblings once you have the first error. But we need to render as much as possible. @acdlite rewrote error handling logic a week ago for that reason.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 14:16:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969213336721207299", "body": "@thepanta82 @IAmTrySound This stays declarative, eg you already have error boundaries for exceptions. This feeds into the same model. I think we *will* need better tools for parallel trees though. It would be nice to switch between trees in React DevTools.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 14:10:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969212385289490434", "body": "@jaredpalmer @kkga_ You might also know him by Spacegray", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 14:06:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969212326124703744", "body": "@jaredpalmer That was @kkga_\u2019s idea, he helped me with almost all the design of the IO demo!", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 14:06:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969211147856510976", "body": "2014 https://t.co/I3K2pbjmTM", "favoritedCount": 45, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 14:01:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969205735149195264", "body": "@kvinklly Some time this year", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 13:40:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969203148056383489", "body": "@export_mike Maybe I\u2019ll upload them later but don\u2019t have them with me right now", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 13:30:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969199246321872896", "body": "@bastianalbers @jsconfis I remember taking a few weeks to implement pretty much exactly what I did live in the demo", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 13:14:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969198402490847233", "body": "RT @danielgut: #react future by @dan_abramov #timeSlicing and #suspense https://t.co/Bqi2A9YWEu", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 13:11:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969198219153563649", "body": "@whymclovin Lol. There was actually one more feature I didn\u2019t have time to demo. It lets you start rendering without ever forcing it to finish. Used for starting pre-rendering of something that *might* render but not block the thread.", "favoritedCount": 18, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 13:10:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969197597666799616", "body": "RT @whymclovin: Suspense seems awesome but now I can't wait for React Spectre when we get speculative rendering", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 13:08:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969196214121107458", "body": "@Oliver_Mensah @jsconfis This would be a new primitive provided by React itself. It\u2019s not possible to implement outside of it.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 13:02:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969195063090835458", "body": "@thepanta82 The livestream might still scrub back enough; otherwise you can expect a video in a week or so", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 12:58:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969194365204746240", "body": "Since my talk reignited the interest in how React engine is implemented, here\u2019s an older issue with answers to some common questions: https://t.co/J7iLMBUioL", "favoritedCount": 204, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 12:55:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969192743753928706", "body": "@Saifadin @jsconfeu Not yet. Built from PRs + manual fixes. There are also numerous missing pieces that we need to finish before it\u2019s generally usable.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 12:48:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969192399082868743", "body": "@srhise @ken_wheeler @kkga_ @sophiebits @mobz Will be", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 12:47:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969192268228947968", "body": "@oviava @acdlite It lets you specify your own invalidator (for example mine replaced a live ESM binding to a new cache object). Intended use is eg rerender the tree with new cache. It\u2019s \u201csimple\u201d so all or nothing. You can build a different custom one.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 12:46:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969189693823815682", "body": "@cpojer @andrewingram Also if you use Jest a clown eats your favicon", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 12:36:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969189326880899072", "body": "@btmpl @acdlite That sounds expected to me", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 12:35:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969188821966475265", "body": "RT @acdlite: Suspending is built on the mechanism as error boundaries. In fact, we recently (like last week) completely rewrote error handl\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 12:33:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969185358666706944", "body": "@jevakallio @FormidableLabs Thanks for the thread, it was really nice reading \ud83d\ude42", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 12:19:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969180856513368064", "body": "@jevakallio @FormidableLabs Yes! Didn\u2019t say because didn\u2019t want people to nitpick on library choice or assume it\u2019s slow and miss the point", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 12:01:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969179954696065024", "body": "@richardiii Ping me in DM? I\u2019m super tired but I can respond later. If I forget keep pinging :-)", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:58:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969178369978961921", "body": "RT @stevenlangbroek: @jamiebuilds throw &lt;Table /&gt;", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:51:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969177760055873536", "body": "@javierwchavarri Note these APIs are a bit simplified for demo use case, the real ones are a bit more generic / practical. Also still work in progress (eg Loading is likely flawed and we need to do this differently)", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:49:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969176997304860672", "body": "Also thanks to @threepointone and @sophiebits listening through three versions of my talk", "favoritedCount": 39, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:46:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969176574095495168", "body": "@andrewingram @cpojer This is so you can tell which websites are built with React", "favoritedCount": 27, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:44:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969175019338256384", "body": "RT @acdlite: Idempotence is an important part of how suspense is modeled. Even though you may trigger network requests from inside the rend\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:38:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969174954175614977", "body": "RT @acdlite: Here's how suspending works:\n\n- in the render method, read a value from the cache.\n- if the value is already cached, the rende\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:38:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969174479241908224", "body": "@jamiebuilds Oh the flame will come. I haven\u2019t mentioned some unimportant (but controversial) implementation details \ud83d\ude1b", "favoritedCount": 27, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:36:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969174237163466752", "body": "@EphemeralCircle @ken_wheeler @kkga_ @sophiebits @mobz We\u2019re spread very thin but have ideas on how SSR could work. Maybe heavy SSR users can help implementing this as a contribution", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:35:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969173642260205568", "body": "@dariocravero @ken_wheeler @kkga_ @sophiebits @mobz Maybe later when this gets into usable alpha release", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:32:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969173469513572353", "body": "I just did the talk but I hope it inspired you as much as playing with these features inspired me", "favoritedCount": 76, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:32:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969173307680546816", "body": "(Meaning design of how time slicing and suspense themselves work)", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:31:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969173182811987968", "body": "Credits for design go to @jordwalke (his prototype inspired Fiber work), @sebmarkbage (who led Fiber and came up with suspense), and @acdlite (who implemented most of that). Also @ProvablyFlarnie and @brian_d_vaughn doing the integration work and @sophiebits overseeing it all.", "favoritedCount": 85, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:31:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969169415823642624", "body": "RT @acdlite: createFetcher from @dan_abramov's talk is this thing:\n\nWe're calling it simple-cache-provider (for now). It's a basic cache th\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:16:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969168645833351168", "body": "Hope you liked my talk. I\u2019m going to take a nap now. Thanks to @ken_wheeler @kkga_ @sophiebits @mobz for your invaluable help making these demos slick.", "favoritedCount": 528, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:13:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969167719571644416", "body": "@andrewingram It happens though \ud83d\ude1b", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 11:09:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "969014031255207936", "body": "Found this on my todo list before the talk. \ud83e\udd28 https://t.co/5sCMZoqZSB", "favoritedCount": 116, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 00:58:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968999591961079808", "body": "@sompylasar @acdlite @browniefed @mjackson @renatorib_ @brian_d_vaughn The rule doesn't say anything wrong. It is indeed causing an extra re-render. That render won't be *visible* to the user but you'll spend CPU cycles. So if you can, avoid it. But it's legit for cases like measuring the DOM.", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Mar 01 00:01:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968939189709533184", "body": "@acdlite @browniefed @mjackson @renatorib_ @brian_d_vaughn We should really stress this in the docs or something. People invent convoluted workarounds because they\u2019re not confident this works", "favoritedCount": 61, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 28 20:01:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968939034818031618", "body": "RT @acdlite: @browniefed @mjackson @renatorib_ @brian_d_vaughn setState in didMount/didUpdate is completely flushed by the time React yield\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 28 20:00:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968908369879846912", "body": "RT @ReactPodcast: Also, don't forget to catch Dan's talk at @jsconfis tomorrow where he will demo some of the new stuff we discuss in this\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 28 17:58:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968864577898164224", "body": "@vinibarauna Yea i forgot to cancel AM. Use it now because I already downloaded quite a bit for the airplane last time I flew", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 28 15:04:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968863932558598145", "body": "Airplane takeoff song \ud83d\ude2c See you in Iceland https://t.co/hapEtHdKHy", "favoritedCount": 144, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 28 15:02:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968862925476810752", "body": "RT @ReactPodcast: \ud83d\udce3 New: Episode 03 with @dan_abramov, wherein we discuss the implications of @ReactJS' upcoming async mode! \ud83d\udd25\n\n\ud83c\udfb5 iTunes ht\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 28 14:58:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968776694797619200", "body": "@zachcodes Note it\u2019s not a HOC though \ud83d\ude42", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 28 09:15:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968508737920143360", "body": "That time of the day again https://t.co/XVf4CUSxPA", "favoritedCount": 5094, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 15:30:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968489026331332608", "body": "@jordanpittman Yeah I\u2019m sure @jsconfis will post videos", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 14:12:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968488938817118208", "body": "@0xdeafcafe First @jsconfis, then same at @ReactFest", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 14:12:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968481441439993857", "body": "This is relevant to my talk in a few days https://t.co/BSevkGmHyY", "favoritedCount": 68, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 13:42:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968479850402115584", "body": "RT @mountain_ghosts: idempotency is great\n\"mate your script failed, broken pipe\"\nbleh just run it again", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 13:36:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968479704700383232", "body": "Polishing is my favorite part", "favoritedCount": 85, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 13:35:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968463977490649089", "body": "RT @reindexio: A rare opportunity to get hands-on help on building your GraphQL services from a Reindex co-founder. https://t.co/HU3MucQAUi", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 12:33:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968453657850236928", "body": "@0xFF69B4 @Swizec @facebook 1) that notice is to prevent you from using context API in your code directly. libraries that know what they do are fine\n\n2) we\u2019re fixing this in React 16.3 with new context API so it\u2019ll be irrelevant soon", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 11:51:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968438426726031361", "body": "@boubiyeah @jsconfis In a way. Although it\u2019s different from what people commonly mean by that pattern. That\u2019s why a demo is important.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 10:51:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968438267208232960", "body": "@alexjoverm @javierabadia @jsconfis I\u2019d add we consider it a strength of React that you don\u2019t need to wrap objects into something custom, neither for initial mount nor for updates", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 10:50:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968437916388200448", "body": "@elburabure @jsconfis You\u2019ll see", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 10:49:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968437830358839297", "body": "@TheLarkInn @jsconfis I\u2019m struggling to see why this is something a *library* needs to do. Sounds more like a job for e.g. a webpack loader.", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 10:49:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968437360311533568", "body": "@jonstuebe @agento @jsconfis March 1st https://t.co/UZXalG8ert", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 10:47:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968425215855296512", "body": "@simon_fyi @kentcdodds @acdlite No, we don\u2019t have target release dates and generally release when it\u2019s ready. So I\u2019m not sure. I\u2019d say within a few weeks.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 09:58:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968280124578844672", "body": "RT @PagedrawIO: New today: compile your mockups into @reactjs code without writing a line of HTML or CSS.  We just launched on HN!\n\nhttps:/\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 27 00:22:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968269431896985602", "body": "RT @DavidKPiano: Great article and interesting approach to state machines. I'll be talking about this, statecharts, and more (revealing som\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 26 23:39:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968246700056956928", "body": "@estebanrules @jsconfis Yes", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 26 22:09:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "968205349558915072", "body": "RT @acdlite: A certain upcoming feature, in particular, is really hard to explain without seeing a live demo with code. Abstract explanatio\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 26 19:25:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967953656745209856", "body": "@trihargianto https://t.co/JhF9zMJw6p", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 26 02:45:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967889986744930304", "body": "@sebmarkbage @componentkit @jordwalke The parts that work well I\u2019ve already gotten used to. Not even sure I\u2019ll sustain any excitement till the talk. \ud83d\ude1b", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 25 22:32:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967850099861868546", "body": "@nomaspatanes @linclark @TheLarkInn @rustlang FWIW in my experience reducers are rarely the bottleneck; recalculating derived data and re-rendering the components usually is", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 25 19:53:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967763822609125376", "body": "@mxstbr @southpolesteve We\u2019re just experimenting with it for now", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 25 14:10:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967763657751920640", "body": "@btmpl @IljaDaderko There is, however, an advanced feature that lets you skip some siblings even for a single provider. Look for observedBits and calculateChangedBits in the source.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 25 14:10:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967763482627203072", "body": "@btmpl @IljaDaderko Yes, nothing changes here", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 25 14:09:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967736907554836485", "body": "RT @TheLarkInn: \ud83c\udfa8\ud83d\uddbc\u2728\ud83c\udfb6 Announcing #webpack 4.0.0: Legato!!!! \n\ud83d\udea8 Up to 98% Faster build times. \n\ud83d\udea8 sideEffects (much smaller bundles)\n\ud83d\udea8 First C\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 25 12:23:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967473158176559104", "body": "@amasad @oleg008 @jsconfis @reactjs If I told everything then it might be. I\u2019m going to omit a few details until we post an RFC, and focus on the less controversial aspects in the talk that goes before it \ud83d\ude43", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 18:55:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967437949125234688", "body": "@boubiyeah @jsconfis I think it might help with one of those", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 16:35:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967413759865212928", "body": "@rickhanlonii @ben_howdle @gaastonsr @acdlite @urbanwhaleshark  https://t.co/IRyGvHnUWS", "favoritedCount": 31, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 14:59:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967407469151571969", "body": "@DavidKPiano @jsconfis ooh I see, yeah that shouldn\u2019t intersect too much I think", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 14:34:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967407010475139072", "body": "@DavidKPiano @jsconfis lol what is your talk about", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 14:32:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967405721183834112", "body": "@jonstuebe @agento @jsconfis It\u2019s not just an API cleanup/rehash, it\u2019s a new capability", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 14:27:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967402640756920320", "body": "@JoshWComeau That's cool, sorry my attention bandwidth is close to zero last few weeks", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 14:15:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967402435294658562", "body": "@AriGonzoAri @jsconfis You can watch the livestream and there'll be videos later", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 14:14:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967402287772598272", "body": "@pveyes @oleg008 @jsconfis Maybe more", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 14:14:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967393616288256001", "body": "Woke up. It\u2019s still there. But now I have to figure out how to demo it \ud83e\udd14", "favoritedCount": 162, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 13:39:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967392684414554112", "body": "@debelbot @acdlite @reactjs Wasn\u2019t intended to have any more value than sharing e.g. personal news.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 13:36:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967391984108429312", "body": "@ben_howdle @gaastonsr @acdlite @urbanwhaleshark  https://t.co/p2orbaPvYj", "favoritedCount": 35, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 13:33:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967391735449116673", "body": "@tlakomy @oleg008 @jsconfis @ReactFest Yep, that is the plan!", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 13:32:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967391552069881856", "body": "@debelbot @acdlite @reactjs I totally understand. I hope you can believe I\u2019m not doing it to promote something but because I genuinely got more excited about React yesterday than I was for years, and I couldn\u2019t help sharing it. You\u2019ll see \ud83d\ude42", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 13:31:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967390065579253760", "body": "@JoshWComeau also \"turn off retweets\"", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 13:25:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967386399900041218", "body": "@phaistonian @pcmaffey Context is boring compared to this", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 13:11:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967385160688730112", "body": "@dalmaer For common use cases I think this could cut on a *lot* boilerplate code in user space. Hopefully that counts as improvement \ud83d\ude42 For more complex use cases it's still a powerful new primitive to enable better user experience", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 13:06:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967384051437981696", "body": "RT @acdlite: @urbanwhaleshark @dan_abramov Jk :) I hear ya. We\u2019ve been hyping this stuff for a long time. But we\u2019re getting so close to shi\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 13:01:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967383659752935426", "body": "@phaistonian @pcmaffey There\u2019s still quite a bit of work left before it is stable enough to use in production. But we already know some migration steps that need to be done regardless, and will share soon (a few weeks).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 13:00:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967381054578413568", "body": "@debelbot @acdlite @reactjs Also thanks for stereotyping me based on where I work, that\u2019s really helping to drive your point. I wonder if you do this to people in person too.", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 12:49:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967380824906784768", "body": "@debelbot @acdlite @reactjs Aren\u2019t you ever excited to share something you\u2019re working on and do a bit of light-hearted teasing? We\u2019re people. I did this when I had 100 followers and not going to stop now because if I can\u2019t even do that, I don\u2019t see the point in spending time on Twitter.", "favoritedCount": 23, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 12:48:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967379765937176576", "body": "@gnapse @kentcdodds @acdlite Seems like @jsconfis will have a livestream", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 12:44:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967374120928374784", "body": "@andrewingram @oleg008 @jsconfis I think purists might say it\u2019s heresy", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 12:22:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967373270004662273", "body": "@zernie_ @jsconfis https://t.co/ZTICPpkGeg", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 12:18:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967373154502041600", "body": "@mikesparr @jsconfis I thought about demoing the context stuff but it turned out to be too boring compared to the new thing so I cut it out", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 12:18:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967372921399324672", "body": "@agento @jsconfis No, that\u2019s too boring \ud83d\ude42", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 12:17:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967372521644396545", "body": "@oleg008 @jsconfis I\u2019ll post after my talk. Don\u2019t want to kill the suspense \ud83d\ude1b I expect the API itself will be controversial, and I don\u2019t want to draw attention to it before I show what it can do", "favoritedCount": 38, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 12:15:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967363721168384002", "body": "@andrewingram @acdlite @suchipi @kentcdodds We'll get there", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 11:40:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967363386710413312", "body": "@gaastonsr @acdlite @urbanwhaleshark  https://t.co/qMkGXAJc15", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 11:39:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967363191004192768", "body": "@pcmaffey A HOC for promises is also example of the problem", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 11:38:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967251487545053185", "body": "@pcmaffey Ironically that\u2019s also a solution", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 04:14:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967251411682590720", "body": "@pcmaffey Async stuff", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 04:14:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967248963178061824", "body": "My worst fear right now is that this was all a dream and I\u2019ll have to go back to writing regular React after this. It\u2019s a pain!", "favoritedCount": 155, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 04:04:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967245849448370177", "body": "RT @sebmarkbage: That feeling when you come up with an API that solves all the problems but you know is going to be extremely controversial\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 03:52:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967245216750211072", "body": "RT @acdlite: Re: this new API Dan is teasing, if we're successful, I expect it will usher in another era of rapid OSS innovation in the Rea\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 03:50:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967243201944997889", "body": "I feel like I can genuinely praise it as I had nothing to do with its creation and it only \u201cclicked\u201d for me a few days ago. Now playing with it, and this feels comparable to the first time I tried React. hashtag so much hype but I still think I\u2019m not overhyping it", "favoritedCount": 220, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 03:42:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967242377030262784", "body": "Using a new strange API. I never felt this productive using React before. You\u2019re going to hate it, then you\u2019re going to love it. Will spill some beans in a week at @jsconfis", "favoritedCount": 1269, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 03:38:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967207752983597056", "body": "Don\u2019t hire me https://t.co/HCUsxtX5uL", "favoritedCount": 1138, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 24 01:21:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967155754292695040", "body": "@wldcordeiro Behavior should never vary between development and production for such cases, otherwise it would be dangerous", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 23 21:54:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967153593756323842", "body": "@wldcordeiro That will just noop and warn, shouldn't crash. But it means your app likely has memory leaks since those components may never get GC'd.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 23 21:46:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967122329645015041", "body": "@SaketTawde @acdlite Please file an issue https://t.co/HKKqnI5K6R, cc @kylemathews", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 23 19:41:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "967071142329683969", "body": "@TimurAmirov In a future SSR renderer, probably. It has to work differently though. Maybe in a year or two", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 23 16:18:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966969916212613121", "body": "RT @jordwalke: @RReverser @floydophone @gozala @reactjs @sebmarkbage.. We've got so much to do. It's quite an exciting time for React as we\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 23 09:36:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966953405808873473", "body": "RT @gatsbyjs: New RFC about creating a Gatsby Desktop app!\n\nhttps://t.co/FK19iCaTIE https://t.co/ofPCl0t2qm", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 23 08:30:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966848967479906304", "body": "RT @sophiebits: Just wrote about what Excel and \"normal\" programming should learn from each other https://t.co/5dccjH1Faj", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 23 01:35:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966752415759429632", "body": "@jonbharris @ken_wheeler Sure", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 19:11:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966746581428068352", "body": "@oleg008 @ken_wheeler The answer to this is often \u201cjust virtualize them\u201d. Although if you have a ready example that looks convincing (e.g. comment thread) I\u2019d love to look at it!", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 18:48:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966725358321127425", "body": "@ken_wheeler Compute heavy is good as long as the computation is spread across components and not centralized in one place", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 17:24:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966724772850733060", "body": "@ken_wheeler I haven't found much intensive stuff there", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 17:22:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966724670740365312", "body": "@ken_wheeler I think SVG is more relatable to people", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 17:21:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966703385369042946", "body": "@Swizec @ken_wheeler If it's open source, send a link please!", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 15:57:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966702320150024197", "body": "Getting more specific: what\u2019s the most complex open source data visualization example you can find that\u2019s built with React (e.g. Victory components). cc @ken_wheeler", "favoritedCount": 25, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 15:52:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966690071805034496", "body": "@bitwiselover @AdamWeeks @wesbos @trueadm 16.3. Will be announced when the release is stable, it's not ready yet!", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 15:04:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966689551824642050", "body": "@bitwiselover @AdamWeeks @wesbos @trueadm (unmounting of ref target)", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 15:02:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966689512767262721", "body": "@bitwiselover @AdamWeeks @wesbos @trueadm Even functional refs can never be null in componentDidMount. Object refs shouldn't be null until unmounting.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 15:01:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966688217041907712", "body": "@wesbos @trueadm react-dom is where all the logic is \ud83d\ude42 react package is just a bunch of factory functions for plain objects", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 14:56:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966687340302389248", "body": "@wesbos @trueadm You're sure both react and react-dom point to the same alpha version?", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 14:53:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966679736465403905", "body": "@slonoed I mean standalone as in \u201cI can just import that in a demo\u201d \ud83d\ude42", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 14:23:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966678710186364928", "body": "Do you have any open source examples of computationally expensive component trees? Something where rendering is the bottleneck and it\u2019s not easy to optimize. Standalone, no Redux etc.", "favoritedCount": 60, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 14:18:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966498719834222593", "body": "Preparing some demos you haven\u2019t seen before. Things are finally looking like they can work, and I\u2019m giddy with excitement. Spoiler: no more triangles.", "favoritedCount": 381, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 02:23:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966416836601483265", "body": "RT @rwieruch: \ud83c\udf1f I built this GitHub Client in React using GraphQL and Apollo. It should be a great playground for you to see how everything\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 21 20:58:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966358578960457728", "body": "RT @left_pad: Posted about it a few times but this could be a fun new project to contribute to: https://t.co/Ee1DcVXgjZ `npx babel-upgrade`\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 21 17:06:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966354799766712321", "body": "@ryanflorence @zachcodes @amit_tushar @mjackson It also wouldn't work as soon as you replace Auth into MyAuth component and forget to spread all props (because you thought it doesn't need any)", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 21 16:51:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966687340302389248", "body": "@wesbos @trueadm You're sure both react and react-dom point to the same alpha version?", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 14:53:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966679736465403905", "body": "@slonoed I mean standalone as in \u201cI can just import that in a demo\u201d \ud83d\ude42", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 14:23:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966678710186364928", "body": "Do you have any open source examples of computationally expensive component trees? Something where rendering is the bottleneck and it\u2019s not easy to optimize. Standalone, no Redux etc.", "favoritedCount": 60, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 14:18:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966498719834222593", "body": "Preparing some demos you haven\u2019t seen before. Things are finally looking like they can work, and I\u2019m giddy with excitement. Spoiler: no more triangles.", "favoritedCount": 381, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 22 02:23:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966416836601483265", "body": "RT @rwieruch: \ud83c\udf1f I built this GitHub Client in React using GraphQL and Apollo. It should be a great playground for you to see how everything\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 21 20:58:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966358578960457728", "body": "RT @left_pad: Posted about it a few times but this could be a fun new project to contribute to: https://t.co/Ee1DcVXgjZ `npx babel-upgrade`\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 21 17:06:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966354799766712321", "body": "@ryanflorence @zachcodes @amit_tushar @mjackson It also wouldn't work as soon as you replace Auth into MyAuth component and forget to spread all props (because you thought it doesn't need any)", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 21 16:51:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966351360810799105", "body": "@amit_tushar @ryanflorence @mjackson @mxstbr I think it's still an expectation that you can safely wrap things in a div and they still work. Implicitly putting some props on top is confusing.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 21 16:38:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966349807420891136", "body": "RT @reasonmlhub: My new book is out! It is called \u201cExploring ReasonML and functional programming\u201d.\nhttps://t.co/LQYVT2ccC3 https://t.co/n43\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 21 16:32:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966321501162045441", "body": "@amit_tushar @kentcdodds I don\u2019t care strongly, would probably split render method into several methods for that", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 21 14:39:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966320683541200896", "body": "RT @flowtype: Flow 0.66 introduces a new error message format for the JavaScript ecosystem. See any new errors you particularly like? Send\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 21 14:36:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966305455877259264", "body": "@swyx @amit_tushar That\u2019s not a children render prop, this is cloneElement. Pretty fragile IMO. If you need to chose between the two, go for render prop (whether you call it render or children)", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 21 13:35:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "966305196790992901", "body": "@amit_tushar @ryanflorence @mjackson I don\u2019t recommend using cloneElement like this. It\u2019s very implicit and breaks as soon as you want to change the structure (eg wrap it in a div). Use a function.", "favoritedCount": 23, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 21 13:34:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965981690500997120", "body": "RT @ReactPodcast: \ud83d\udce3 Join us for episode 02 with @jaredpalmer, all about his OSS @ReactJS projects, #TypeScript, and async React! \ud83d\udd25\n\n\ud83d\udce1 RSS h\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 20 16:09:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965940048251277312", "body": "RT @neoziro: React Hot Loader v4.0.0-rc.0 is out!\n\n\ud83c\udf89 ESNext + TypeScript + React 16 support\n\ud83d\udce6 Webpack + Parcel support\n\u2702\ufe0f Component splitti\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 20 13:23:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965937736858431489", "body": "@nowakowskipl @CompuIves @codesandboxapp @_philpl Minor feedback: when switching pages, the scroll stays on the bottom. It should scroll back up. :-)", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 20 13:14:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965639506081837057", "body": "@brian_d_vaughn When this happens I reply enough that it would be useful to future readers, but stop engaging with the person", "favoritedCount": 94, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 19 17:29:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965638770346352641", "body": "Pretty fascinating that if you leave a soup of elementary particles for a dozen billion years, they will arrange themselves into this https://t.co/3sPgfonS4W", "favoritedCount": 708, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 19 17:26:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965635833406554112", "body": "RT @mraleph: \"Maybe you don't need Rust and WASM to speed up your JS\"\n\nhttps://t.co/mMvi5JaJub", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 19 17:14:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965541125141524480", "body": "@jlongster Why do people already put this into a component (setting state in componentWillReceiveProps) and not a function?", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 19 10:58:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965540570218336258", "body": "@sithmel @reactjs *React* doesn\u2019t (and didn\u2019t) require a Symbol polyfill. Please see my comments in the issue. The *Babel plugin* in question (inline-react-elements) does, and always did.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 19 10:56:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965381467856613378", "body": "Depending on how you look at it, this can be an upside too. In larger components, this lets you opt in smaller leaf sections into using context, without updating the whole component.", "favoritedCount": 16, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 19 00:24:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965378662404149250", "body": "Not an Official Recommendation (tm) or a Pattern Endorsement (r), just wondering", "favoritedCount": 29, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 19 00:13:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965378278461755392", "body": "Did someone make this yet? Might be nicer than all those componentWillReceiveProps that are being used for memoization. https://t.co/plrspwqBY0", "favoritedCount": 414, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 19 00:11:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965336826784485377", "body": "@mksglu I don't understand what you mean. React 16.3 isn't out yet, so you can't use this feature anyway. When it *is* out (probably within a few weeks) there'll be a blog post announcing it and docs, just like with every new feature.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 18 21:26:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965287763913400322", "body": "It\u2019s more annoying when you use it in lifecycles though. Have to either do the same from a parent component or add an extra layer.", "favoritedCount": 29, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 18 18:11:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965286774049255424", "body": "Updating to new context API if you only read context in render is even simpler than I imagined https://t.co/oirfYOQizf", "favoritedCount": 571, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 18 18:07:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965258454624595968", "body": "Oceanic Next but with #282c35 background is pretty \ud83d\ude0d https://t.co/MzlEmBWLZG", "favoritedCount": 746, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 18 16:15:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965225926278696960", "body": "RT @zero__bias: New @flowtype error message system is amazing! Big thanks @calebmer https://t.co/PKCSJnsi9p", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 18 14:06:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965036534159339520", "body": "RT @tophtucker: Spheres of any fixed radius disappear in high dimensions; their volume goes to zero. A 5D unit hypersphere has maximal volu\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 18 01:33:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "965000098047582208", "body": "RT @ryanflorence: @dan_abramov I\u2019ve always liked the advice to be familiar with at least one level lower than the abstraction you\u2019re using.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 23:08:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964955818067152896", "body": "@Psyycker Sure. I'm just saying it's an interesting (and often unexpected) problem for library authors. Everything is going great, you project has massive adoption, and then a few years later nobody understands how to use it (because new learners had no prior context).", "favoritedCount": 14, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 20:12:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964955297579196417", "body": "@threepointone (This applies to glamor as much as to React \"are DOM nodes mutable?\" and Redux \"why do you need all this indirection\")", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 20:10:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964955127072337920", "body": "@threepointone Too late, I already noticed a pattern", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 20:10:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964954926106411009", "body": "@faceyspacey We're also hoping to vastly simplify React Redux internals themselves (and make them more performant) with it", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 20:09:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964954048943321088", "body": "People will start doing things that make no sense to you. \u201cBut why are you doing this, shouldn\u2019t you do X instead?\u201d Guess what, they learned your library precisely to avoid using X. So educating about these cases are your responsibility too.", "favoritedCount": 146, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 20:05:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964953285533855744", "body": "The problems your early adopters will face are very different from the problems the late adopters will run into. Because early adopters had that assumed knowledge. But you shifted the baseline by releasing your code. It takes a few years for this to happen.", "favoritedCount": 133, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 20:02:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964952775682650113", "body": "Interesting effect I\u2019ve noticed. We often create abstractions assuming at least some knowledge of lower level. But some abstractions are so successful they get a life of their own and become the next \u201cbaseline\u201d for new learners who don\u2019t feel the need to go lower.", "favoritedCount": 365, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 20:00:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964951568524210176", "body": "@threepointone @necolas @mjackson So if you release a good lib for CSS manipulation, people who learned *with* it will skip the \u201cbasics\u201d you assume they\u2019d know. They\u2019ll stop learning at your level of abstraction. This doesn\u2019t happen overnight but over a few years. This is when all those weird mistakes begin.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 19:55:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964951096539131904", "body": "@threepointone @necolas @mjackson If it is possible to do something, and your lib is popular enough, someone will do it. Even if it doesn\u2019t make any sense to you. Part of the reason is that you shift the very baseline of what people know by releasing reusable code. Your lib itself influences landscape.", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 19:54:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964950783526686726", "body": "@threepointone @necolas @mjackson Heh. I suggest to release (as long as it\u2019s on by default, otherwise nobody who needs it will see it). You\u2019ll be surprised at patterns that occur in \u201clong tail\u201d of usage. Things you\u2019d never think people would do.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 19:52:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964950131715002368", "body": "@threepointone @necolas @mjackson Maybe there\u2019s a place for dev-only warning when you detect something like this?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 19:50:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964946879246151680", "body": "@KenWebDevBTW @dmwlff @jorilallo @jordwalke The change was committed so I suppose whichever the next release is", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 19:37:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964946781493780480", "body": "@faceyspacey Context is what powers React Redux under the hood. The new context API isn\u2019t to \u201creplace Redux\u201d, it just fixes a broken feature that needs to be provided by React. Whether you use it directly or through another API like RR is up to you", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 19:36:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964923915448586240", "body": "Most apps that use Redux today probably don\u2019t need it. But I\u2019m glad to hear success stories about cases where Redux-like architecture ends up being actually useful. https://t.co/51YGY3HfB9", "favoritedCount": 329, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 18:06:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964923363201298432", "body": "This is very early and alpha quality but it\u2019s a very cool project! Powered by react-reconciler package (so it is also a demo of writing a custom renderer). https://t.co/AnaQFAfG6H", "favoritedCount": 160, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 18:03:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964919669533609984", "body": "@codeonward @ken_wheeler I\u2019m just saying that whether it exists doesn\u2019t seem correlated with quality of the state \ud83d\ude42 Russia is very much like US, only way poorer", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:49:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964919120084066304", "body": "@ken_wheeler @codeonward https://t.co/yepv2KgCfn", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:47:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964918808740802561", "body": "@codeonward @ken_wheeler Russia has state TV and it\u2019s horrible", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:45:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964918224184905728", "body": "RT @domenic: Yeah, this is definitely web standards. https://t.co/H0YL537eiD", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:43:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964912454085038080", "body": "@KenWebDevBTW @dmwlff @jorilallo @jordwalke Both React and RN did by this point", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:20:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964912380445589505", "body": "@Peter_Machowski @dmwlff @jorilallo @jordwalke @reactnative Probably too late for you but it\u2019s MIT now https://t.co/jnzqjDq6Rr", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:20:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964910712459055105", "body": "@some_day_man @dmwlff @jorilallo @jordwalke It\u2019s MIT now https://t.co/BMrsUhgpqw", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:13:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964910695954382848", "body": "@cxsharpcx @dmwlff @jorilallo @jordwalke It\u2019s MIT now https://t.co/BMrsUhgpqw", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:13:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964910680624320513", "body": "@boastr_net @dmwlff @jorilallo @jordwalke It\u2019s MIT now https://t.co/BMrsUhgpqw", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:13:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964910649519243264", "body": "@jlafay @dmwlff @jorilallo @jordwalke It\u2019s MIT now https://t.co/BMrsUhgpqw", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:13:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964910633375461376", "body": "@mikesherov @dmwlff @jordwalke It\u2019s MIT now https://t.co/BMrsUhgpqw", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:13:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964910603948249089", "body": "@olaf_k @dmwlff It\u2019s MIT now https://t.co/BMrsUhgpqw", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:13:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964910583719002112", "body": "@lukewlms @dmwlff @jorilallo @jordwalke It\u2019s MIT now https://t.co/BMrsUhgpqw", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:13:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964910562793721856", "body": "@Peter_Machowski @dmwlff @jorilallo @jordwalke It\u2019s MIT now https://t.co/BMrsUhgpqw", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:12:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964908131573813249", "body": "@EricVicenti I don\u2019t see how props update is similar to an action", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:03:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964907697626865665", "body": "RT @james_k_nelson: Just pushed a new site for MDX: JSX in Markdown. Thanks @rauchg and @dan_abramov for getting the word out there! https:\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:01:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964907421977243650", "body": "@brian_d_vaughn @mxstbr @OyeAnuj This is an example where somebody who uses SSR heavily (cc @rauchg) could help by reviewing pull requests and giving feedback, and taking that off our plates", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 17:00:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964907237876600832", "body": "@brian_d_vaughn @mxstbr @OyeAnuj AFAIK it\u2019s not a matter of sending a PR, but a matter of somebody taking ownership and reviewing existing efforts. There were attempts. None of us have the time right now though \ud83d\ude14 https://t.co/14zr0fZpFu", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 16:59:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964906832358772737", "body": "RT @slicknet: [Poll] I released Understanding ECMAScript 6 piece-by-piece online as I was writing it. How do you prefer I release future bo\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 16:58:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964900636126040065", "body": "RT @sheley: hey BERLIN \ud83c\udf89\n\nI am looking for a job! I have lots of experience with javascript (react, react native) and i had so much fun wri\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 16:33:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964889416954195968", "body": "RT @reactjs: We're relicensing React Native (including Fresco, Metro, and Yoga) under the MIT license to match React. https://t.co/Ypg7ozX9\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 15:48:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964883607855730688", "body": "Rap album cover https://t.co/6ZW4n3LoIN", "favoritedCount": 779, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 15:25:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964870278202511360", "body": "@betaorbust Thanks. I\u2019m fine, just working on a new project that\u2019s more challenging than usual. I like that", "favoritedCount": 27, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 14:32:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964869976569114624", "body": "RT @leeb: Super excited that the first parts of @calebmer\u2019s work to improve flow error printing just shipped. It\u2019s been really fun working\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 14:31:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964669003288498176", "body": "RT @left_pad: I'm leaving Behance https://t.co/dsOPijaCDO\n\n+ I'll have another post soon for another announcement \ud83d\ude04", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 01:13:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964668292257415168", "body": "RT @devonbl: I often get asked for introductory resources for people who want to learn about #react. I stumble with this, but usually send\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 01:10:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964668271889969153", "body": "@devonbl This page has some. We're also very open to PRs there! https://t.co/pNbWfAqA3f", "favoritedCount": 29, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 17 01:10:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964635680046448644", "body": "Sign you\u2019re getting comfortable with a project: you\u2019re using its abstractions as analogy for everything", "favoritedCount": 134, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 23:00:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964625278315188224", "body": "RT @yogalayout: We have totally revamped our website and documentation. Check out the new interactive doc pages and playground with code ge\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 22:19:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964619946239168512", "body": "@boubiyeah It's all on my GitHub", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 21:58:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964468620012277760", "body": "Tools don\u2019t go *against* your idealistic vision of the web, they help you *achieve* it. Good luck doing this by hand. https://t.co/JsQ7XCQBV7", "favoritedCount": 401, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 11:56:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964467674922266625", "body": "To clarify it\u2019s not a bad thing \ud83d\ude42 just means I\u2019m working on things I don\u2019t understand again, that\u2019s how I learn", "favoritedCount": 121, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 11:53:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964330824228274176", "body": "@souporserious Oops, bind should return { ref: this.refsById[id] },", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 02:49:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964330316029710338", "body": "@souporserious  https://t.co/hj1l9UUERi", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 02:47:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964329520089231361", "body": "@souporserious I don\u2019t understand what your memoize function does. But I suggest keeping refsById object on the top level component as a field.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 02:44:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964328566652653568", "body": "@souporserious bind itself would be the context value", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 02:40:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964328479662727168", "body": "@souporserious I don\u2019t understand why you need ObserveChild at all. I suggest literally ObserveChild = Context.Consumer", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 02:40:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964323681093783553", "body": "@souporserious Memoization just means you create the ref callback once and store it. Then pass it down for bind(id) instead of making a new one every time.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 02:20:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964322880493424646", "body": "@souporserious It can work without memoization too. In that case you\u2019d detach every time you get null, and reattach every time you get node. Memoization just avoids that extra work, but not necessarily to implement my suggestion.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 02:17:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964321473262424064", "body": "@souporserious The context value would be \u201cbind\u201d itself. You don\u2019t need componentWillUnmount. Just detach the observer when you get null in the ref callback. Memoize refs per ID so that they\u2019re not called on every update.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 02:12:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964321225047728129", "body": "@souporserious Why not make ObserveChild an alias to the context consumer (rather than extra component)? &lt;ObserveChild&gt;{(bind) =&gt; &lt;div {...bind(id)}, /&gt;},&lt;/ObserveChild&gt;", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 02:11:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964312755355504641", "body": "That feeling when a project eats all mental resources and there\u2019s no fun left in arguing on twitter", "favoritedCount": 520, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 01:37:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964311689591173121", "body": "@souporserious I think it\u2019ll make more sense to me if you show the API from usage perspective instead", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 01:33:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964296359758221312", "body": "@JordanPapaleo I think what you're saying makes sense.. prevProps is definitely wrong, it's current props. In that sense it's current state too. But you're about to return the next one so... Maybe we should rename them in docs.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 16 00:32:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964228894474887168", "body": "@souporserious One unrelated thing I want to note is that value={{ something, somethingElse },}, on context provider is bad if they're static. All consumers will re-render when value !== prevValue. You're unnecessarily re-rendering everything on provider re-render.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 15 20:04:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "964228594393341955", "body": "@souporserious I'm struggling to understand what you're trying to do, can you explain?", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 15 20:03:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963828783076823040", "body": "RT @slicknet: Understanding ECMAScript 6 is going into *another* printing. Thanks for your continued interest in the book! \u2764\ufe0f\nhttps://t.co/\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 14 17:34:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963798017357877250", "body": "RT @sxywu: I'm creating a workshop aimed at #frontenddevs who need to:\n- understand #d3js code they scrounged together\n- fit that #d3js cod\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 14 15:32:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963553977446096902", "body": "@saranrapjs Check if you get here https://t.co/PHLu6WfXea", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 23:22:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963543519397908485", "body": "@mohamedmansour @TheLarkInn @jkup I checked on GitHub, and they appear to be using the official react-scripts. So their build should be fine. Did you measure `npm run build` output (minified) or `npm start` (that says \"This is not optimized for production\")? https://t.co/QzkgGlI8BC", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 22:40:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963542310645633026", "body": "@mohamedmansour @TheLarkInn @jkup Who maintains that starter? Seems scary if true. They should fix the production setup.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 22:36:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963541819127746560", "body": "@saranrapjs Code executed after ReactDOM.render in React 16 can already do that because 16 runs in sync compat mode. The only exception is when you call ReactDOM.render from another component. In that case it\u2019s unsupported (use portals instead).", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 22:34:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963541227856637953", "body": "@TheLarkInn @GaryBorton I think this thread got confusing because @GaryBorton\u2019s issue and webpack 4 issue are unrelated \ud83d\ude42", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 22:31:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963521911744614401", "body": "@mohamedmansour @TheLarkInn @jkup I just built a production bundle with all of these libs (and some extra polyfills), and it's 189K *before* gzip. Not 1M. The measurements you posted are very misleading (5x larger than it is). I think it\u2019s a bit irresponsible to spread such misconceptions without checking them. https://t.co/uSgD2SiXMu", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 21:14:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963519565052473345", "body": "@jtmthf @TheLarkInn @mohamedmansour @jkup Thank you! It seems like when we discuss performance and metrics on Twitter, we tend to completely forget the fundamentals, e.g. that JavaScript should be minified. If we care about our users, we should get our facts straight first. \ud83d\ude42", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 21:05:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963518199353565184", "body": "@TheLarkInn @jtmthf @mohamedmansour @jkup loool", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 21:00:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963517612310384640", "body": "@GaryBorton @TheLarkInn Thank you!", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 20:57:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963516885156483073", "body": "@mohamedmansour @TheLarkInn @jkup I find this a bit challenging to believe. ReactDOM is the biggest of those and it\u2019s just 100k without gzip. Can you share your measurement setup?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 20:55:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963516495576801280", "body": "@TheLarkInn @GaryBorton Follow up: the config was wrong and it would crash at runtime. With correct config it\u2019s ~3 times smaller. https://t.co/aEtRk8ygkl", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 20:53:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963516216160718851", "body": "@TheLarkInn @GaryBorton @jamonholmgren @lencioni Follow up: this code was broken and wouldn\u2019t even run. The ReactDOM bundle is ~3 times smaller. https://t.co/aEtRk8gFsN", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 20:52:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963515763159191552", "body": "@GaryBorton @TheLarkInn To make this more visible, putting as a reply here: the real bundle is almost 3x smaller. The setup that was measured in this tweet was broken and wouldn\u2019t even run. https://t.co/jSkxQ1hSag", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 20:50:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963515222177865729", "body": "@GaryBorton @TheLarkInn I hope the people who saw your first tweet would see this tweet too \ud83d\ude42 that\u2019s how misinformation spreads", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 20:48:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963514592130367490", "body": "@GaryBorton @TheLarkInn @kylemathews Nobody in real world would bump into this. Because their app would just crash. This is why it\u2019s important to at least run the code \ud83d\ude42", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 20:45:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963514259983519744", "body": "@GaryBorton @TheLarkInn @kylemathews This bundle will crash at runtime. As I mentioned before you need to add quotes around production", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 20:44:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963513026103205888", "body": "@DidierFranc @cpojer File an issue in CRA to discuss with your use case please", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 20:39:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963512862223282185", "body": "@TheLarkInn @GaryBorton Not sure what you mean. Did the tweet say it\u2019s using webpack 4 or the production mode?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 20:39:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963512331157241856", "body": "@GaryBorton @TheLarkInn The Define declaration is also broken because it doesn\u2019t have quotes. This code will fail at runtime with \u201cproduction\u201d being undefined. Can we please start trying before tweeting \ud83d\ude42", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 20:36:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963511902474264576", "body": "@TheLarkInn @GaryBorton @kylemathews Sean, ReactDOM doesn\u2019t weigh 200 kB, this is clearly a wrong setup.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 20:35:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963511697221791744", "body": "@GaryBorton @TheLarkInn This sounds very wrong. Maybe you need to Define first, Uglify second?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 20:34:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963395649545830400", "body": "RT @melanclock: @ohhoe Here is the emacs equivalent https://t.co/1Gr4SWrhd1", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 12:53:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963391653187932161", "body": "@slackjello componentDidUpdate", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 12:37:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963217382251663364", "body": "Do you call this memebiosis", "favoritedCount": 23, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 13 01:04:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963200950306516992", "body": "@ByronAnderson You\u2019re very close to describing the design of a new React feature we\u2019re going to announce soon. \ud83e\udd2d\ud83d\udd25", "favoritedCount": 45, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 23:59:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963169924322603008", "body": "@theKashey Doesn't help memoization. https://t.co/SfnTOQIqLD", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 21:56:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963163362753482752", "body": "@rauchg cc @vjeux", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 21:30:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963162275380154368", "body": "TIRED: functions calling other functions\n\nWIRED: interruptible computations with cached intermediate results\n\nGALACTIC BRAIN: interruptible computations with cached intermediate results that look just like functions calling other functions\n\nComing to libraries near you", "favoritedCount": 387, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 21:25:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963101360043515904", "body": "@moaazsidat @trueadm @IAmTrySound No, there's no way string refs could be \"fixed\". If they could, we wouldn't be introducing new APIs :-)", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 17:23:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963053389822164999", "body": "RT @ReactRally: The React Rally CFP is live: https://t.co/6Wp1UUcU1f\n\nWe can't wait to see your ideas!", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 14:13:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963040267451469824", "body": "https://t.co/v2kbrHV2V5", "favoritedCount": 30, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 13:21:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963033913147961345", "body": "@goncy I don't think it's feasible. At that point we'll just turn into another webpack. It makes more sense to me to invest effort into making lower level tools (like webpack) more usable directly.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 12:55:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963032228556099584", "body": "@goncy I don't understand how you can maintain \"overrides\" when we literally change whole sections of config in patch releases", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 12:49:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "963019892814467073", "body": "@acdlite @denvercoder It\u2019s your fault, my parts were good!", "favoritedCount": 149, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 12:00:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962882482617143296", "body": "@mjackson So teach the reducer pattern \ud83d\ude42 I\u2019m sure it will be relevant for a longer time than a specific bindings API.", "favoritedCount": 22, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 02:54:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962879985886420994", "body": "@mjackson What do you call Redux? If you teach how to create a local state reducer, does that count? This is a good pattern to understand for every React user. Then bam, mention you can put it in createStore and it\u2019s Redux.", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 02:44:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962879085008572416", "body": "Never create anything", "favoritedCount": 804, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 02:40:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962878073002741760", "body": "ReactVR.render(&lt;Avatar /&gt;, warehouse)", "favoritedCount": 167, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 02:36:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962871200438521858", "body": "wow https://t.co/x3dXX6eCKw", "favoritedCount": 435, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 02:09:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962871126643892225", "body": "RT @jordwalke: Reason React in @reasonml solves these problems of Redux not by abandoning Redux but instead by including it directly in the\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 12 02:09:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962822683862892544", "body": "RT @jaredforsyth: because I can, and because it seemed like a good idea, I made a rasterizer for #reactnative so you can turn your jest sna\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 22:56:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962811211002806272", "body": "(I'm not an expert on this, maybe @acdlite can offer more details. This thread might also be interesting: https://t.co/2odolzABuk)", "favoritedCount": 16, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 22:10:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962810069510492167", "body": "requestAnimationFrame() is a good tool for animation, but it's not a generic purpose scheduler. You need something aware of \"deadlines\". requestIdleCallback() can help but it's not guaranteed to be available. Here's what we do in React: https://t.co/IFT23sH9mc", "favoritedCount": 101, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 22:06:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962809643276886017", "body": "Fun way to recognize apps that attempt to batch application logic with requestAnimationFrame: if they're in the middle of something and you switch to another tab, they're still \"busy\" even if you come back an hour later.", "favoritedCount": 101, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 22:04:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962799129729667072", "body": "@nekrtemplar I mean that this works:\n\nfunction App() {\n  let ref = createRef();\n  function handleClick() {\n    console.log(ref.value); // do something\n  },\n  return &lt;div ref={ref}, onClick={handleClick}, /&gt;\n},\n\nCan\u2019t do this with linkRef() unless you give it a fake \"this\" object.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 21:22:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962798847381647360", "body": "@nekrtemplar To give extra perspective on why we went with this approach\u2014it's friendlier to compiler optimizations (no need to assume a specific component instance), and static typing.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 21:21:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962792669499019269", "body": "@threepointone Does this mean you\u2019re open to spending some time to get Animated for Web published? AFAIK it\u2019s ready, we just never had time to do the docs so nobody knows about it or uses it", "favoritedCount": 18, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 20:57:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962790121807532032", "body": "@threepointone Why not props?", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 20:47:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962790023010668549", "body": "@nekrtemplar (But that utility works fine with React if you prefer it)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 20:46:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962789834694815745", "body": "@nekrtemplar Seems a bit awkward to use inside a functional component.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 20:45:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962789317188861952", "body": "@threepointone Hmm maybe making refs more convenient was a bad idea \ud83d\ude33", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 20:43:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962776883459969029", "body": "RT @acdlite: A thought exercise: If code-splitting is so great, and bundlers like Webpack make it easy, why don't we code-split every compo\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 19:54:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962768830857703424", "body": "Just merged the React.createRef() RFC. Thanks @trueadm @IAmTrySound for your work on this! https://t.co/qXeTo5X9pJ", "favoritedCount": 301, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 19:22:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962723895122984965", "body": "@mamadero @joshduck @SirSeanOfLoxley @rashiq Come work at FB :-)", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 16:23:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962723812973391877", "body": "@GaetanSNL We don't use this concept at all, although some components do end with \"Container\"", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 16:23:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962697788839682048", "body": "@sayrer This is challenging when you have multiple targets.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 14:40:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962509733591646208", "body": "@thejameskyle @_baxuz Yeah. I only mean the verbosity of Redux is not React\u2019s fault. Except in the sense that React isn\u2019t providing enough, which necessitated external state management in the first place.", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 02:12:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962509260855881728", "body": "RT @searls: Great news! I just released testdouble-jest, which adds first-class support for Jest users. Just call td.mock() instead of jest\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 02:11:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962507508324753408", "body": "@_baxuz @thejameskyle Redux has nothing to do with React", "favoritedCount": 22, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 11 02:04:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962430444192059394", "body": "@niklaskorz The whole point of JavaScript is to take existing names and make up new meanings for them", "favoritedCount": 18, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 20:57:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962430261270073345", "body": "@amerllica @moke_rs https://t.co/ckfvLuXMLN", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 20:57:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962411491029897217", "body": "@amerllica @moke_rs This is default Sublime theme. I\u2019m not actually using it, just writing from a different computer.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 19:42:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962411272682852352", "body": "@abritinthebay Integrations (like CommonJS support) are missing and it still has bugs, but definitely worth experimenting with. Just make sure you understand what exactly it is doing. Just running the whole app through it might not make sense.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 19:41:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962404770781810688", "body": "Wrote about what compiling React with Prepack before GCC could look like. Might be an interesting read for library authors. https://t.co/UqWQ2je4kP https://t.co/z1K6bmpoe2", "favoritedCount": 306, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 19:15:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962358655332085760", "body": "@brian_d_vaughn @ken_wheeler Thought literally the same thing", "favoritedCount": 19, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 16:12:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962350680202797056", "body": "RT @left_pad: So @loganfsmyth made an initial PR regarding @babeljs v7 config lookup (relates to node_modules, symlinks, monorepos, tools).\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 15:40:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962329860638113793", "body": "@barankucukguzel Aaah that makes sense. Wow. We truly live in the future", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 14:18:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962322591053762560", "body": "@barankucukguzel lol how is this even possible?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 13:49:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962321771956404224", "body": "@AndricoKaroulla @reactjs I'm not sure it's supposed to be public API. Didn't see it in the RFC. I filed an issue https://t.co/bPhmuqWwJN", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 13:46:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962320654648389632", "body": "@AndricoKaroulla @reactjs Not sure what you mean by \"current values\" but it's (AFAIK) not supposed to be part of public API. Maybe we need to make this clearer.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 13:41:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962320492983209984", "body": "@AndricoKaroulla @reactjs If it changes then put it in the state, and update it with setState. This way if it hasn't changed, you'll pass the old version.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 13:40:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962320406312095749", "body": "@AndricoKaroulla @reactjs Totally preventable, just pass the same object if it doesn't change :-) In your example, it could be hoisted to top level variable (if it never changes). Although in that case you might as well rely on default value instead.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 13:40:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962313620674809856", "body": "@AndricoKaroulla @reactjs Note that every time MainApplication re-renders, all context consumers will assume they need updating because you're passing a different (referentially) object every time", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 13:13:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962312704391307264", "body": "@haroenv @jlongster Normal shallow equality works! That\u2019s exactly what I suggest using. The example in this issue was broken because the author *always* returned false from sCU.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 13:10:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962310220528652288", "body": "@LesSzklanny If you mean decorator *syntax*, it's not stable yet and there is even no Babel plugin implementing current version of the spec. I wouldn't recommend using it unless you're comfortable with writing AST transforms.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 13:00:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962150305147351040", "body": "Thinking in Prepack: retain or it didn\u2019t happen.", "favoritedCount": 14, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 02:24:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962148499482730496", "body": "RT @sebmarkbage: @janicduplessis @Sander_Spies @reasonml 4. Closure Compiler to clean up the pieces Prepack leaves for minifiers to do.\n5.\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 02:17:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962130089663188993", "body": "RT @james_k_nelson: Announcing MDXC: A tool to convert Markdown into #reactjs Components.\nhttps://t.co/GEvydwMv4m https://t.co/Q6Q0gbInDk", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 10 01:04:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962112883139272704", "body": "@acdlite Are you \u201cat it\u201d again https://t.co/RgsaoOULd5", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 23:56:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962112499310002176", "body": "@telmo VRChat", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 23:54:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962111750337454080", "body": "This path sure makes a lot of sense https://t.co/fDOtjZkwhB", "favoritedCount": 22, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 23:51:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962110793956261889", "body": "@iansu I\u2019m already liking this https://t.co/yy4ZF3TwRi", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 23:47:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962109254894268417", "body": "@iansu Guess what https://t.co/VNUfW50dbb", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 23:41:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962107055204167682", "body": "@iansu Just want to run a game \ud83d\ude02", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 23:32:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962106659031212032", "body": "@JurajHusar Yep", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 23:31:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962106489690304512", "body": "\ud83d\udc22\n\ud83d\udc22\n\ud83d\udc22\n\ud83d\udc22\n\u2026 https://t.co/n762jrSlw6", "favoritedCount": 66, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 23:30:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962101357590335489", "body": "@joshduck @SirSeanOfLoxley @rashiq We\u2019re using (very fast) devservers, editing experience feels like local (instant jump to file and save, etc).", "favoritedCount": 42, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 23:10:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962080510620192768", "body": "RT @joseeight: We are looking for full-stack engineers with an interest in Web to join my team at @Twitter in San Francisco and help us mak\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 21:47:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962073768242774016", "body": "@thekitze Careful with Prepack. It optimizes for doing less at runtime, not code size. If you\u2019re packing matches and coal, Prepack will set up a fire right in your bag so you don\u2019t have to do it later.", "favoritedCount": 78, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 21:20:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962042631608983552", "body": "If you use render props, make sure shouldComponentUpdate() in your components always respects children (like PureComponent does). Otherwise you can end up with very confusing issues: https://t.co/55y8c5tU1p", "favoritedCount": 362, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 19:16:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "962041976584519681", "body": "RT @trueadm: It's great to see @fbOpenSource sponsoring @RollupJS. Thank you to everyone who's been behind Rollup and contributed to the pr\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 19:14:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961971195448045568", "body": "Facebook when you\u2019re working at Facebook https://t.co/HS2QGDYD92", "favoritedCount": 2517, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 14:33:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961969193880047618", "body": "RT @jamie_gaskins: Code comments https://t.co/RdebYzpGJP", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 14:25:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961968809849622529", "body": "@antmdvs @acdlite It's safe to use directly but use cases are about the same", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 14:23:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961968589816434688", "body": "@andrewgreenh There's probably an RSS feed?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 14:22:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961934868249706496", "body": "RT @elijahmanor: \ud83c\udfac Create React App Playlist https://t.co/4u8tml5XCv\n\n1\ufe0f\u20e3 Getting Started\n2\ufe0f\u20e3 Debugging with VS @Code\n\u26a1\ufe0f ... more to come .\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 12:08:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961934377394556928", "body": "@k1sul1 What features are you referring to in particular?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 12:06:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961933759825301505", "body": "@heartomics If you want server rendering", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 12:04:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961933680720609280", "body": "@Alex_UndefinedO @ryanflorence Open the console to see what\u2019s wrong?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 12:03:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961933488831246337", "body": "RT @jaredpalmer: I refactored After.js to be a small library of components and ripped out the build system. Now it works seamlessly with Ra\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 12:03:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961920438833119232", "body": "RT @ReactFest: ReactFest #Diversity Tickets application closes today! \n\nIf you're a member of under-represented group, apply here to get a\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 11:11:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961759578357665792", "body": "RT @nick_zuber: Introducing `add-reason` \u2728\ud83d\udc19\n\nA little tool that makes integrating @reasonml code in existing JavaScript projects dead simpl\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 09 00:32:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961622324909920258", "body": "Webpack\u2019s official analyze tool (https://t.co/ofhwCJg9MY) doesn\u2019t even show up for the first page of \u201cwebpack analyzer\u201d or \u201cwebpack visualizer\u201d for me \ud83e\udd14", "favoritedCount": 119, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 08 15:26:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961571923007287296", "body": "@renaudtertrais @sebmarkbage @storybookjs I dont understand why you copy something from props to state on every update. It would be equivalent to just grab it from props in the first place, no?", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 08 12:06:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961571559331827712", "body": "@OliverJAsh No. There\u2019s barely any. But it\u2019s all in this folder https://t.co/F1sF14nwHe", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 08 12:04:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961570675440934914", "body": "@OliverJAsh No public API for this. Many people asked this over time but we need someone to do the work of extracting the \u201cbackend\u201d from React DevTools and turning it into an npm package. Wanna do it?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 08 12:01:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961570675440934914", "body": "@OliverJAsh No public API for this. Many people asked this over time but we need someone to do the work of extracting the \u201cbackend\u201d from React DevTools and turning it into an npm package. Wanna do it?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 08 12:01:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961566972738789378", "body": "@koba04 It is still necessary if you want to start a low pri update from a controlled input event. For example to update filtered item list. In this case you\u2019d do two setStates, a normal one (for the input) and a deferred one (for the list).", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 08 11:46:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961336465216196608", "body": "@andrewingram Not sure what you mean", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 07 20:30:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961336351131144193", "body": "RT @zeithq: Streaming Server-Side Rendering and Caching with React at Spectrum\n\nhttps://t.co/nLVMI0QnGY https://t.co/ZBQVsp1Jva", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 07 20:30:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961335918044090368", "body": "@andrewingram AFAIK it's intentionally not treated as arrays by Children. For example because we might want to allow event handlers on them.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 07 20:28:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961279302183604225", "body": "RT @CompuIves: \ud83d\udd25\ud83d\udd25 Announcing CodeSandbox 2.5! \ud83d\udd25\ud83d\udd25\n\n- New Redesigned Editor\n- @angular Support\n- @fbjest Integration\n- Custom @babeljs Plugin\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 07 16:43:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961262025442758656", "body": "@marypcbuk Now I\u2019m down this rabbit hole https://t.co/A99LTYZZbJ", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 07 15:35:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961259064519950336", "body": "On Error Resume Next, don't @ me", "favoritedCount": 65, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 07 15:23:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961258813792845825", "body": "@AriyaHidayat I remember trying to learn C after VB. I got as far as to display a blank window with WinAPI, and even that was white (rather than the default \u201cform color\u201d). I gave up. \ud83d\ude1b", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 07 15:22:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961258302742188033", "body": "There was a time I felt shame in VB being my first language. Now I know people berating it have spectacularly missed the point. It\u2019s not a great language but it was an extraordinary design tool.", "favoritedCount": 123, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 07 15:20:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961255580437504001", "body": "Fascinating how many times Visual Basic is mentioned as the tool that let Windows 95 team break out of the waterfall and rapidly prototype Start Menu, Task Bar, etc. In other words, VB directly enabled one of the most successful products of all times. https://t.co/mLbQBLj9J5", "favoritedCount": 311, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 07 15:09:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961252739819941889", "body": "RT @AriyaHidayat: Fascinating insight into the design process of Windows 95 user interface:\nhttps://t.co/DIP26rsW0w. Apparently the Start m\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 07 14:58:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961197394707795968", "body": "@NikkitaFTW @ReactiveConf Maybe the furries talk gets selected! Then it\u2019s win-win", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 07 11:18:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961188180417490944", "body": "Don\u2019t know what it is about London but I really love it https://t.co/wb6tdZ1CPR", "favoritedCount": 431, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 07 10:41:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961186353101885441", "body": "@Siyfion @yarnpkg @lernajs Yep. (Yarn Workspaces is what we plan to support)", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Feb 07 10:34:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961017844572897281", "body": "@posva I just took a screenshot and printed that", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 23:24:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961017004755947520", "body": "RT @sarah_edo: When you load a whole library for some code you could probably write yourself https://t.co/803ical88x", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 23:21:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961016795359535104", "body": "@wSokra I was actually looking at the master source and was like: wait, this isn't supposed to happen. Then realized master is for 4.x :-)", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 23:20:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "961015939255951360", "body": "RT @sebmarkbage: I love the approach of user space bridging between frameworks. Can be made so much richer than trying to find lowest commo\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 23:17:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960995826104504320", "body": "Printers \ud83e\udd2c https://t.co/fwLBObJDYz", "favoritedCount": 89, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 21:57:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960983582851371010", "body": "That feeling when you have too many resolve.alias\u2019es https://t.co/ExQM9yVfly", "favoritedCount": 26, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 21:08:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960962810938314761", "body": "@auchenberg @cramforce @ChromeDevTools @code I\u2019m always open to better approaches", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 19:46:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960947396099403776", "body": "@stubailo @apollographql You can track alphas here: https://t.co/gKPwNLenOT. This change will be in next alpha. It will take a while until this becomes stable (probably a few months). Alphas have known issues but early adopters can try.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 18:44:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960946969270210560", "body": "@a_cederstrom Hi, can you please DM me? I wanted to discuss something", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 18:43:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960931268727853058", "body": "@devongovett We turn that off", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 17:40:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960928519047049216", "body": "@devongovett We don't have babelrc's in CRA at all, so we'll use the same pipeline as the app.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 17:29:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960928387207434240", "body": "@devongovett This assumes a specific bundler and that everyone will agree on this format.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 17:29:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960889585927639040", "body": "@BrennanGlynn It is", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 14:55:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960889329047556096", "body": "@ScribblingOn Yeah I recognized the sample! \ud83d\ude0d", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 14:54:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960888123151568897", "body": "Why is this so addictive https://t.co/8ofHjYLVzf", "favoritedCount": 46, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 14:49:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960880127717576709", "body": "@devongovett @mycompany Now that I think of it, maybe the sweet spot here is to acknowledge \"source\" only for packages with \"private\": true. Then no need for whitelists etc.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 14:17:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960872618395164672", "body": "@mxstbr @oleg008 @ken_wheeler @thekitze react-scripts has no relation to react, you can update react/react-dom completely independently from it", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 13:47:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960866747216777216", "body": "@oleg008 @ken_wheeler @thekitze Depends on what you do there. \"fixed\" cost is smaller than all the stuff people put in lifecycles. This means HOC should really do as little as possible though, especially in lifecycles and render.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 13:24:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960866012781535233", "body": "@ken_wheeler @oleg008 @thekitze HOC costs exactly the same as a component because it produces a component. There is some fixed cost (just like with any other component)", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 13:21:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960865586078273536", "body": "@devongovett It doesn\u2019t have to be a long list either. e.g. \"sourceDependencies\": [\"@mycompany/*\"]", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 13:19:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960863046196449285", "body": "@devongovett Here\u2019s another argument for this being opt-in. I don\u2019t want a random transitive dep upgrade to break all my projects because it was published with a \"source\" field which points to incompatible source. OTOH I want \"source\" field to be respected (opt-in) for private registry pkgs.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 13:09:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960854454596784128", "body": "@chazmuzz @franleplant Oh, we absolutely plan to keep using it internally. It just doesn\u2019t make sense for React itself because it makes it harder to understand how packages are built (which is important for React). We already removed it from React repo.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 12:35:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960852142734094336", "body": "@paularmstrong @devongovett What\u2019s different?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 12:26:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960851892011233285", "body": "@devongovett To sum up: I think there is value in being able to either include or exclude specific packages to be treated as \u201capp code\u201d. And it seems sensible to me to colocate that knowledge with the app itself. The bonus is we can use the same info to decide which tests to run by default.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 12:25:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960851542697037824", "body": "@devongovett There is no guarantee that some random component on npm won\u2019t have a \u201csource\u201d field. So in general you\u2019d want to ignore that. But what if you can\u2019t use monorepos and are okay with publishing source (eg internally at the company)? As long as it\u2019s opt-in, it\u2019s a nice escape hatch.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 12:23:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960851217399369728", "body": "@devongovett The situation I\u2019m struggling with is: what if you later decide to publish a component on npm? If you want to switch some apps to consume a \u201cprebuilt\u201d version then you\u2019d need to remove the source field.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 12:22:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960849973351940096", "body": "RT @PrettierCode: \u2728 New and shiny website! \ud83c\udf86 https://t.co/mVNquVDqJ6\n\nThanks to @orta, @lucasazzola and everyone else with their feedback.\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 12:17:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960849676260999169", "body": "RT @grabbou: React Native 0.53 stable is out! \nhttps://t.co/SAgn5MwrSP", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 12:16:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960678532690141184", "body": "@boriscoder @bradfordlemley Arguably sharing components between apps is one of the most important use cases for React", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 00:56:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960676410753941504", "body": "cc @devongovett in case something like this would be interesting to Parcel too. I don't know if the concept of \"sourceDependencies\" is something you'd be willing to explore but a community convention around it would be cool.", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 00:47:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960676128758358016", "body": "In this way, the app's build system acts as a \"host\" for a subset of packages that are explicitly opted into that (by the app itself). You can gradually \"detach\" packages from the \"host\" app(s) when they need their own more complicated builds.", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 00:46:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960675849979736064", "body": "The plan is to allow many CRA apps in a monorepo. They may share packages. An app may mark some packages as \"sourceDependencies\" (open to bikeshedding) in package.json. Those get resolved through \"source\" before \"main\", are compiled with app's preset, and run with app's tests.", "favoritedCount": 16, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 00:45:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960675097798500353", "body": "Excited about @bradfordlemley\u2019s work on monorepo support in Create React App. There\u2019s still things to do but I think our proposed model (soon to be posted as an issue) makes sense.", "favoritedCount": 71, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 00:42:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960673296743387136", "body": "@mjackson @acdlite @keyanzhang @ryanflorence \ud83d\ude35", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 00:35:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960672434839007232", "body": "@acdlite @keyanzhang So you get infinite success by zero HOCs \ud83d\ude0f But @ryanflorence @mjackson don\u2019t get too excited because you have zero semicolons, so 0/0 = NaN", "favoritedCount": 29, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 00:32:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960672122019483648", "body": "RT @acdlite: @dan_abramov @keyanzhang success = (number of semicolons) * (number of render props) / (number of HOCs)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 00:30:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960670363930767360", "body": "@keyanzhang Of course not, that depends on where you put the semicolons", "favoritedCount": 61, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 00:23:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960670003837263874", "body": "@acdlite You\u2019re turning into Sebastian", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Feb 06 00:22:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960661347448033286", "body": "@EricVicenti @mxstbr @reactjs Maybe if the \u201crender\u201d prop was called \u201cchildren\u201d the I\u2019d see the problem sooner because my code would crash as soon as I tried to use a component without checking its API \ud83d\ude1b", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 23:48:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960660964621340673", "body": "@EricVicenti @mxstbr @reactjs Okay say the prop is called render. So this means I can put children inside and not think about types! Wait, my child is completely ignored \ud83d\ude10 Oh, I need to pass a \u201crender\u201d prop and it needs to be a function \ud83d\ude2f I wish I saw a warning when I tried to pass a child then", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 23:46:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960658696798900224", "body": "@jkup @ChromeDevTools Pretty sure I approved that one", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 23:37:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960657457864413189", "body": "RT @dan_abramov: @ChromeDevTools Why does the mapping feature never work for me? Every few months I try it, and it always fails to associat\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 23:32:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960652645261332480", "body": "@noah_adams Yes but it\u2019s even more interesting when it\u2019s true for lines that are", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 23:13:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960651469052694532", "body": "@veekas @reactjs I liked @Channel4 Humans better", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 23:08:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960650941467947009", "body": "@veekas @reactjs I very much tried to enjoy it but alas", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 23:06:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960628811715969024", "body": "@lopes_pm Yeah, that\u2019s about it. Also many edits and takes.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 21:38:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960579972007161856", "body": "We\u2019ve never made changes without announcing them on the blog with detailed migration strategies. Why does every seem to think we\u2019ve stopped doing this?", "favoritedCount": 35, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 18:24:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960579662886957062", "body": "My Twitter is not an official channel for React announcements! Please don\u2019t get stressed trying to keep up. Any changes *will* be announced on React blog at https://t.co/D5RxIw8gep, as they always have been. There is no need to create this pressure.", "favoritedCount": 202, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 18:23:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960578506089431041", "body": "@codeonward To be clear I didn\u2019t mean to shout at you with \u201cALWAYS\u201d, just saying we never had a change without a blog post explaining the migration strategy, and we\u2019ll keep doing that \ud83d\ude42", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 18:18:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960578251826614273", "body": "@codeonward We are currently working on these blog posts. They take time to write. Please stay tuned for updates and rest assured anything important will be on the blog, not here.", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 18:17:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960578122910502912", "body": "@codeonward React has ALWAYS released blog posts for every single release with substantial changes. We never relied on Twitter or SO for broadcasting information \ud83d\ude42 You\u2019re reading my personal account where I post my thoughts. React blog is here: https://t.co/nFnp11nXBh", "favoritedCount": 14, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 18:17:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960567721460191232", "body": "@maksUgr I don't have opinions on file structures, IMO this barely matters in practice as long as it's easy to import things", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 17:36:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960547057051291656", "body": "@mxstbr @wonderboymusic Minor nit: JS is (typically) single-threaded. \ud83d\ude42 So maybe it\u2019s concurrency-safe or something.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 16:13:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960546768122413056", "body": "@rubencodes Merges, just like a setState call", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 16:12:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960546331231162369", "body": "@swyx @sophiebits @acemarke One thing it doesn\u2019t do yet is show React component trace. This is doable but needs a bit of work on React side. Would be very happy to give pointers, I\u2019ve wanted to do this for months but had no time", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 16:11:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960545943467778049", "body": "@swyx @sophiebits @acemarke react-error-overlay has absolutely no dependencies on webpack (or its server), maybe you\u2019re looking at something else? Our webpack client *uses* the overlay, not the other way around.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 16:09:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960545569226870784", "body": "@rubencodes 1. On init and every update\n2. Yes\n3. It is bad if you just copy them (because it\u2019s unnecessary). Notice my example above is impossible without deriving state (because it depends *both* on current and previous state).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 16:08:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960515974742110209", "body": "For example I want to know conditions that, if flipped, would have no effect on tests. Even if technically they\u2019re \u201ccovered\u201d (test code runs over them).", "favoritedCount": 31, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 14:10:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960515805967540225", "body": "Is there a metric like code coverage, but that shows lines that, if changed (in a syntactically correct way), wouldn\u2019t cause tests to fail?", "favoritedCount": 76, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 14:09:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960492958851239936", "body": "@Chudesnov @cpojer Not actively working on that stuff right now so I\u2019m not in the right mindspace to comment", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 12:39:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960492562363703303", "body": "@Canenald Note we still plan to add deprecation warnings in future minors (as we always have) so if that\u2019s not something you\u2019d like, might be worth pinning. Also we could mess something up by mistake \ud83d\ude1b", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 12:37:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960491357688291329", "body": "@mweststrate Of course one could come up with counter-examples to both statements. But in practice switches tend to be subtly broken by not considering exhaustiveness so often that maybe treating them differently is a good heuristic.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 12:32:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960490994667085824", "body": "@mweststrate If tends to be used for special cases. So adding more \u201cother\u201d cases doesn\u2019t break the logic. Whereas switch is often used for enums. Adding a new enum value tends to break such logic. JS has no way to check exhaustiveness. So enforcing default is the closest you can do.", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 12:31:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960490223967854592", "body": "RT @ReactFest: It's been busy weekend - all ReactFest Standard tickets sold out! \ud83c\udfa1 We just released a  few more regular tickets - don't mis\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 12:28:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960475223706472448", "body": "RT @dan_abramov: How does React setState() batching work today? I explain: https://t.co/DUJf9lIF76", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 11:28:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960470408205164545", "body": "@acdlite @ken_wheeler Here goes https://t.co/N0BZ8dR6cm", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 11:09:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960469926879391744", "body": "RT @cpojer: Looking to start contributing to a large open source project? Start by taking care of Jest's issue tracker :)\n\nhttps://t.co/dhT\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 11:07:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960437491491901440", "body": "RT @acemarke: Put together newsletter issue 3 this afternoon. Got a lot of React news to talk about, and a neat update on a project of part\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 08:58:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960333951675092992", "body": "React came out \u201crethinking best practices\u201d. It has since accumulated \u201cbest practices\u201d of its own. Let\u2019s see if we can do better.", "favoritedCount": 134, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 02:07:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960333370461896704", "body": "What if the important part about the render function is not that it\u2019s pure, but that it\u2019s idempotent? What interesting new APIs could come out of that realization?", "favoritedCount": 74, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 02:04:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960333074205741056", "body": "For example keeping two copies of the input state is bad, right? What if told you some parts of the app are more critical to re-render fast than the others, and React could take hints about that? Maybe then separating filter input state from the results list is not a wild idea.", "favoritedCount": 55, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 02:03:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960332189694087169", "body": "These next few months are going to be fun in React land. As we start paving the way for async mode to become stable and build new APIs, \u201cbest practices\u201d will be re-examined, both by us and the community.", "favoritedCount": 710, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 02:00:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960331027473403909", "body": "@acemarke @AlicanC Nah you\u2019ll get used to it", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 01:55:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960329310371549186", "body": "@AlicanC Not really. The point wasn't to add a feature, the point was to limit cWRP in a way that we *wanted* it to be used (and be async-compatible), and also make sure it runs for first props.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 01:48:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960324277999415296", "body": "@AlicanC cWRP is going away in favor of gDSFP", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 01:28:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960324134734573569", "body": "@ChromeDevTools Why does the mapping feature never work for me? Every few months I try it, and it always fails to associate the source map with a file no matter what I do. Reproducing case: any Create React App project. https://t.co/bPpej3JVKA", "favoritedCount": 96, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 01:28:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960317758155214849", "body": "@dfilatov_ The goal of React is to be performant. To do this, we avoid unnecessary re-renders. It would be unnecessary to render {a: 1}, just to let you run a console.log and then immediately render {a: 2},. This is why React combines the updates, and then notifies you.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 01:02:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960317487446446085", "body": "@dfilatov_ I don't see why it's unpredictable (it might just be that we have different models of what happens). setState callback fires after the update has been *flushed*. So that's after the re-render. Therefore, both callbacks fire when this.state.a is 2.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 01:01:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960308787537154050", "body": "@ra This would be dope https://t.co/0bR0Id03OE", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 00:27:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960305777968930816", "body": "What are the use cases for getDerivedStateFromProps()? There are a few, but here is one example: accumulation of state based on a prop change. https://t.co/8msW1QmlEs", "favoritedCount": 245, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Feb 05 00:15:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960295209266491392", "body": "@icelabaratory I\u2019ve been there. Same feelings about any codebase where I\u2019ve used currying a lot.", "favoritedCount": 16, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 23:33:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960294460788703240", "body": "@jotto Yes, I think as long as official docs later link to those artifacts as \"in-depth\" content that's a working approach", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 23:30:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960292980270817280", "body": "RT @acdlite: Opened an umbrella issue for 16.3. Biggest items:\n\n- New context API\n- getDerivedStateFromProps\n- Async mode is now stable eno\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 23:24:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960292940437426176", "body": "@threepointone @sebmck As long as you know statically condition is boolean, it's cool. Just easy to mess up and accidentally render 0", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 23:24:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960292690742140929", "body": "@IAmTrySound @D3DVincent @sebmck Unfortunately even with gDSFP people will still try to \"sync everything\" unnecessarily", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 23:23:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960292526514196480", "body": "@joshduck @EloyToro @sebmck I'd say it's a very valuable pattern when used in moderation", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 23:22:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960292193603850240", "body": "@jotto I added links from the official doc. This is useful but it's advanced content. For people just learning React (many of whom are just learning programing) this is too much.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 23:21:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960279561849143297", "body": "RT @type__error: I'm interested to know: how many people use React *without* Redux (or Flux, or similar)?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 22:31:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960277415967842304", "body": "@acdlite @ken_wheeler This makes sense to me but I\u2019d prefer as a separate entry point. So that it doesn\u2019t add bloat to react-dom-lite. For example react-reconciler/persistent.", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 22:22:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960273367503949825", "body": "RT @brian_d_vaughn: @btmpl @dan_abramov UNSAFE_ stuff is permanent. It will stick around but we want to draw attention to it being unsafe.\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 22:06:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960273205540868097", "body": "@ken_wheeler @acdlite I think you'd need to build from source because you need this flag to be on: https://t.co/Nl8L2wJHZ7", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 22:05:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960272905744601089", "body": "Yay! @jxnblk just published 2.0 of macro-components that doesn\u2019t have the old API pitfalls. Check it out: https://t.co/dzr2fryuw4", "favoritedCount": 88, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 22:04:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960270881393082368", "body": "@smisaacs I only watched the first minute, or I'd die from cringing", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 21:56:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960270165031161857", "body": "@amivag7 Fair\u2014that's the paradox of tooling and educational content. It is easier to target SPAs because they're relatively similar instead of explaining integration with dozens of possible stacks https://t.co/SP2AMq3KWi", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 21:53:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960269674188558336", "body": "@stevensacks I think CRA could exist because it hits a sweet spot in terms of complexity. All SPAs have much in common so CRA optimizes for making *that* as hassle-free as possible. I don't think it could \"happen\" as a tool for all use cases. But you're right this now reinforces the myth.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 21:51:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960269032619470850", "body": "@amyvpellegrini @jimcodes Your experience counts", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 21:49:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960267961385803777", "body": "@adamwknox @_fruchtose @sebmck 1) Use \"layout\" components, e.g. &lt;App sidebar={&lt;Sidebar /&gt;}, contentArea={&lt;UserProfile /&gt;}, /&gt; instead of \"plumbing\" content props through many \"layout\" layers\n\n2) New context API (blog post coming soon)", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 21:44:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960267556429889537", "body": "@_pi0_ @horse_js React is dead", "favoritedCount": 29, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 21:43:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960255485558616064", "body": "@_fruchtose @sebmck That's true", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 20:55:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960252245219651585", "body": "@_fruchtose @sebmck If those props \"make sense\" for intermediate layers of components, nothing wrong with passing them deeply down", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 20:42:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960252041565298688", "body": "@rgbkrk @sebmck New context API solves that", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 20:41:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960208328277266432", "body": "@brian_d_vaughn It ends being less effort over time since I can now point people there instead of explaining it over and over in ad hoc convos", "favoritedCount": 16, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 17:47:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960206186443366401", "body": "@bluepnume Something like this, yes. Specifically we\u2019ll default to assuming updates are low priority with a deadline depending on the event type. Will add an opt-in API for sync updates.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 17:39:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960203438578642944", "body": "How does React setState() batching work today? I explain: https://t.co/DUJf9lIF76", "favoritedCount": 634, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 17:28:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960197136590786561", "body": "@nazarov_tech Lol I just realized he\u2019s in front of a world map. \ud83d\ude02 I guess that\u2019s one way to appear legit enough to be broadcasted by state TV", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 17:03:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960196012441833473", "body": "@nazarov_tech Don't have a link but here's a pic https://t.co/jZrLAcQSqe", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 16:59:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960185008240635904", "body": "RT @raganwald: What is mutable state?\n\nIt is like a lock on a door that has many dials, levers, and places to insert keys. But whenever you\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 16:15:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960182056977420289", "body": "The global village is real", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 16:03:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960180922682396672", "body": "A 7-minute Paul Joseph Watson video being translated and aired by a Russian state TV channel is the most surreal thing I\u2019ve seen in 2018 yet", "favoritedCount": 35, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 15:59:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960174875573923840", "body": "@amyvpellegrini @jimcodes I'd just say \"server-rendered SPA\". Or \"SPA with SSR\" (server side rendering). Utopian in the sense that there's many non-trivial questions to answer (e.g. data fetching) but great if you worked it out \ud83d\ude42", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 15:35:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960174373721313280", "body": "@radicalrafi No idea, maybe just use CSS? React doesn\u2019t really care how you do it", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 15:33:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "960160836764491778", "body": "RT @jaredpalmer: Instead of a blog post today, here's an RFC about adding a \"state reducer\" pattern to Formik and how it might work. \n\nhttp\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 14:39:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959961935038074881", "body": "CSS Modules experts, can you help us settle on what production class names should look like? Especially considering pros and cons of using hashes. https://t.co/Wqa6Dx0FiE", "favoritedCount": 69, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 01:28:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959959748929052673", "body": "@richardz_work Are you struggling with something in RR? I found the new version quite intuitive but I haven\u2019t spent much time with it tbh", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 01:20:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959958465962749952", "body": "@aaronplanell An application \u201cwithin\u201d React/Redux (rather than just using them) sounds like an SPA to me", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 01:15:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959957990567829504", "body": "@aaron1sme Not currently but maybe in a few years", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 01:13:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959957057905577985", "body": "@JeremyMorrell That\u2019s fair. I tend to think of Messenger as very specialized (eg always same layout, almost no internal navigation). I think SPA become harder once you have to think about routing, transitions etc.", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 01:09:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959940143946911744", "body": "@Annie_Khaliq You\u2019ve got the stamina! \ud83d\ude42", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 00:02:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959939936198807553", "body": "@domcsummers You can actually open React DevTools and see what exactly is built with React.", "favoritedCount": 26, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 00:01:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959939837087420417", "body": "@domcsummers Some interactive parts of UI are in React. For example Like/Comment/Share, or Messenger tabs. But it\u2019s not a pure SPA, there\u2019s plenty server-rendered (XHP, Hack) stuff on every page.", "favoritedCount": 26, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Feb 04 00:01:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959938945424470016", "body": "Quite a bit of criticism directed towards React (in terms of learning curve or complexity) basically says \u201cbuilding SPAs is hard\u201d and yes, it is!", "favoritedCount": 124, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 23:57:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959938108627308545", "body": "@aaronplanell Redux isn\u2019t but building SPAs is. I think his argument is mostly against SPAs.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 23:54:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959937509756211202", "body": "It\u2019s interesting that React became associated so much with SPAs but Facebook isn\u2019t using it for SPAs (except for the Instagram website and some internal tools)", "favoritedCount": 396, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 23:51:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959937139910856704", "body": "@aaronplanell He was quite positive \ud83d\ude42 basically \u201cif you think this is too much, here\u2019s our simpler take on that problem\u201d", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 23:50:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959923447651557376", "body": "@jimcalliu https://t.co/BV8rjCbeZt", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 22:55:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959922886126555136", "body": "@acdlite @ryanflorence @sophiebits I heard React is a horse", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 22:53:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959919772187193344", "body": "DHH could be like \u201cRedux sucks ass\u201d and I\u2019d be like \u201cyeah man thanks for the recognition\u201d", "favoritedCount": 157, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 22:41:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959919521317441536", "body": "Which is kinda silly but it never really goes away, at least for me", "favoritedCount": 33, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 22:40:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959919034883026944", "body": "Read the DHH article and all I can think is: omg DHH name-dropped my library", "favoritedCount": 103, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 22:38:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959916093786808322", "body": "Addendum: the \u201cno breaking changes\u201d guarantee is only for the official public API. unstable_* things can break.", "favoritedCount": 19, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 22:26:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959915840534663168", "body": "@CollierAdam Built with Gatsby. Website is open source, check GH repo", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 22:25:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959914725613232129", "body": "@ozkxr Sorry, not following either. Maybe @martinkonicek knows?", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 22:21:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959914402056204291", "body": "RT @acdlite: Like it\u2019s 2018 and rendering giant lists quickly, managing animations between states, and lazy loading without a fractal casca\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 22:20:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959901744208728064", "body": "RT @ChappellTracker: this is so dumb and I love it\nhttps://t.co/nykmGAWPU1", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 21:29:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959898850067730441", "body": "@nikgraf @acdlite For sure, we can\u2019t just remove some API in the middle of a major release; that would be a breaking change. We can only do breaking changes in major releases.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 21:18:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959855128466657281", "body": "@nikgraf @acdlite What PropTypes deprecation? We only moved it from React object to another package. There was no deprecation of PropTypes themselves.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 18:24:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959851457968209920", "body": "Apparently a link to a Reddit comment open the whole megathread on an iPhone with no indication of the specific comment. Why \ud83d\ude44", "favoritedCount": 15, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 18:09:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959848061282541569", "body": "@samccone Thank you! Everyone is very supportive although lately I\u2019ve needed to put more focus in other things. Luckily we have a community of great contributors \ud83d\ude42", "favoritedCount": 18, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 17:56:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959840728234053634", "body": "RT @dan_abramov: Huge thanks to @brian_d_vaughn for answering these questions on a Saturday morning \u2764\ufe0f\nBut please, give us time to explain\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 17:27:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959839070544330760", "body": "@mrkswllms https://t.co/geI3OYrFC1", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 17:20:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959838990957469702", "body": "Huge thanks to @brian_d_vaughn for answering these questions on a Saturday morning \u2764\ufe0f\nBut please, give us time to explain them before the panic. Of course we won\u2019t break any components in a minor release. https://t.co/G30Ug496w6", "favoritedCount": 60, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 17:20:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959838089882619905", "body": "Sharing RFCs, which we started doing recently, is a great way to get community feedback. But it also makes it very hard to clarify the messaging around changes. Please follow posts on our blog for official communication.", "favoritedCount": 22, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 17:16:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959836888503914497", "body": "We do introduce warnings in minor versions. 16.3.0 doesn\u2019t even have that. It\u2019s a release intended for library authors. Please wait for the blog post before rushing to conclusions.", "favoritedCount": 36, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 17:12:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959836249568829442", "body": "There will be NO breaking changes in React 16.3.0 (or anywhere in the 16.x release cycle). React respects semver (and always has). Don\u2019t panic \ud83d\ude42", "favoritedCount": 557, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 17:09:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959814580427022336", "body": "@supreetpal The inconsistency is most annoying, it really depends on where you\u2019re applying and which is the \u201cmain\u201d country", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 15:43:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959807165174374400", "body": "@chrisheninger Try removing withStyles? Maybe it forces a re-render accidentally somehow", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 15:13:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959802975119138817", "body": "Good news for @apollographql users, .graphql file imports will be supported in 2.0 of Create React App (which are better for performance): https://t.co/z7xZVd0F5r", "favoritedCount": 509, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 14:57:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959780607004938241", "body": "Alternative timeline where Russian Interference is a cultural phenomenon like British Invasion", "favoritedCount": 80, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 13:28:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959779257059827713", "body": "RT @necolas: Making SVG icon libraries for React apps like Twitter Lite https://t.co/R9rVjV9x7e", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 13:23:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959778710038700032", "body": "@kddeisz Don\u2019t get too far ahead, we haven\u2019t even published 16.3 blog post yet \ud83d\ude42 For now the recommendation is componentDidMount. But there will be a more powerful new API coming down the line (maybe in 16.4).", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 13:20:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959578786185580545", "body": "RT @acdlite: @dan_abramov @acemarke @brian_d_vaughn Addendum: Strict mode only warns about a subset of problems. The biggest thing we can't\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Feb 03 00:06:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959569592468361216", "body": "@acemarke @brian_d_vaughn \"Will be putting together some better docs along with the blog post over the next few days\" is probably the best we have right now \ud83d\ude42 But the general idea is that if you don't see any warnings in strict mode, you're ready to switch to async mode.", "favoritedCount": 19, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 23:29:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959569376046444546", "body": "@ryanbas21 @prshntagrwl It's not async in more cases.. yet. But it will be.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 23:29:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959569333503582209", "body": "@ryanbas21 @prshntagrwl Because it is flushed at the end of the event handler. It would be wasteful to synchronously setState() ten times if ten components call it during a single browser event.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 23:28:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959562373781704704", "body": "RT @brian_d_vaughn: Note that some of the strict-mode warnings just point to the async RFC at the moment. Will be putting together some bet\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 23:01:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959562358032039944", "body": "RT @brian_d_vaughn: @reactjs 16.3 alpha just published to NPM. If you'd like an early look: yarn add react@next react-dom@next\n\n@reactjs De\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 23:01:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959557687158689792", "body": "@prshntagrwl Yeah. In the future it will be always asynchronous (unless you opt into it being sync for rare corner cases).", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 22:42:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959533746608332801", "body": "RT @necolas: Redux modules and code-splitting, as done in Twitter Lite https://t.co/pG1g1mf7cC", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 21:07:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959533647899611136", "body": "Don\u2019t say \u201cthat\u2019s a wrap\u201d, you\u2019re making me hungry", "favoritedCount": 86, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 21:07:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959526665645887489", "body": "@sami_ghazouane I can\u2019t even vote where I live, not sure what else I can do but tweet", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 20:39:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959508016033878017", "body": "@prshntagrwl Note that React 16 is smarter and will detect this error even though you have \"swallowed\" it in your code: https://t.co/kAkp2RDI6r https://t.co/I18RKSgSfV", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 19:25:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959507572951797761", "body": "@prshntagrwl setState() is currently synchronous if you're not inside an event handler. So your component's render() is somewhere below it in the stack. Therefore an error in render propagates up to your catch handler.", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 19:23:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959496343059337217", "body": "@HenrikJoreteg I\u2019m not serious. \ud83d\ude42 I understand a lot of people are frustrated by wiring things up and empathize with that.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 18:38:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959496172992974848", "body": "@rigobauer @kentcdodds If it often gets re-rendered with the same values, yeah it can help.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 18:38:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959495284039483394", "body": "@HenrikJoreteg Whatever you prefer, there\u2019s something to hate in Redux for everyone! \ud83d\ude42", "favoritedCount": 41, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 18:34:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959495087523880961", "body": "@HenrikJoreteg Except people who don\u2019t use them, who complain about reducers not doing anything because of a typo in action name instead", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 18:33:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959494910209650690", "body": "@HenrikJoreteg Not sure it\u2019s unpopular, everybody keeps mentioning how much they hate constants almost every time Redux boilerplate is discussed", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 18:33:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959471583772467200", "body": "@roshangautam0 Something like that, yeah. But also it takes me a few hours every day the week before that just to collect all the forms and documentation. It\u2019s so annoying.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 17:00:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959469991568576514", "body": "@oleg008 @mxstbr @xander76 SSR is currently working forwards-only, you can\u2019t rerender something", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 16:54:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959469000509087744", "body": "The food I order is mostly healthy. You are obliged to let me in on those grounds", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 16:50:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959468493149229057", "body": "@betolink Agree. I\u2019m lucky I already have one, and getting new ones is easier because they \u201cknow\u201d me and give longer visas. Whereas every Schengen state treats me like I\u2019m applying for the first time.", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 16:48:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959466768904474624", "body": "Truly hoping somebody reads those 30 pages of deliveroo orders I have to produce every damn time", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 16:41:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959466433351704576", "body": "Every time I agree to speak somewhere in EU I forget how much hassle it is to get a Schengen visa. \ud83d\ude22", "favoritedCount": 70, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 16:39:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959457894180773889", "body": "The outro is the sound of tower cranes making out", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 16:06:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959455503922466816", "body": "I\u2019m developing an ear crush on @jackantonoff", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 15:56:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959446109058928641", "body": "@kentcdodds @acdlite I think 16.3.0 is likely to come out next week, with a blog post.", "favoritedCount": 32, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 15:19:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959440437680463872", "body": "RT @left_pad: Happy to announce that we'll be participating in @RailsGirlsSoC again for @babeljs \ud83c\udf89! Please share! Project link: https://t.c\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 14:56:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959439495811780609", "body": "@criveroib I have this one https://t.co/oZrsa4ATPU", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 14:52:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959435566160011264", "body": "The way Hard Feelings goes from chorus (1:53) and then develops into the outro (2:25 and on) is beautiful and haunting. I hope radio pop doesn\u2019t run this sound into the ground. https://t.co/FjK01JIHQy", "favoritedCount": 63, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 14:37:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959430609591586816", "body": "@TheDickWard @Genius I\u2019m glad they found a way to preserve the artistic mystery", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 14:17:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959429766918139904", "body": "Thanks for the tip @Genius, I was getting worried it\u2019s about manufacturing explosives https://t.co/MEF4utAY8Z", "favoritedCount": 53, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 14:14:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959428814504853504", "body": "@montogeek Because we ask you to use className for consistency with existing ecosystem. Component authors don\u2019t need to support two props etc. Might change it at some point in the future.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 14:10:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959427589935951872", "body": "@mxstbr @xander76 It means you want to cache &lt;Header&gt; and not the whole &lt;Frontend&gt;", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 14:05:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959427143385174016", "body": "@justinfagnani @treshugart So your argument sounds to me like plain objects (which are already sufficient for data keeping) should be replaced with a kitchensink of DOM methods because those plain objects relate to things on screen and thus \u201cneed\u201d to be DOM. Sorry if I misunderstand.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 14:03:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959426585832108032", "body": "@justinfagnani @treshugart Would it help to clarify that React.Component is almost an empty class? It\u2019s not a \u201cReact engine\u201d you inherit. It\u2019s basically a shim. Maybe it would be clearer if we pretend React component instances are just plain objects. React sets some fields on them and calls some methods.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 14:01:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959426585832108032", "body": "@justinfagnani @treshugart Would it help to clarify that React.Component is almost an empty class? It\u2019s not a \u201cReact engine\u201d you inherit. It\u2019s basically a shim. Maybe it would be clearer if we pretend React component instances are just plain objects. React sets some fields on them and calls some methods.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 14:01:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959425711110008833", "body": "@justinfagnani @treshugart It would also encourage direct DOM manipulation (\u201cthis\u201d is a DOM node!) everywhere which both breaks React model and makes certain things (concurrent updates) infeasible.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 13:58:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959423853985492993", "body": "@justinfagnani @treshugart This is easier to understand, thanks. Downsides: extra cost for every component, impossible to \u201cfold\u201d or \u201cinline\u201d trees at the build time, harder SSR, no RN support.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 13:50:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959421369489481729", "body": "@justinfagnani @treshugart That wouldn\u2019t replace React component internal implementation though (which is what I think https://t.co/dOIn7r9WsT is asking for?) Just adds an extra WC layer to the output.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 13:40:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959420803061305345", "body": "@mxstbr @xander76 There\u2019s an RFC for caching intermediate trees. Sorry if you meant something else", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 13:38:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959419836647530497", "body": "@justinfagnani Sure. My point is that people inspired by WCs often tell us \u201cI wish React replaced components with WCs\u201d without understanding that declarative layer *is* what React provides", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 13:34:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959419374179319808", "body": "@mxstbr @xander76 Btw if you have ideas post RFCs. I believe there is one about caching", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 13:32:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959409874437320704", "body": "@elijahmanor Yes that sounds right. No, I don\u2019t know. It used to work with npm 4 but npm 5 is more strict. Both sides could fix it potentially. Yarn issue: https://t.co/vHKtoQxoYS", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 12:55:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959408268702601216", "body": "@RubenOostinga @csuwildcat @justinfagnani I explained what I mean here, let me know if that helps.  https://t.co/uFyj0v9Sjf", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 12:48:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959407613577453569", "body": "@justinfagnani My point isn\u2019t that WCs can\u2019t be used in a declarative way. They can! Just like divs. But they\u2019re not underlying primitive in React for the same reason divs are not the underlying primitive in React. For some reason this is hard to explain to WC proponents.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 12:46:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959407326322098178", "body": "@justinfagnani The primary interface to WCs (either document.createElement or HTML) always instantiates it. So you don\u2019t get these things. Now, you *could* add a declarative React-like layer on top. But at that point we\u2019re back to React-like land.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 12:45:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959407030011420672", "body": "@justinfagnani The primary interface to React components is React.createElement(). That element isn\u2019t \u201creal\u201d, so it\u2019s cheap and can be reconciled against the current copy. This enables all sorts of APIs (render props, virtual scrolling, concurrent updates).", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 12:43:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959406588464418816", "body": "@inoyakaigor \u0422\u0430\u043c \u0432\u0440\u043e\u0434\u0435 \u0431\u044b\u043b\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0430\u0442\u0440\u043e\u043d\u0443\u043b\u043e React Native \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u044b \u043d\u0435 \u0432\u044b\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u043b\u0438", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 12:42:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959399385384833026", "body": "RT @elijahmanor: \ud83c\udd95 Blog Post - Getting Started with Create React App\n\n\u270f\ufe0f In order to support multiple learning styles, I blogged supporting\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 12:13:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959399363788361728", "body": "@elijahmanor One minor thing I noticed: your screenshot says \u201cyarn\u201d so you have yarn installed. In this case you should be careful to only use \u201cyarn add\u201d (not \u201cnpm install\u201d) in the future. Otherwise npm deletes everything. (Known issue with yarn)", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 12:13:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959396990420439045", "body": "@RubenOostinga Yes, there is an RFC for that.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 12:04:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959396834547585024", "body": "@BedeOverend @kentcdodds So yes, maybe some component authors want that and can do that, but I disagree that it is a good default for React component authors. They choose React for expressiveness of the API in the first place. Giving it up is a bummer.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 12:03:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959396622798073856", "body": "@BedeOverend It doesn\u2019t make sense for all components because API is strictly less expressive. How can you implement something like @kentcdodds\u2019s Downshift as a WC? There\u2019s nothing like \u201crender props\u201d without bringing a React or similar.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 12:02:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959227036136099843", "body": "@maxlynch Can you comment on RFC if something\u2019s missing in it?", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 00:48:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959226028127375360", "body": "RT @workboxjs: \ud83c\udf89 Workbox V3 has hit beta \ud83c\udf89\n\nGive it a try and let us know if you hit any \ud83d\udc1b \n\nhttps://t.co/vg0uJ5KqfK\n\nLots of \u2764\ufe0f to all the\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 00:44:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959225731019694080", "body": "@TommyTessler Don\u2019t use Redux if it\u2019s painful (React doesn\u2019t force you to). Not sure I understand how this relates to WCs", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 00:43:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959223022447157248", "body": "@maxlynch React already can use WCs although it currently only uses attributes. We plan to improve this: https://t.co/CiyAvMNgFD", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 00:32:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959221891247505408", "body": "@lastmjs @intcreator @reactjs This kind of stuff is possible because of declarative API at the primitive level and restrictions on mutation. I don\u2019t see how you can do this with a mutative do-anything common denominator imperative API.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 00:28:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959221507871428609", "body": "@lastmjs @intcreator @reactjs Separate high priority and low priority updates where lo pri updates are split over idle callbacks but don\u2019t flush to the screen until ready. And hi pri update can interrupt a lo pri and get flushed first. Then lo pri is \u201crebased\u201d.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 00:26:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959221152693604352", "body": "@lastmjs @intcreator @reactjs The big one we\u2019re working now is async rendering and especially concurrent updates. Imagine new tree being rendered \u201cin background\u201d (possibly with data fetching) while old one stays in place and interactive, with no manual coordination.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 00:25:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959218181838688256", "body": "@treshugart @Arjyparjy @marcfawzi @lastmjs I dunno but maybe this helps https://t.co/o3H3qpgkMz", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 00:13:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959217652341198850", "body": "@nickbreaton If you\u2019re a big enterprise with products built by teams that can never agree with each other, I can see why people want an interop layer even at the cost like this. If they have many such isolated facades they could even assume React to be a global and available.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 00:11:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959216628746551296", "body": "Should web components be *the* format to distribute React components? I disagree. People who prefer them for these reasons can already wrap. But people who write React apps *want to* use an expressive model for their whole app and not just the datepicker.", "favoritedCount": 70, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 00:07:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959216203985285125", "body": "The implementation is 200 lines of code. If you remove some flexibility can be even shorter: https://t.co/y5qkBSrKWq. So this seems like a solved problem. Perhaps it can be solved by better documentation?", "favoritedCount": 43, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 00:05:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959215799318777856", "body": "So what about (1)? React components are just things you can render into the DOM. There\u2019s no need for React to \u201coutput\u201d web components. It can be done entirely in userland. Took me a minute to find: https://t.co/zqChC0s86j", "favoritedCount": 23, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Feb 02 00:04:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959214760389677056", "body": "For us, WCs don\u2019t work as the basic building block (2) because they are imperative and thus less expressive/flexible as a component model. If you want flexibility you end up building a system on top anyway.", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 23:59:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959214174235709442", "body": "It took me so long to realize this. But now it makes sense why so many arguments get completely off the rails. WC proponents tend to mean (1) but React users hear (2) because React components consist of... components!", "favoritedCount": 33, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 23:57:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959213898464485376", "body": "When people say \u201creact should use web components\u201d they can mean two completely different things:\n\n1. A React datepicker from npm should be easy to *consume* as a WC (\u201cWC is the interop layer\u201d)\n\n2. It should *consist* of WCs at every level (\u201cWC is the smallest building block\u201d)", "favoritedCount": 189, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 23:56:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959174566642966534", "body": "@marcfawzi @lastmjs If you\u2019d like to spend some time on the proposal, here is where we collect and review them: https://t.co/ZoWIDk9bbr. We won\u2019t reply right away (too large backlog) but we\u2019ll definitely get to it in the future, and community can chime in too", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 21:20:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959174277634445312", "body": "@marcfawzi @lastmjs This is an easy way to dismiss someone\u2019s work. \u201cIt\u2019s just ego, they don\u2019t know what they\u2019re talking about\u201d I\u2019d love React to embrace WC as primitive if they solved our problems but they don\u2019t. Happy to elaborate if you post a specific proposal for how WCs should be used by React.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 21:19:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959172941895348224", "body": "@lastmjs @intcreator @reactjs I don\u2019t think this assessment is true. There are useful features in React component model (both existing and upcoming) that are impossible to express were WCs the underlying primitive.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 21:13:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959172262028103680", "body": "@radicalrafi @TarasNovak Anything in particular you\u2019re fighting with?", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 21:11:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959170808454270976", "body": "RT @svinkle: I'm giving my React #a11y talk at the next #a11yTalks webinar! Check it out if you're building sweet @reactjs apps! \ud83d\ude04\u269b\ufe0f\ud83d\udcfa https\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 21:05:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959169535713660928", "body": "@rickhanlonii @joshlacey @mjackson Note my screenshot isn\u2019t the same pattern as render props", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 21:00:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959079143324487681", "body": "RT @jxnblk: Had a really great discussion on this, and thanks for helping me land on an API that better distinguishes how macro-components\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 15:01:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959051485593120768", "body": "@joaolucasluc I agree! I\u2019m sorry the snark came through.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 13:11:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959050211380342784", "body": "@joaolucasluc For example Sass downloading a binary of itself prevents projects from being compatible with offline mirrors. Do people adopting Sass know they\u2019ll bump into this? Usually not.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 13:06:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959049693643902977", "body": "@joaolucasluc Totes, I don\u2019t mean to be dismissive towards hard work that goes into them. Although I wish that people who adopt it understood the tradeoff better because it almost never comes up in discussions about styling choices.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 13:03:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "959017968750428160", "body": "RT @JoshWComeau: \ud83c\udd95 Introducing React Retro Hit Counter \ud83c\udf89\n\nI miss the 90s web. Guestbook, web-rings, \"Under Construction\" clipart. And, of c\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 10:57:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958882884235952128", "body": "@jxnblk @mxstbr This is turning into a very interesting discussion! Thanks for keeping up with my trolling.", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 02:01:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958858728492748800", "body": "@SilvestriCodes I think the folder size can be annoying if you work on *a lot* of projects at the same and have to context switch (so you can't just delete node_modules for stale projects). But I feel like that discussion always neglects the benefits of this approach.", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 00:25:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958857325078564864", "body": "Everybody likes complaining about node_modules size. What I complain about: I clone any JS project and unless it has weird binary deps (hi Sass), it runs on any computer with Node, doesn\u2019t bug out with obscure linker errors, works the same way. Oh wait that actually sounds good", "favoritedCount": 2350, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Feb 01 00:19:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958851561303760897", "body": "To add some context: this is a community project (not maintained by FB) but it powered by the Fiber reconciler so it should support error boundaries, fragments, etc. https://t.co/hm1zkC0Bt7", "favoritedCount": 32, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 23:56:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958851096834797568", "body": "RT @kennetpostigo: @monasticpanic Just to be a little bit clearer, it's 48.7kb min and 15.2kb min+gzip.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 23:54:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958851042921218049", "body": "RT @monasticpanic: We just released an early version of react-dom-lite, please try it out, warning here be dragons! https://t.co/lXPaYdXrPe", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 23:54:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958758730862034944", "body": "@sarahmei Tangential: an interesting example of bad code is the one that looks good and produces very few WTFs but is subtly (but fundamentally) broken because of wrong assumptions or architecture", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 17:47:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958756625510170625", "body": "@michaelbenin @reactjs Custom element support in React isn\u2019t very useful right now. It just treats everything as an attribute (since we can\u2019t make assumptions that it behaves like a regular DOM element). There are plans to introduce more control over that: https://t.co/CiyAvMNgFD", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 17:39:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958756112945303553", "body": "@kbarasab I agree it\u2019s a tradeoff. I\u2019m not on board with the implicit approach though. See an explanation here: https://t.co/ixKRPxyQyQ", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 17:37:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958752591931985925", "body": "@montogeek A blessed what? Config? We offer `eslint-config-react-app` which is pretty unopinionated and blessed in a way.", "favoritedCount": 41, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 17:23:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958752428148580352", "body": "It\u2019s cool if you decide to err on the side of caution and explicitly whitelist cases in which it\u2019s intentional. But you should be aware that those usually exist. Otherwise the API wouldn\u2019t let you do this in the first place.", "favoritedCount": 16, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 17:22:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958752114880274432", "body": "Here\u2019s an example: https://t.co/DuIHPtuvxn. Does calling `setState` from `componentDidUpdate` lead to an extra re-render and ideally should be avoided? Yes. But are there legit use cases too? Yes! (e.g. measuring a DOM element for tooltips)", "favoritedCount": 43, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 17:21:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958751754568560640", "body": "PSA: it\u2019s a bad idea to install eslint-plugin-react and then blindly enable all the rules. Many are overly restrictive and don\u2019t represent what React team recommends. It\u2019s fine if you want to enforce some but please don't treat them _all_ as \u201cblessed\u201d.", "favoritedCount": 263, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 17:20:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958747324020396032", "body": "@jxnblk @mxstbr Commented on a bigger concern than implicitness: very tight coupling https://t.co/ixKRPxyQyQ", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 17:02:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958730015532777473", "body": "@jxnblk @mxstbr Sent a README PR :-) https://t.co/vxWQe06V9w", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 15:53:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958728081287589889", "body": "Did you know you can pass React children as any prop, not just \"children\"? Handy for expressing multiple \"slots\", e.g. a sidebar or some other layout. https://t.co/vIffXc3CJE", "favoritedCount": 413, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 15:46:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958727688495288320", "body": "@jxnblk @mxstbr I think some people might be confused thinking you can\u2019t do something like this without a library. Here\u2019s a pure React version of this pattern that doesn\u2019t suffer from those gotchas. Just use props: https://t.co/ANSDX875xY", "favoritedCount": 134, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 15:44:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958725125117005825", "body": "@jxnblk @mxstbr Filed an issue: https://t.co/PGG0Db77cz", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 15:34:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958724429017681921", "body": "@jxnblk @mxstbr Relying on .name sounds very brittle. It will be different after minification.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 15:31:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958683167262629894", "body": "@PanyaKor I think the other issues are just artifacts of people incorrectly updating their dependencies (and bundling two Reacts by mistake) and then thinking it\u2019s caused by the upgrade itself. Happy to be proven wrong though, but please file an issue with reproducing demo in React repo.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 12:47:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958682563635269632", "body": "@PanyaKor Sorry, missed your first link (https://t.co/6Y95yo8sAq). That issue is unrelated to React 16, and has always existed.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 12:45:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958682009244700672", "body": "@PanyaKor But in any case if you see an error that you think is caused by React, please file an issue with React. How else can we learn that it\u2019s affecting you? We don\u2019t track other repositories.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 12:42:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958681790410932227", "body": "@PanyaKor Most likely those problems were caused by accidentally including two different React packages in the bundle (which often happens when people upgrade versions). String refs are still fully supported.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 12:42:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958681350160068608", "body": "@PanyaKor File an issue _in React repo_ please with a reproducible example. Thank you!", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 12:40:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958667283055833089", "body": "@ws_ubi Cool", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 11:44:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958658387352477697", "body": "@PanyaKor String refs work fine in React 16. We have thousands of components relying on them. If something doesn\u2019t work file an issue please, don\u2019t assume it\u2019s supposed to be broken.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 11:09:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958656031143407616", "body": "(Callback refs would stay for more advanced use cases, but hopefully we can make the common case more convenient)", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 10:59:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958655808069361665", "body": "Callback refs are a bit too powerful and not always ergonomic. So we\u2019ll likely add something like this as a replacement to string refs: https://t.co/zHp1w70dqd", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 10:58:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958653457094922241", "body": "Also, please don\u2019t use string refs in new code. \ud83d\ude42", "favoritedCount": 23, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 10:49:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958652687704313856", "body": "Wrote a bit about why string refs cause weird issues with multiple React copies: https://t.co/RvaPXfJwkd", "favoritedCount": 35, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 10:46:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958652523941855232", "body": "RT @thejameskyle: Just published:\n\nGLOW: Take your boring @flowtype errors and make them awesome\n\n- Pretty-printed, code highlighted type e\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 10:45:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958499788080730112", "body": "@eldh @sgrove @jordwalke @reactjs @reasonml @jaredforsyth (As long as mutation is allowed)", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 00:38:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958499705360650241", "body": "@eldh @sgrove @jordwalke @reactjs @reasonml @jaredforsyth Note Fiber reconciler codebase intentionally is very conservative in its use of JS features. No dynamic dispatch, almost no first-class functions, even recursion is used once or twice. So in theory it should be doable to port to other languages very closely.", "favoritedCount": 21, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 00:38:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958491747276947458", "body": "@0xca0a @acdlite @ken_wheeler @tylermcginnis But I\u2019m excited for \"light-weight\" things building on top of the new context!", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 00:06:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958490075276480513", "body": "@0xca0a @acdlite @ken_wheeler @tylermcginnis In other words lots of people will get a wrong impression that decorators are *required* to use your library whereas they're just sugar", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 31 00:00:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958489667296550912", "body": "@0xca0a @acdlite @ken_wheeler @tylermcginnis I probably won't persuade you but it would be nice if the API examples didn't use unstable syntax (decorators) for which the only currently available implementation is legacy/outdated and doesn't match the latest spec", "favoritedCount": 19, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 30 23:58:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958378195052630016", "body": "Problem: I like to keep the desktop clean but I also like to put WIP files there for quick access. Solution: just make it a git folder and use branches.", "favoritedCount": 676, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 30 16:35:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958297054387851264", "body": "@aweary @acdlite @reactjs It\u2019s still there because service workers", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 30 11:13:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958146397899026432", "body": "When I grow up I want to be a blockchain personality", "favoritedCount": 169, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 30 01:14:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958145936529723392", "body": "https://t.co/pRXOy5R2Re", "favoritedCount": 28, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 30 01:12:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958140839317983237", "body": "RT @UXNoah: I got my ReactJS Team their own TV so we don\u2019t have have to arm-wrestle folks over conference rooms. \n\nKeepin\u2019 it agile baby!\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 30 00:52:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958140652369330176", "body": "@thejameskyle My mom, for some reason. Only realized when I spent a night at her place a few years after I moved out. Had to remove batteries from all five of them!", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 30 00:51:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958135828831789058", "body": "@SafeerMohiuddin Not unless you figure out a way to implement it :-) I think it's possible in principle but might need something on React side to work", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 30 00:32:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958127913597095936", "body": "@naholyr @erikras That might be it really. Not sure.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 30 00:01:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958127671208235009", "body": "@neilkod @captbaritone I think Atom does too much for my taste. Sublime nailed the few things I care about: text editing, switching between files, search. 90% of the time I don\u2019t need other features, and they distract me in other envs.", "favoritedCount": 22, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 30 00:00:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958125758026788864", "body": "@eldh @reactjs @reasonml Why?", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 23:52:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958118480590639105", "body": "@Tyriar @auchenberg @code The whole point of Flow is incremental adoption in existing codebases. Requiring a different extension is pragmatically the wrong choice given project goals and focus.", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 23:23:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958117853139492864", "body": "RT @captainsafia: Hello!\n\nI\u2019m still looking for my first full-time, post-grad engineering gig.\n\nI\u2019m looking for SE roles in Chicago/remote\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 23:21:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958101198728507392", "body": "@auchenberg @code If I recall correctly I did install the Flow extension but that didn\u2019t help. Maybe I did something wrong. Will check tomorrow.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 22:15:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958094132018376706", "body": "@auchenberg @code The first super annoying thing I bumped into is that Code highlights half of the codebase with red wiggly lines because it happens to use Flow. The message is something like \u201ctypes are only valid in TS files\u201d which is a bit funny \ud83d\ude42", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 21:46:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958087679480074241", "body": "@macsikora https://t.co/7RfdGc9aUP", "favoritedCount": 31, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 21:21:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958087308120674304", "body": "@macsikora https://t.co/mklK7zdBPz", "favoritedCount": 65, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 21:19:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958085607191965697", "body": "@erikras @jonlprd That was the joke! \ud83d\ude08", "favoritedCount": 35, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 21:13:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958085234872016896", "body": "@dzannotti Nuclide (our set of atom addons) is integrated with our development server infrastructure", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 21:11:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958085088176164869", "body": "@erikras I can\u2019t explain really. It\u2019s pretty subtle and I\u2019d have to hunt those details down. Maybe I will if it starts dying", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 21:11:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958084897196904449", "body": "@erikras @piq9117 @AdamRackis Yea Nuclide it is", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 21:10:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958084782294003712", "body": "@malectro @jonlprd https://t.co/RfZ7Q8pwGb", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 21:09:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958084715692601346", "body": "@pauldotknopf @jonlprd Sorry, that was a silly pun. I don\u2019t actually know how to use it (or feel compelled to learn)", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 21:09:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958073040335704065", "body": "@jonlprd I quit it", "favoritedCount": 114, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 20:23:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958072443264012289", "body": "I use three editors now. Atom because it works great with FB internal tooling, Code because it has a working Node debugger, and Sublime because it has a nice editor. oh no \ud83d\ude44 https://t.co/ifOGfO6uq5", "favoritedCount": 1307, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 20:20:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958071109718630401", "body": "@Fichtelmax @ORG Same exact problem", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 20:15:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "958070783473045504", "body": "I hope that with the new context API less people will use Redux because they need a global subscription mechanism, and more because they actually need Redux.", "favoritedCount": 677, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 20:14:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957976892895842304", "body": "RT @ReactFest: We have completed our list of speakers for #ReactFest, and we can't wait for you to join us! \ud83c\udfa1\ud83c\udf89\ud83c\udfa1 \n\nGet your standard/worksho\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 14:01:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957966598459084802", "body": "@mxstbr @siddharthkp I really liked that. \u00af\\_(\u30c4)_/\u00af", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 13:20:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957948543783882752", "body": "RT @JoshWComeau: \ud83d\udce2 Khan Academy is hiring! \ud83d\udce2\n\nWanna work at KA? We have a bunch of open eng positions, front-end (react, redux, apollo) and\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 12:08:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957944960665489409", "body": "Mood https://t.co/GJqjrWcAsG", "favoritedCount": 40, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 11:54:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957938752441212928", "body": "RT @mxstbr: This graph alone makes my day! \ud83d\ude0d\n\nDo note that this is from a benchmark intended to stress test the library, your app will like\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 11:29:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957929316016369665", "body": "@markdalgleish @JedWatson @flowtype @reactjs To be fair even if React shipped its own definitions they\u2019d still be impossible to express without JSX/component support in Flow. So at that point we might as well let Flow maintain the whole thing.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 10:52:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957928006277849088", "body": "Tip: it is much better to explicitly write down your import paths if you can. Ten lines of imports is not \u201cduplication\u201d you need to \u201cdry up\u201d, it\u2019s your dependency tree you want to be in control of.", "favoritedCount": 219, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 10:46:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957927696570441728", "body": "Since dynamic import proposal, starting to see code like\n\n    import(someString).then(...)\n\nmore often \ud83d\ude10. I think many don\u2019t realize it forces webpack to create bundles for the whole world \u201cjust in case\u201d.", "favoritedCount": 229, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 10:45:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957927042275831808", "body": "RT @mxstbr: styled-components@3.1.0 is out with a massive performance boost and streaming server-side rendering support!! \ud83c\udf89\ud83c\udf89\ud83c\udf89\n\nHuge shout o\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 10:42:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957926990744641537", "body": "@JedWatson @flowtype @reactjs Note React doesn\u2019t actually do that; it\u2019s built into Flow \ud83d\ude10", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 10:42:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957767487222935553", "body": "Interesting power user feature of the new context API: ability to skip updates using a bitmask. https://t.co/TQv5xh91L8", "favoritedCount": 206, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 29 00:08:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957625488607993856", "body": "RT @alexeyraspopov: It turns out, using @fbjest with @SeleniumHQ WebDriver is almost a trivial thing. Just did a couple of small packages t\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 28 14:44:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957598215880265728", "body": "@mxstbr @trueadm https://t.co/k48NWPNLf3 has some examples and a brief explanation", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 28 12:56:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957593371744317442", "body": "@andreypopp @sophiebits I don\u2019t think so.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 28 12:37:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957592655151714304", "body": "RT @rauschma: ECMAScript 2018: the final feature set\nhttps://t.co/6Bla8h7lRI", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 28 12:34:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957437669994360832", "body": "Theory: Mike + Eleven = Sam Weir", "favoritedCount": 19, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 28 02:18:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957429884359409666", "body": "Who is Frank Zappa of electronic music?", "favoritedCount": 46, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 28 01:47:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957429425775181824", "body": "RT @aweary: I found the root cause of all the bugs in @reactjs https://t.co/u5eTYGjwvZ", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 28 01:45:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957429107524096000", "body": "@sebmck Easy support for monorepos and linking without subtle gotchas and having to configure every tool", "favoritedCount": 54, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 28 01:44:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957428768859131905", "body": "RT @sebmck: Users of JS source tooling (type checkers, linters, compilers, bundles), what do you dislike about existing solutions? Any feat\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 28 01:43:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957383878557216768", "body": "@youyuxi I think that particular argument is more about whether you can apply the same knowledge throughout your career rather than with a specific library (see your point though!)", "favoritedCount": 15, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 27 22:44:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957357133334499331", "body": "@jdylanstewart @Kamuela @sebmarkbage It\u2019s also a bit broader than that. See last quarter of my post https://t.co/OHAETomGAe", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 27 20:58:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957356281500663808", "body": "RT @morajabi: React \"Error Boundaries\" in an Electron app for a good UX, I love them  \ud83d\udc95 https://t.co/MQrkpp7SqK", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 27 20:54:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957313343001366533", "body": "@Rich_Harris Nice work", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 27 18:04:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957245170600349696", "body": "To all the people who said I\u2019d remember school days as the best days of my life, I\u2019m happy to confirm you were wrong. School fucking sucked, eating pizza in bed with my wife while watching Netflix at 1pm fucking rocks.", "favoritedCount": 4207, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 27 13:33:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957238305728483329", "body": "@liadyosef @greweb @acdlite You use it in the parent component and pass it as a prop to the child. Then child van access it as a regular prop in any method.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 27 13:06:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957227585531990021", "body": "@liadyosef @greweb @acdlite New context API works for functions the same way as for other values.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 27 12:23:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957226999822671872", "body": "RT @sebmarkbage: This week has been a big week for async React. I feel bad for how long it has taken to get to a deployable state. It\u2019s kin\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 27 12:21:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957041636114124801", "body": "@sophiebits Prepack needs somebody like @jlongster to spread awareness. Not necessarily as a ready-to-use product, but as fascinating tech you can try to understand and tweak.", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 27 00:04:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "957040955013689344", "body": "@sophiebits It\u2019s really hard to get into. Mostly because we don\u2019t think about code this way as we write it. But it\u2019s fascinating once you spend some time there, and I wish this work had as much visibility as the random stuff we do in React repo \ud83d\ude42", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 27 00:01:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956988700654821377", "body": "This PR is underrated https://t.co/5PJnKl2zlJ", "favoritedCount": 80, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 26 20:34:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956902891394134016", "body": "@alexbeletsky @cangoektas @cpojer Nice! Note there are many non-trivial UX aspects to how snapshot testing works (e.g. when to prompt for snapshots to update, what to do with new/deleted files etc). The benefit of using Jest is all the integration work that went into this feature.", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 26 14:53:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956893541460074497", "body": "@marypcbuk lol today I learned \ud83d\ude02", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 26 14:16:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956887806470770688", "body": "@xananax https://t.co/6ljquz7P0s", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 26 13:53:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956887753345699840", "body": "@DomSch94 @thepanta82 I don\u2019t have a strong opinion about this either way, that\u2019s not the part that rubbed me wrong though", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 26 13:53:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956883387045896193", "body": "@xananax yeah", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 26 13:35:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956884605122109440", "body": "@thepanta82 The first part is kinda fun although the eccentric bits seemed much funnier to me five years ago. The second part just reads like parody to me.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 26 13:40:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956882162657226752", "body": "You know that feeling when you rewatch a movie you liked as a child, and then feel a bit embarrassed and disappointed? That\u2019s my feels about Yegge\u2019s new post \ud83d\ude10", "favoritedCount": 150, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 26 13:31:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956878870606737410", "body": "https://t.co/ljmuk0tQw2", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 26 13:17:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956876193235693568", "body": "RT @mountain_ghosts: oh hey sign up for my book https://t.co/OXkTExRSZQ where I'll tell you all about building https://t.co/e2gyH7dO7q", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 26 13:07:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956865127843815425", "body": "@mlazowik @JeroenDeDauw @t0m_fr What standard? TC39 intentionally leaves this open because there are different approaches to typing with different tradeoffs.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 26 12:23:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956692813814562816", "body": "@ken_wheeler If you know techniques to live through a bad trip, same ones help for panic attacks too. e.g. cover yourself with a blanket, drink water, think \u201cthis too shall pass\u201d", "favoritedCount": 22, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 26 00:58:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956691987532537856", "body": "@ken_wheeler I have them every time I drink coffee and forget to eat. Which is at most two times a year but that sucks so bad when it happens.", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 26 00:55:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956683125987430400", "body": "@acdlite f(context, shouldComponentUpdate) = oops", "favoritedCount": 14, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 26 00:20:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956675691424223233", "body": "@kentcdodds Yay, so many anti-patterns yet to be discovered!", "favoritedCount": 58, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 23:50:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956675200204107776", "body": "Could you put context into context? \ud83d\ude33", "favoritedCount": 22, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 23:48:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956674265104953344", "body": "With the new API, could component accept context (provider/consumer type pair) as a prop? Would that ever be useful? \ud83e\udd14", "favoritedCount": 49, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 23:44:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956673129228767238", "body": "RT @JedWatson: I just published a new alpha of react-select v2, check it out!\n\nhttps://t.co/ZdwcaXmWxB\n\nStill quite a bit of work to do bef\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 23:40:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956666744508215297", "body": "RT @acdlite: If you're anxious to play with the new context API, you can use React Broadcast as a polyfill! https://t.co/4tkiDFv6Ie", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 23:15:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956645678226247682", "body": "@necolas The webpage says it's closer to metal so..", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 21:51:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956644083593826306", "body": "@ws_ubi JS init time *is* a huge problem for FB though, trust me I\u2019m not making this up", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 21:44:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956643867809509381", "body": "@ws_ubi I don\u2019t think picking random anecdotes about things breaking in FB products is a great way to make a point in a technical conversation about library tradeoffs \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 21:44:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956642889567752196", "body": "RT @necolas: Do you want a high-performance app? Then it is *essential* that you measure performance timings in production for yourself, an\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 21:40:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956631167855448064", "body": "@ws_ubi There is still cost in setting up tracking and wrapping things. We are very sensitive to init time costs.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 20:53:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956630963160780800", "body": "@Sebastiancbvz @rauschma You already can use rest/spread with Babel if you\u2019d like", "favoritedCount": 28, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 20:52:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956623746072236033", "body": "RT @rwieruch: Exciting! The Road to learn React was translated into simplified Chinese \ud83c\udde8\ud83c\uddf3 \n\nAnd more translations are work in progress \ud83c\udf89\n\nh\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 20:24:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956620096272773122", "body": "RT @rauschma: Rest/spread for properties made it to stage 4 and will be part of ES2018!\nhttps://t.co/bjVKvMeyTq https://t.co/JTjV7bZ40R", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 20:09:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956610683172421636", "body": "@notphanan @sarah_edo Thanks! I think whether it\u2019s a dealbreaker depends on subjective tolerance to verbosity vs magic that tries to be helpful but doesn\u2019t always work. Different people are on different sides of that spectrum \ud83d\ude42", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 19:32:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956609653449863168", "body": "@roger_1591 I mean that just because something\u2019s on GitHub doesn\u2019t mean it should be on npm \ud83d\ude42 GitHub is work in progress", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 19:28:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956608616949338114", "body": "@roger_1591 Maybe the repo doesn\u2019t have the latest version published? We generally publish things when they\u2019re ready; no guarantee anything on GH is available yet.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 19:24:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956608451685371906", "body": "@sarah_edo @notphanan Sorry, my comment reads a bit troll-ish. I\u2019m genuinely interested in where the abstraction breaks down. (If it works perfectly in all cases that\u2019s cool too.) Not asking you to dig those cases if it\u2019s not something that\u2019s easy to describe though.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 19:23:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956607855775440896", "body": "@sarah_edo @notphanan Does it always work magically? Are there no edge cases?", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 19:21:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956607660291436546", "body": "@roger_1591 Maybe :-) You can check github history for that", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 19:20:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956605077439025155", "body": "@mattdesl @TatumCreative Decorators aren\u2019t even a stable feature, we don\u2019t encourage using them in Redux docs :-)", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 19:09:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956591292947017729", "body": "@ws_ubi One of the biggest strengths of React is it works with any JS objects without a fancy wrapper around them. I don\u2019t think giving this up is something we\u2019re interested in, especially considering the ecosystem can already do that.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 18:15:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956580773292904449", "body": "RT @sebmarkbage: Nice post from @zeithq about using asynchronous rendering for a new feature! Fair warning. We have plans on breaking the A\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 17:33:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956574075505315840", "body": "@sterahi Makes sense. Generally we don\u2019t recommend learning React and Webpack at the same time but totally get it if you prefer so \ud83d\ude42", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 17:06:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956573852162772992", "body": "@iloveagoodtweet If you have specific ideas: https://t.co/ZoWIDk9bbr", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 17:05:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956542625158451201", "body": "RT @dan_abramov: Wrote up some thoughts on why React doesn\u2019t update this.state synchronously. This is a common question, and I hope my answ\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 15:01:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956524884431134721", "body": "RT @IAmTrySound: Opened RFC for new React.createRef api based on @trueadm PR. Feedback welcome.\nhttps://t.co/eT2ExrXROt\n#reactjs", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 13:51:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956517606940438528", "body": "@webdif @acdlite Yeah maybe? As soon as React Redux migrates to this API.", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 13:22:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956510134582370304", "body": "@JedWatson @oleg008 So you\u2019re not pissed about lifecycle deprecations? \ud83d\ude1b", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 12:52:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956507719720226817", "body": "@anthonycook Yes! (We use those at FB heavily so even if the spec changes, we\u2019ll release a codemod)", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 12:43:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956500311803392005", "body": "@Breizheker @sagarganatra I\u2019m not saying the proposal is buggy or anything. I\u2019m saying it has already changed, and your code is written against a version of language that will never exist. Sure, it\u2019s probably codemoddable. But won\u2019t be in CRA until it\u2019s more stable.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 12:13:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956496560757661696", "body": "@hugoBessaa @acdlite Can you show a snippet of code? I don\u2019t understand what you mean by selecting, and why you can\u2019t do that.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 11:58:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956494687468171265", "body": "@hugoBessaa @acdlite I don\u2019t see the issue, maybe you can explain what specifically you\u2019re struggling with?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 11:51:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956492314309951489", "body": "@sterahi React shouldn\u2019t require any config \ud83d\ude42 Have you tried Create React App by any chance?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 11:41:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956491953314594816", "body": "@sagarganatra They\u2019re also not \u201cES7\u201d at all, they are a proposal and there\u2019s no guarantee of them being accepted into the language.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 11:40:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956491826382491648", "body": "@sagarganatra No, decorators are an unstable feature and the spec has already changed since the Babel implementation. IMO it is unwise to write new code relying on them until they solidify a bit.", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 11:39:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956491528683192327", "body": "@levensailor {/* this works */},", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 11:38:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956491229738553345", "body": "@anthonycook No difference except that class properties are still somewhat experimental", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 11:37:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956485712379072514", "body": "@hugoBessaa @acdlite Roughly the way as you did before? Not sure why this would change testing.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 11:15:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956483861122310144", "body": "RT @_philpl: If anyone has a large styled-components app (optimally w/ SSR) and would like to help me to test an insertRule (speedy mode) p\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 11:08:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956483793677938690", "body": "@greweb @acdlite I\u2019m curious if you considered using new renderer API for this instead of writing components?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 11:08:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956483194630656000", "body": "@greweb @acdlite Don\u2019t worry about nesting. We can tweak DevTools output.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 11:05:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956480429514809344", "body": "RT @Daajust: Still wondering why @reactjs chose to make `setState` async ( batch and wait for reconciliation before updating `this.state`)?\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 10:54:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956476262289170432", "body": "@greweb @acdlite The old way will go away, probably in 17. What does it do that the new one doesn\u2019t?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 10:38:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956475866392989696", "body": "RT @acdlite: The existing context API isn't going anywhere for now. We'll continue to support it until the next major release. If you're a\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 10:36:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956475680451190784", "body": "RT @acdlite: \u269b\ufe0f Just merged: a new context API! \u269b\ufe0f\n\n- Statically typeable\n- Propagates through shouldComponentUpdate-&gt;false\n- Future-proof:\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 10:35:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956349596854300672", "body": "@frontendingme @aweary Well I mean, even if I\u2019m only working on a feature locally, existing code often annoys me because I feel like it\u2019s cleaner than what I\u2019m writing. That\u2019s why I sometimes like deleting the parts I need to significantly alter instead of doing it in-place.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 02:14:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956347473156628480", "body": "@aweary I don\u2019t do this, get really irritated by old code hanging around. I actually prefer to delete more than I need so that I feel less anxious touching it. But! I often keep a separate clean checkout in another folder to compare to / copy from.", "favoritedCount": 59, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 02:06:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956346844862402560", "body": "@nat_ott_homer Thank you, to be honest this is the first time I feel like I actually understood this problem so I felt compelled to write about it", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 02:03:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956344938719039490", "body": "RT @Vjeux: I love the internet. What\u2019s the solution for prettier making the git history look bad? Just rewrite every single commit since cr\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 01:56:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956335643952640000", "body": "@NandoSang No, too much noise. I search for \u201creactjs i\u201d because they tend to be more personal.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 01:19:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956335643952640000", "body": "@NandoSang No, too much noise. I search for \u201creactjs i\u201d because they tend to be more personal.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 01:19:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956333725964529666", "body": "RT @kessir_: Is there anyone who knows both @reactjs  and @vuejs and actually prefers React?\nI would love to hear some reasons.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 01:11:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956322349204189185", "body": "@fhibli ActivityList that is", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 00:26:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956322301284356096", "body": "@fhibli I'd go for List", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 25 00:26:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956292689531678724", "body": "RT @yarnpkg: Just found this great podcast episode where @kaylie_alexa talks about how she started contributing to @yarnpkg and built selec\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 24 22:28:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956292576100999173", "body": "@traviscline I don\u2019t think so. Probably just not explicitly called out in the README? @sebmarkbage", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 24 22:28:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956281080822358016", "body": "RT @type__error: Now in blog post form: https://t.co/roIHVwzvBb\nThanks all contributors!", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 24 21:42:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956246725425057792", "body": "RT @ThePracticalDev: webpack 4 tutorial: All You Need to Know from 0 Conf to Production Mode\n\n\"The webpack team is working hard on the next\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 24 19:26:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956237834180055040", "body": "RT @TheLarkInn: I just published \u201c\ud83d\udcd3 webpack 2017: A Year in Review \ud83d\udcd3\u201d https://t.co/hlgswsUx8A", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 24 18:50:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956217524634472448", "body": "@joemcasta Me too really. I don\u2019t think I understood the issue well enough before I wrote this.", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 24 17:29:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956208683737862152", "body": "Wrote up some thoughts on why React doesn\u2019t update this.state synchronously. This is a common question, and I hope my answer sheds some light on it! https://t.co/9VMegQX7zs", "favoritedCount": 1034, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 24 16:54:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956181860375322626", "body": "@corderophi678 Just the phrasing. It\u2019s nothing compared to what I hear is happening at TC39 meeting though!", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 24 15:08:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956180994591285249", "body": "Fantasized about writing \u201cthat needn\u2019t be the case\u201d in response to an RFC comment and then I hated my pompous ass", "favoritedCount": 101, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 24 15:04:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "956177995718430721", "body": "Yes https://t.co/HFqDKuf10r", "favoritedCount": 29, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 24 14:52:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955990610879680512", "body": "@sophiebits @fbOpenSource React Native moved to Circle so it doesn't block Travis for so long now :-) Also we have AppVeyor as a fallback", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 24 02:28:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955973907932237825", "body": "@brian_d_vaughn I was thinking of #fragments on links but I guess you can't preserve fragment across a redirect. Maybe a page with a TOC in the beginning would work well. Just want to make it clear users can jump in the middle to lifecycle they need, and not read a wall of text.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 24 01:21:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955973103003172864", "body": "@SavePointSam CRA is definitely not for libs. Maybe you want this? https://t.co/OedAbWJBqZ", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 24 01:18:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955949706319990787", "body": "@MindivanliOmer Does Tutorial work better in this sense? https://t.co/q2rkjjoeUY", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 23:45:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955948490739408896", "body": "@MindivanliOmer Like this one: https://t.co/QrInZSrrZR", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 23:40:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955948275689050112", "body": "@MindivanliOmer Did you see the \u201ctry it on codepen\u201d link after most snippets?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 23:40:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955947382524522496", "body": "@brian_d_vaughn And do so for every method so you\u2019d have a single cheat sheet neatly split by methods.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 23:36:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955947271102914560", "body": "@brian_d_vaughn This way instead of making it sound like we already know your code will work just fine with DidMount, we point out all use cases we\u2019re aware of, and (potentially different) migration paths. And have a \u201ccatch-all\u201d for unreported use cases that prompts a discussion.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 23:36:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955947010577911808", "body": "@brian_d_vaughn I\u2019d remove specific recommendation, and instead point each method at a section in a doc. That doc could be structured as:\n\n## componentWillMount\n\n### Use case: data fetching\n\n&lt;our recommendation&gt;\n\n### Use case: &lt;...&gt;\n\n&lt;...&gt;\n\n###\u00a0Other use cases\n\nPlease file an issue to discuss!", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 23:35:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955945140710977536", "body": "@brian_d_vaughn \u201cPlease update to *DidMount\u201d wording ignores that people might have legit scenarios for using *Will* methods specifically. We\u2019ll cover those in blog posts etc but IMO phrasing it as *the* recommendation can be interpreted as dismissive by someone who knows the difference.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 23:27:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955944458150916096", "body": "@MrLeebo Maybe there's a misunderstanding that mixing is disallowed? It's not, just use parens to disambiguate for humans reading the code.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 23:24:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955944310863810560", "body": "@MrLeebo So why not (user &amp;&amp; https://t.co/JsN6pY2GIz) || \"Unknown\"? If you used Prettier it would even do this automatically.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 23:24:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955936123750109184", "body": "@MrLeebo Check out eslint-config-react-app, we\u2019re trying to keep it pretty unopinionated and high signal", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 22:51:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955935816534159360", "body": "@MindivanliOmer Anything in particular that\u2019s confusing? Feedback is valuable but mostly when it\u2019s a bit more specific \ud83d\ude42", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 22:50:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955931932747067392", "body": "@tomspeak_ \u201cTo sum up [...] not in music specifically, just in life [...] what entertains [...] unnecessary [...] I\u2019m not fond of myself, that\u2019s it\u201d", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 22:35:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955930837949829121", "body": "@tomspeak_ It\u2019s actually pretty hard for me too (I heard the same fragments as you did).", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 22:30:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955926652839776256", "body": "RT @mgbohorquez: Could you help us with this?, please! @GirlsWhoCode @freddier  @dan_abramov @ScribblingOn @amyngyn anything is valuable! T\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 22:14:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955869623970344963", "body": "This is sick https://t.co/AbF5XEEN3f", "favoritedCount": 66, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 18:27:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955856108652056577", "body": "@matthewcp @chrishurlburt That wouldn't work in my case because I need another tool to later \"find\" this require \ud83d\ude02", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 17:33:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955810189663457281", "body": "That did it: https://t.co/sXBgvsEN4Z", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 14:31:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955810092062044161", "body": "@chrishurlburt Ooh this is exactly what I wanted. Thanks.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 14:30:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955809053971755009", "body": "@DarkoKukovec That still creates an \u201cinternal\u201d module for them", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 14:26:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955808991136886785", "body": "@MoOx @bloodyowl https://t.co/VQBtRngqMg", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 14:26:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955808451866906624", "body": "@trodrigues I tried that and it didn\u2019t help. It just left those requires broken.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 14:24:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955807761115369472", "body": "@bloodyowl Not exactly the same. Webpack still creates internal modules for those.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 14:21:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955806993138225153", "body": "Does webpack have a plugin to leave some require() calls untouched? Meaning, no processing at all. Just leave the verbatim where they are.", "favoritedCount": 30, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 14:18:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955800808536322048", "body": "RT @mxstbr: \ud83c\udf89 styled-components@3.0.0 is out!\n\n- No more /native for ReactNative! Just import styled from 'styled-components' and you're go\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 13:54:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955799726892437506", "body": "RT @lukastaegert: Finally it's here \ud83c\udf81\ud83c\udf89! Rollup v0.55.0 is a blockbuster release with\n- Code splitting!\n- SystemJS bundling target!\n- User-d\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 13:49:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955778048778960896", "body": "@type__error @acdlite One more: it helps if you have a friend in the audience who you can easily find. Depending on the lighting you might not see anyone at all, but if you do, it can be discouraging to look at someone playing with their phone. Anchoring on a friendly face restores the confidence.", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 12:23:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955610475764559872", "body": "RT @codebeast: \ud83d\udea8\ud83d\udea8 DEVELOPER SCHOLARSHIPS \ud83d\udea8\ud83d\udea8\n\nI am partnering with @theflutterwave to help developers in #Kenya get access to premium develo\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 01:17:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955609347878522880", "body": "macOS users, share your Downloads stacks https://t.co/K7YaeGanTt", "favoritedCount": 55, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 01:13:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955601826652610560", "body": "RT @gatsbyjs: \"Getting Started with Gatsby and WordPress\"\n\nNew blog post by @amberleyjohanna\n\nhttps://t.co/Jxpi3jOsrt https://t.co/pUEIoKBH\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:43:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955601571450118145", "body": "RT @YassineElouafi2: I wrote a new post: a gentle introduction to parser combinators https://t.co/2Si9hE1EK2", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:42:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955598186269347841", "body": "@jennschiffer cc @ken_wheeler why isn't this a thing", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:28:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955598020334227456", "body": "@jennschiffer https://t.co/s0GMM2brsl", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:28:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955597846442541057", "body": "RT @jennschiffer: is it Miller time yet", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:27:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955596853457969152", "body": "@khanght @type__error Mine worked tho", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:23:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955595102575054849", "body": "RT @type__error: People who have spoken at tech conferences: what's one thing you wish you'd known before your first talk?\n\n(RT for reach p\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:16:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955595076092260352", "body": "@type__error @acdlite And turn the notifications off! Otherwise you risk exposing private messages hopping on the screen during the talk \ud83d\ude1b", "favoritedCount": 24, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:16:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955594431855579136", "body": "@Meliaxford Not currently although we\u2019ll have something like this in 2.x. For now you can use `svgr` command-line utility to generate component files (and import those): https://t.co/gxZUAWFLaF", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:14:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955594000802701312", "body": "@type__error @acdlite Make sure to check your slides on the projector before the talk. For example during the dinner break. Helps detect any connection issues and adjust mirroring settings. Pick the slide with smallest font size and go to the back of the audience. Can you still see it clearly?", "favoritedCount": 15, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:12:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955593635390808064", "body": "@type__error @acdlite Whenever you get nervous just take a pause. Breathe. Drink some water. It\u2019s empowering to realize you can even make an awkward pause and everyone will just sit silently because you control the room \ud83d\ude0e", "favoritedCount": 77, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:10:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955592441301688320", "body": "@type__error Oh, one more thing, make sure that you have a backup of the slides somewhere on the net that will run on a random laptop. My laptop didn\u2019t connect to the projector, @acdlite\u2019s laptop was stolen once, etc.", "favoritedCount": 44, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:06:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955591888475746304", "body": "@type__error I guess that\u00a0wasn\u2019t \u201cone thing\u201d \ud83d\ude01 But I hope it helps", "favoritedCount": 22, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:03:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955591654341332993", "body": "@type__error Hang out with other speakers! That\u2019s the best part about going to conferences \ud83d\ude42 It\u2019s a very bonding experience and also helps you realize nobody has their shit together any more than you do.", "favoritedCount": 65, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:02:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955591200769232896", "body": "@type__error It helps if you have one idea to center your talk around. Like in Inception movie, what\u2019s the one thing you want to put in their heads? This helps you decide what to cut (and you might have to cut things when you realize you\u2019re running over the day before the talk).", "favoritedCount": 59, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 23 00:01:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955590579148279809", "body": "@type__error Peak scary is ten seconds before the talk. I didn\u2019t anticipate it to be this scary. But once you get into your element (by talking about things you care about) the fear goes away completely, it even becomes fun. At least it did for me.", "favoritedCount": 72, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 23:58:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955589928011927553", "body": "@type__error If you haven\u2019t practiced you will run over. My first talk at a local meetup was supposed to be 30 minutes, I only got through half of the slides. This is solved by practice: actually rehearse the whole talk (to an empty room, then to an audience).", "favoritedCount": 59, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 23:56:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955589485869391872", "body": "@type__error A few things, in random order. I phrase in a generic way but recognize this might not apply to everyone.", "favoritedCount": 21, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 23:54:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955572690953428994", "body": "@jsonnull @acdlite @mjackson https://t.co/pQ8ZL4JVKE", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 22:47:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955571629190537216", "body": "@FKHansen @cpojer On-ear p5s", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 22:43:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955571119574183937", "body": "@Annie_Khaliq Wikipedia has a good explanation https://t.co/heW1xRXKJh", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 22:41:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955570257346916352", "body": "@sophiebits I was curious if anybody would spend the effort \ud83d\ude00 I did check for any private info before posting!", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 22:37:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955539418043109376", "body": "@andrewingram Spotify is legit better at surfacing unknown stuff. I tried it and the difference is real.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 20:35:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955538801551699968", "body": "@MylesBorins To ruffle @samccone", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 20:32:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955536818300162048", "body": "@NaviMarella There is a recent issue about this :-) Check the list", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 20:25:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955532444438056960", "body": "@NaviMarella Nope (at least not currently)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 20:07:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955531910536712192", "body": "This feels very good to my ears https://t.co/Q1eAW523mN", "favoritedCount": 34, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 20:05:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955529071525617665", "body": "@cpojer \ud83c\udfa7 https://t.co/6x5rKde6Oc", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 19:54:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955528748723556352", "body": "At least this error message is detailed. https://t.co/LvI5btm3oW", "favoritedCount": 850, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 19:53:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955528217649172481", "body": "RT @wSokra: Yeah after 2 weeks dry period... webpack 4.0.0-alpha.5 with a lot of big changes:\n\n* CCP =&gt; optimization.splitChunks\n* Profilin\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 19:50:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955525603616321536", "body": "@acemarke @fbOpenSource It should redirect \ud83d\ude42", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 19:40:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955523812652613632", "body": "RT @ReactFest: Ta da da, here comes the second #ReactFest speakers outline with @dan_abramov, @type__error &amp; @tlakomy \ud83c\udf89\ud83c\udf89\ud83c\udf89\n\nWe still have so\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 19:33:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955520308118777857", "body": "RT @fbOpenSource: We figured it was long past time create-react-app, one of our most popular projects, graduates from our open source incub\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 19:19:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955487475140571137", "body": "@Grynn Makes testing harder, breaks if there are several such apps in the page (which happens in practice in big products), makes server rendering impossible. Otherwise it's fine sure", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 17:09:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955481139145265153", "body": "@zhentzhou npx &lt;something&gt; is just a shortcut for\n\nnpm i -g &lt;something&gt;\n&lt;something&gt;", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 16:43:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955471728465055744", "body": "@sebmck @sebmarkbage This might be relevant https://t.co/PdSKZWhRXG", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 16:06:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955470786067947522", "body": "@james_k_nelson @acdlite Stay tuned", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 16:02:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955470622632677376", "body": "@batemanchris @kentcdodds Wait for built-in React support for something like this \ud83d\ude0e Router is just using React, so it should work", "favoritedCount": 18, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 16:02:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955436838726111232", "body": "@StetsenkoMakar @Codecademy @_bikeshed @orta Tbh I\u2019m skeptical of TDD for UIs", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 13:47:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955417550036307968", "body": "@lydia_hallie @telmo People would interpret it as a place to do side effects in. The question-ish wording makes it clear it\u2019s just supposed to answer a question and nothing else.", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 12:31:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955415836940034048", "body": "@telmo @lydia_hallie It\u2019s a question, isn\u2019t it?", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 12:24:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955415746137526272", "body": "@KrasimirTsonev @reactjs @angular @vuejs @ChromeDevTools You can send a PR to DevTools to extract them to a package \ud83d\ude0e", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 12:23:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955415076789506054", "body": "@KrasimirTsonev @reactjs @angular @vuejs @ChromeDevTools Looks cool! A bit fragile because it depends on code copied from DevTools. Would be nice to extract it to a package in DevTools repo so you can consume it in a supported way.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 12:21:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955414489507291136", "body": "RT @KrasimirTsonev: Debugging your front-end like is 2019 - check out what I was working on for the past two months https://t.co/LO7KcIm90v\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 12:18:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955378557500444672", "body": "RT @acdlite: What's a good API with which to build a demo? Preferably has generous rate limits, a search API, and includes images as part o\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 22 09:56:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955210093179686912", "body": "@robwormald Curious if there\u2019s any retrospective? Why you chose Ember CLI as a starting point, what you changed, what was challenging, do you share any code at all these days, etc.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 22:46:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955202847280369665", "body": "lol https://t.co/dea2jJpZ8H", "favoritedCount": 88, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 22:18:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955158673155911682", "body": "@acemarke Not sure whether it means the code is getting better or my memory is getting worse", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 19:22:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955158108271185925", "body": "@zachcodes @erikaybar_ @marcandrewb You might want to keep tabs on the React features we will announce soon \ud83d\ude43 https://t.co/74eTJzoTuQ", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 19:20:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955147322941460482", "body": "@monasticpanic Pick your poison", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 18:37:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955146645674647552", "body": "RT @threepointone: started writing a series of posts on css-in-js, here's post 0: styles as objects https://t.co/dcXtsa1ikX", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 18:34:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955145123431673857", "body": "@acemarke I recently had to open 15.x source code and had no idea what\u2019s going on there \ud83d\ude05", "favoritedCount": 33, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 18:28:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955098373333413888", "body": "@azz0r Reducers should be deterministic so randomness doesn\u2019t belong there. However the whole point of reducers is to contain logic (whenever possible).", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 15:22:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955079978235977728", "body": "@neutrino2211 @wjsCli_official What makes React special in this case? Take any webpack config that works and add babel-loader with React preset to it. Don't forget to enable production mode (https://t.co/sXlFOiRmDs).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 14:09:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955074913156640769", "body": "@neutrino2211 @wjsCli_official What\u2019s the problem?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 13:49:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955062824434388992", "body": "Why do annoying problems often have similar shapes", "favoritedCount": 29, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 13:01:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955062154146799616", "body": "a.k.a. should event bubbling work through portals", "favoritedCount": 14, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 12:58:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955061849648779264", "body": "Symlinked modules don\u2019t see their peerDependencies from the parent project. Easy fix: use the unexpanded path for resolution!\n\nTransforms don\u2019t run on monorepo folders because their path is indistinguishable from real deps. Easy fix: use the expanded path for resolution!\n\nWait \ud83e\udd14", "favoritedCount": 72, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 12:57:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955033079424438272", "body": "@ryanflorence @iam_preethi I can probably consume a book as a tweetstorm", "favoritedCount": 38, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 11:03:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955032690910269440", "body": "@wSokra @dtinth I guess what I\u2019m asking is whether we still need to mess with NamedModulesPlugin and friends to get hashes that don\u2019t change too often for unchanged code, but also never produce same hashes for different rendered content", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 11:01:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955032000217341953", "body": "@ryanflorence @iam_preethi I\u2019m both \ud83d\ude2d", "favoritedCount": 36, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 10:59:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955029072517697536", "body": "RT @necolas: CSS-in-JS benchmarks in your browser on your device. Which libraries are almost as fast as vanilla CSS? Which are slower than\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 10:47:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955027177128546304", "body": "RT @reasonconf: \ud83d\udce2 We're excited to announce world's first Reason conference in Vienna, Austria \n\nThere is a highly enthusiastic community a\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 10:39:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "955026247666618368", "body": "@varjmes cc @MicheleBertoli might have ideas", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 10:36:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954877026674102273", "body": "@ArberSylejmani @josefbetancourt @reactjs We\u2019re focused on a specific use case, and the CLI itself isn\u2019t doing much or very useful. It\u2019s basically a fancy wrapper around \u201cnpm install\u201d. I don\u2019t think generalizing it would help anyone.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 00:43:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954874419314348038", "body": "@josefbetancourt @reactjs CRA only takes care of build dependencies (react-scripts), the rest is up to you and depends on what is in your package.json.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 00:32:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954874247968632832", "body": "@josefbetancourt @reactjs You can use any version of React with it (or even remove React if you want). \ud83d\ude42", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 00:32:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954870872757633024", "body": "@nikoTM Yes that\u2019s a tradeoff. But you can enforce a different version of transitive dependency with Yarn (see \u201cresolutions\u201d feature). So power users have that option.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 00:18:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954870015844605953", "body": "@alexandereardon Great stuff! Maybe could use a disclaimer that majority of app-level code usually doesn\u2019t need to care about things like this but agree these tricks are super valuable for library-level code. \ud83d\ude42", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 00:15:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954869263097126912", "body": "RT @alexandereardon: I just published \u201cDragging React performance forward\u201d https://t.co/bgMrl2SOZG\n#react #performance #javascript", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 21 00:12:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954816787576688640", "body": "@midned You might enjoy this https://t.co/ibynE4SErJ", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 20:43:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954816128789958656", "body": "@MauriceDB ... unless you\u2019re already inside a Git or Mercurial repo. Thank you!", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 20:41:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954816035483369472", "body": "RT @MauriceDB: Sweet, just landed a PR on CRA. Version 2 of Create-React-App will automatically create a new Git repo for you. :-)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 20:40:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954815857292541953", "body": "@fquintao It is up to you \ud83d\ude42 Please read about the pros and cons and decide for yourself", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 20:40:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954815514886406145", "body": "@pauldambra @simonstead Note CRA doesn\u2019t put dependencies into your project. Instead it abstracts them away behind a single, versioned dependency. That\u2019s how it\u2019s different from something like Yeoman.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 20:38:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954815050732265475", "body": "@Lawgotsoul Note you don\u2019t need to *install* Create React App. You can just run \u201cnpx create-react-app myapp\u201d (Note npx rather than npm.) npx is included by default since npm 5.2.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 20:37:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954814751586111488", "body": "@Lawgotsoul No definitely not. As soon as you use sudo once with npm you\u2019re going to keep having weird errors. Reinstall Node/npm, repair folder permissions and then always run them without sudo.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 20:35:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954814483217739783", "body": "@Etienne_dot_js We have a list of polyfills here: https://t.co/vBkngt3Sxf", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 20:34:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954806987044347904", "body": "@threepointone @acdlite So much foreshadowing", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 20:04:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954802129373466624", "body": "@acdlite No way Andrew, how would you even go about implementing that", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 19:45:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954802065951416321", "body": "RT @acdlite: The responses to my original tweet are correct. When waiting for something to load, it\u2019s best to stay on the current view and\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 19:45:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954793003411017728", "body": "@wSokra Would this also solve long-term hashing? (Sorry if that has nothing do with this..)", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 19:09:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954769992796528641", "body": "@iamlocaljo Versionable though", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 17:37:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954769853193351175", "body": "@richardiii Wanna help out with anything? There\u2019s still work to be done for 2.0, we\u2019re actively looking for contributors willing to help and test.", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 17:37:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954768290471129088", "body": "Can I say CRA is a \u201cpost-boilerplate\u201d? \ud83d\ude02", "favoritedCount": 131, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 17:31:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954749095461212167", "body": "RT @sebmarkbage: I\u2019d like to think that we\u2019re not just making it easier to build UI but making it easy to build better UI. For example, we\u2019\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 16:14:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954748932801941505", "body": "RT @erikaybar_: My first group of #reactjs lessons are live on @eggheadio! \ud83c\udf89\nIf you've got a free minute, head on over and check them out \ud83d\ude03\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 16:14:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954748301060034560", "body": "RT @wSokra: RIP CommonsChunkPlugin\n\nHere is some initial documentation for an upcoming refactoring for webpack 4.\n\nWhat do you think?\n\nPR:\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 16:11:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954699683506675713", "body": "RT @MrAhmadAwais: \ud83c\udf89 I'm releasing \u2014 `create-guten-block` \n\n\ud83d\udd25 \u269b \ud83d\udce6 A zero-config #0CJS dev-toolkit for building #WordPress #Gutenberg block p\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 12:58:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954521531358568448", "body": "npm install tide-pods", "favoritedCount": 439, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 01:10:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954513984014766080", "body": "RT @kentcdodds: \u2753 I'm preparing some material about render props in React \u269b\ufe0f\n\nWhat are your questions about render props in React? What thi\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 20 00:40:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954490707217072128", "body": "@TheLarkInn @maybekatz @fitzgen @rustlang @yarnpkg @npmjs Not noisier than fsevents you already depend on? \ud83d\ude01", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 23:08:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954490284850659328", "body": "@browniefed @EricVicenti @souporserious This doesn\u2019t mean it\u2019ll never change but figured it\u2019s worth clarifying the current limitations.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 23:06:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954490179330351104", "body": "@browniefed @EricVicenti @souporserious Note the limitation (if it exists?) is on Flow side, not ours. To React it\u2019s only important that props.children of *host* components (e.g. &lt;div&gt;) is a React.Node. React doesn\u2019t currently assign special meaning to props.children of custom components.", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 23:06:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954482107597770752", "body": "@listentoMM I like most of Someday Somewhere but currently looping the 1:22 section of I\u2019ve Never Felt So Good", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 22:34:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954479416880459776", "body": "I miss Mura Masa before the collaborations", "favoritedCount": 36, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 22:23:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954462886490906624", "body": "@natebomberger It\u2019s too easy to find music these days, I encourage you to spend effort searching just like in the 90\u2019s", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 21:17:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954462378803937281", "body": "This is legit https://t.co/DwE0Udb6sR", "favoritedCount": 81, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 21:15:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954447081300680709", "body": "Can I get webpack or Rollup to parse JSX/Flow/spread but leave it untouched?", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 20:14:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954426864948277248", "body": "RT @MrAhmadAwais: \ud83d\udd25 #WordPress starter kits and boilerplates go stale. \ud83d\ude15\n\nThe next generation dev-tooling is \n\u2705 Smart &amp; Maintained\n\u2705 Versio\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 18:54:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954412056102371328", "body": "What your users say:\n\n\u201dChange this little thing or I won't use it.\u201c\n\nThey might mean:\n\n\u201dI don\u2019t think this is valuable to me yet so I'll nitpick on small things.\u201d\n\n(I do that too)", "favoritedCount": 390, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 17:55:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954388411669868544", "body": "RT @addyosmani: @dan_abramov Thanks for supporting Service Workers as a default in CRA for a while, Dan. It provided us an immense amount o\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 16:21:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954385430308409344", "body": "@rikschennink Mind filing an issue here? https://t.co/NvqlqKqiNw", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 16:09:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954385019509837829", "body": "@AdamRackis @nekrtemplar @jeffposnick I think it\u2019s good to have something that sort of works even for educational purposes", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 16:08:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954384763816697856", "body": "RT @cangoektas: Just published \"How we simplified our tooling setup for Node.js projects\" and my first open-source project \"blogfoster-scri\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 16:07:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954384193676509184", "body": "@rauchg @nekrtemplar @jeffposnick There\u2019s another side to this: it\u2019s hard to understand the implications and have a good response to ideological arguments if you haven\u2019t tried this in practice.", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 16:04:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954383672576237568", "body": "@nekrtemplar @jeffposnick Personally I wanted to understand what kind of issues people would run into. It wasn\u2019t obvious. I have a pretty good idea now. I\u2019m glad it doesn\u2019t have to be an ideological argument anymore.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 16:02:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954383191992827904", "body": "@nekrtemplar You uncovered our evil plan \ud83d\ude08 Seriously though, I was rejecting them because I didn\u2019t know how they work in detail and couldn\u2019t support that myself (even though precaching seems valuable). When @jeffposnick volunteered to offer support to our users we decided to give it a try \ud83d\ude42", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 16:00:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954377848172765184", "body": "@tomalexhughes replaceReducer() should get you there, check my SO answer you can find by searching \u201cdynamically loaded reducers\u201d", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 15:39:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954377590046904321", "body": "@nekrtemplar What is funny about giving something a fair try and then documenting the actual issues with it so vendors can improve? To me it sounds more valuable than if we didn\u2019t give it a chance. \ud83d\ude42", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 15:38:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954368077562597378", "body": "RT @samerbuna: I just published: React.js Frequently Faced Problems \n\nhttps://t.co/VILKnjTpbw", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 15:00:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954364051399872513", "body": "RT @Fragno92: @KingPride @YDKJS @getify Around one year to get to where I could easily get a job, I work mainly with #ReactJS and #redux I'\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 14:44:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954359715055788033", "body": "I saw the best minds of my generation destroyed by the needs of the bundlers, avoiding the parsing cost, navigating the compatibility tradeoffs to bring ESM to Node.js.", "favoritedCount": 214, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 14:27:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954353550905180161", "body": "@mountain_ghosts (Disclaimer: I neither work on Yarn nor consider this a bug in either. But I\u2019d be delighted to see this fixed.)", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 14:03:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954352875932614658", "body": "@mountain_ghosts It\u2019s a bit more complex because the behavior is new to npm 5. Yarn team wasn\u2019t even aware of the issue until now. They\u2019re looking into the fix, seems like it\u2019s an easy one. \ud83d\ude42", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 14:00:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954154898773311488", "body": "@kylecesmat We gave them a fair try. I\u2019m glad we have a documented list of issues, some of them will eventually get solved by vendors", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 00:53:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954151419719901184", "body": "@ironicnet https://t.co/wHuXR8RayK", "favoritedCount": 48, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 00:40:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954151392545005571", "body": "@jordanpittman https://t.co/wHuXR8RayK", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 00:39:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954151268532015105", "body": "@AnatidaeProject And as a conscious early adopter you can always turn it on \ud83d\ude42 See also: https://t.co/gqaa8zTFK0, https://t.co/wHuXR8RayK", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 00:39:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954146978564395008", "body": "Service workers are opt-in in the next version of Create React App. They are an amazing technology but the pitfalls today are too significant to be a good default. Will revisit in a year or two! https://t.co/UPqiLKnZzB", "favoritedCount": 1140, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 19 00:22:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954137992125468672", "body": "@TheLarkInn @ryanastelly @MSEdgeDev I\u2019d be cool with reloading (and focusing) the tab closest to either side with the matching URL. As an option of course (not by default).", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 18 23:46:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954137668304146432", "body": "@blainegarrett Not likely. This is too far from our expertise, I think Next.js is doing a good job there and recommend checking it out", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 18 23:45:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954125496589209600", "body": "@TheLarkInn @MSEdgeDev An option to reuse an existing tab with that URL (if it\u2019s already open).", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 18 22:56:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954063700473843713", "body": "@jspengy @acemarke @mjackson @brian_d_vaughn IMO rely on PropTypes and (optionally) provide static type definitions", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 18 18:51:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954057667428999168", "body": "@NandoSang Seems like portal it is", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 18 18:27:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954056396999360512", "body": "@codylindley I\u2019d like to point out FB is not heavily using Redux \ud83d\ude42 For some reason it\u2019s often mistakingly associated with Redux, but FB still uses vanilla Flux with its own abstractions on top (which predate React)", "favoritedCount": 25, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 18 18:22:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954014268671840256", "body": "@wSokra What about ESM in old pipeline for file/css loaders? We\u2019ve run into a conundrum here https://t.co/qaT250ldhh", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 18 15:35:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954005911730827264", "body": "Or maybe it means just bad because it\u2019s double negation", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 18 15:01:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "954005229695102979", "body": "It\u2019s 2018, and \u201cliterally bad\u201d now means very good", "favoritedCount": 28, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 18 14:59:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953998379868151808", "body": "@thehristokolev No no, you must find them yourself, that\u2019s part of the process. \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 18 14:31:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953997846604386304", "body": "RT @martinkl: An old conference talk of mine helped inspire Redux, and now Redux ideas are shaping my current work. Isn't it great to publi\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 18 14:29:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953996464052686849", "body": "Ooh I like this https://t.co/UtLkD2awSO", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 18 14:24:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953981951043620865", "body": "Is there anything I could read about the status of new CSS pipeline in webpack?", "favoritedCount": 52, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 18 13:26:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953812164237807617", "body": "TEOTFW season 2: Alyssa changes her name to Jessa and moves to New York", "favoritedCount": 19, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 18 02:11:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953756699441205248", "body": "@o_pichon @acemarke mapPropsToState makes it seem like you'd often use it. It's a rare use case.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 22:31:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953741458229678081", "body": "@o_pichon Maybe, it\u2019s a bit late for that now though \ud83d\ude42. Note mapStateToProps isn\u2019t an actual API: nothing dictates that you call it this way.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 21:30:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953737173571948544", "body": "RT @johnnyrodgersis: Top notch new post on Slack's use of webpack to build our frontend by the inimitable @rowanoulton. \u201cKeep webpack Fast:\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 21:13:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953729596515549185", "body": "@TommyTessler It replaces cWRP(), not complements it. So it\u2019s pretty much what you say, except that it also gets rid of the unnecessary setState() call in favor of returning.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 20:43:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953728647466283008", "body": "@hswolff Oh wow I love this", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 20:40:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953728608635322370", "body": "RT @hswolff: @dan_abramov Really the css approaches should cascade into one another. It\u2019s only right.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 20:39:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953726650994380800", "body": "RT @ch9: IT'S HAPPENING!!! Our NEW show \"5 Things\" has launched its first episode! Join @burkeholland &amp; @dan_abramov to help you get starte\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 20:32:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953674045614108673", "body": "Idea:\n\nnpx analysis-paralysis css\n\n\ud83c\udf52 Picking a CSS approach for you, hang tight... \ud83c\udf52\n\n*slot machine animation of vanilla CSS, CSS modules, different CSS-in-JS solutions stopping at a random one*\n\nCan be extended for other scenarios.", "favoritedCount": 268, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 17:03:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953652706014621696", "body": "@_reznord * Extending an existing config is fragile (can break in any patch) and hard to understand\n* We want to discourage libraries from forcing users to tweak configs (it\u2019s not sustainable)\n* This allows us to find solutions to systemic problems and solve them once and for all", "favoritedCount": 36, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 15:38:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953651118147604480", "body": "CSS Modules support just landed into Create React App \ud83d\udc40 https://t.co/vNlXTNJoBO", "favoritedCount": 652, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 15:31:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953648132256133122", "body": "@syke @siegeldarren Any background rendering is unsafe if cWRP is not idempotent.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 15:20:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953645153939533825", "body": "RT @sarah_edo: \ud83d\udea9 The series starts today! \ud83d\udea9 \n\nLearn how to build a Vue.js Serverless Checkout form with Stripe! Part one of four, one every\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 15:08:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953635685449203713", "body": "@Jalvarado91 @quentin_smr @kentcdodds It\u2019s not some sort of a secret, we\u2019ll have a blog post coming etc when the change is actually being made.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 14:30:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953631132872036352", "body": "@FatalStrikes @quentin_smr @kentcdodds https://t.co/kTlxEYSGmK", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 14:12:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953631040115011584", "body": "@quentin_smr @kentcdodds Last discussion was in https://t.co/EbsaWTwqVu, watch that repo", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 14:12:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953630765060935681", "body": "@thejameskyle Meh, it\u2019s supposed to be a pretty rare use case. I think more people think they need it than actually do.", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 14:11:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953628199983906817", "body": "@quentin_smr @kentcdodds Yes, but the other difference is that cWRP() is going away and gDSFP() is its replacement \ud83d\ude42", "favoritedCount": 14, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 14:00:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953613666867441664", "body": "@RaitoNeeto @IAmTrySound Yea it\u2019s usually a bad idea. Here\u2019s a legit case: https://t.co/ytEbXYbVPp", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 13:03:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953612626650640385", "body": "@kentcdodds Actually I should probably flip that boolean? I\u2019m bad with math. But you get the idea.", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 12:59:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953612292641390592", "body": "@kentcdodds (At least that\u2019s how I imagine it)", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 12:57:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953612246634188800", "body": "@kentcdodds getDerivedStateFromProps(props, state) {\n  const { currentRowIndex }, = props;\n  const { lastRowIndex }, = state;\n  if (currentRowIndex === lastRowIndex) {\n    return null;\n  },\n  return {\n    lastRowIndex: currentRowIndex,\n    isScrollingDown: lastRowIndex &gt; currentRowIndex\n  },;\n},", "favoritedCount": 40, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 12:57:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953612246634188800", "body": "@kentcdodds getDerivedStateFromProps(props, state) {\n  const { currentRowIndex }, = props;\n  const { lastRowIndex }, = state;\n  if (currentRowIndex === lastRowIndex) {\n    return null;\n  },\n  return {\n    lastRowIndex: currentRowIndex,\n    isScrollingDown: lastRowIndex &gt; currentRowIndex\n  },;\n},", "favoritedCount": 40, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 12:57:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953590688192630784", "body": "@IAmTrySound @RaitoNeeto I\u2019d say it\u2019s more for when your state depends on how props changed over time.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 11:31:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953590389470048256", "body": "@EisenbergEffect Maybe (not familiar with them) \ud83d\ude42 I think [].reduce(fn) accumulator is a more direct inspiration", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 11:30:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953589720528949248", "body": "@jarredsumner We\u2019ll post an RFC soon-ish", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 11:28:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953589599758180352", "body": "@edwardakerboom This is not something new, it\u2019s literally how changes in React API were made since the first version.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 11:27:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953589477766778880", "body": "@edwardakerboom I don\u2019t understand what you mean. We always make some breaking changes in major versions. We deprecate in a minor and remove in a major. We also provide automatic script to convert the code.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 11:27:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953589029345349632", "body": "@wSokra Isn\u2019t that why webpack 2 docs were written? \ud83d\ude42", "favoritedCount": 15, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 11:25:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953461077219708928", "body": "@_developit @brian_d_vaughn @hswolff Your tweet seems to imply the first API the folks came up five years ago with was perfect and never needs to change. I don\u2019t agree. It\u2019s not about coupling it to implementation, but about discovering a better API that has more powerful properties.", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 02:56:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953460737514659840", "body": "@_developit @brian_d_vaughn @hswolff Neither are new APIs. They\u2019re not \u201ccoupled\u201d to implementation, they just enable stronger constraints that different independent features can all benefit from.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 02:55:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953451427531280385", "body": "Adding this to my bag of tricks https://t.co/laSRtVcrSf", "favoritedCount": 159, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 02:18:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953450852181823488", "body": "RT @brian_d_vaughn: @dan_abramov I'm pretty sure we've decided that it will be. (At least that's what I'm doing in my PR at the moment.)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 02:16:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953450644106596352", "body": "RT @sebmarkbage: @dan_abramov To be clear, AFAIK, that request asked for it to be used *instead* of state initializer but we're adding it i\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 02:15:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953450566902001672", "body": "@siegeldarren * Less duplication, as you mentioned\n* Clearer when and why you\u2019d want to use it\n* Unlike cWRP(), doesn\u2019t interfere with some shiny new features that we\u2019re working on", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 02:15:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953449687671025669", "body": "@brian_d_vaughn \ud83d\ude0d\ud83d\ude0d\ud83d\ude0d\ud83d\ude0d\ud83d\ude0d", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 02:11:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953449501448179712", "body": "However, this means that we\u2019ll part our ways with componentWillReceiveProps() in 17. We think getDerivedStateFromProps() does the same job better and is less confusing. It also happens that cWRP() really messes up our plans for data fetching features that might be in pipeline. \ud83d\ude42", "favoritedCount": 110, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 02:10:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953449187168964609", "body": "We\u2018re still debating whether it should be called for the initial render, hopefully will sort it out after first implementation and usage feedback.", "favoritedCount": 27, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 02:09:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953448757953261568", "body": "The cat is out of the bag, we\u2019re adding this! https://t.co/LJXl73102C", "favoritedCount": 350, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 02:07:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953448523504279553", "body": "@brian_d_vaughn @_developit @hswolff I think overall our messaging about what \u201casync\u201d means hasn\u2019t been very clear yet. \u201cAsync\u201d isn\u2019t a feature of a specific component. We\u2019ll do better when we prepare demos of what you can do with this stuff\u2014sorry some pieces need to be set in motion before that", "favoritedCount": 14, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 02:06:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953447622232150016", "body": "@brian_d_vaughn @hswolff Ooops \ud83d\ude01", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 02:03:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953447492305211392", "body": "RT @dan_abramov: Why React doesn\u2019t just use requestAnimationFrame() for everything: https://t.co/2odolzABuk", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 02:02:51 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953437320241467392", "body": "@EmilSjolander @sebmarkbage @acdlite And side effects in render!", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 01:22:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953434201776443393", "body": "@ken_wheeler @browniefed We have cooler things in store than that", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 01:10:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953433504175525889", "body": "@ken_wheeler @browniefed In general the RFCs haven\u2019t quite been updated with latest thinking. We thought it\u2019s pointless to keep bikeshedding. We want to try these new methods at FB and then can come back with implementation and usage feedback.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 01:07:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953433223794700289", "body": "@ken_wheeler @browniefed We haven\u2019t settled on the names yet, I\u2019m pretty sure we won\u2019t use that one \ud83d\ude42 There were other ideas, like finishRenderToString. It\u2019s a pretty rare use case though.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 01:06:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953431283316772869", "body": "@hswolff @brian_d_vaughn For teaching, you can say \u201cforget about the componentWill* ones, we could never understand when they fire anyway\u201d", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 00:58:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953417065343406080", "body": "@theKashey @brian_d_vaughn @AdamRackis Another way we could go about this is to cut a patch release to 0.14.x and 15.x supporting the new names. I don\u2019t think it\u2019s that infeasible although will need more discussion.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 00:01:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953416743233441793", "body": "@theKashey @brian_d_vaughn @AdamRackis Thanks for explaining, this is a valid concern. I think it means that libraries that use those hooks will need to release *their* majors to get rid of the warnings (once we turn the warnings on, which is not now either).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 17 00:00:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953415975038345216", "body": "@AdamRackis @brian_d_vaughn It\u2019s not just for async, people asked for a nicer way to do what cWRP does since the beginning of React \ud83d\ude42 But it turns out that this is also important for a bunch of other scenarios", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 23:57:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953413896408391680", "body": "@theKashey @brian_d_vaughn @AdamRackis To clarify, the old one still works. It\u2019s not going to \u201cbreak\u201d in a minor release.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 23:49:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953413668661755906", "body": "@theKashey @brian_d_vaughn @AdamRackis A breaking change is when something breaks. Deprecating a method but keeping the old one working is not. This is what React has been doing for two years: https://t.co/WY1AD0ugqO (and if you count 0.x minors as majors, since the first version)", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 23:48:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953406438860304386", "body": "@MarkFunk Yes but I also liked that. I dunno. I guess I don\u2019t mind when a show is rambling around.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 23:19:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953406217027768322", "body": "@_wildservice This is funny because it is literally the next show on my list", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 23:18:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953406006461194241", "body": "RT @maybekatz: We're doing stuff on that front, too: we have a rudimentary analytics API that we hope will eventually get us more scalable\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 23:18:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953403469800656897", "body": "\u2639\ufe0f I liked that show https://t.co/MTLqSZdbX7", "favoritedCount": 43, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 23:07:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953360447616487426", "body": "@metalandcoffee_ Let us know if you bump into any issues \ud83d\udc4b", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 20:16:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953359810057129991", "body": "@HakeemDelRey @reactjs \u201cThe road to learn React\u201d by @rwieruch is pretty great https://t.co/4e2ITPuS0Z", "favoritedCount": 61, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 20:14:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953359644319154176", "body": "RT @HakeemDelRey: RT for reach\n\nIs there any good book on learning react? I\u2019m not exactly a beginner, just wondering if there\u2019s a book that\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 20:13:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953359490572849153", "body": "@bitreverie @sxywu did a talk on this https://t.co/FBUfvIlIqs", "favoritedCount": 22, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 20:13:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953359273572143106", "body": "RT @bitreverie: Any recommendations for #D3 libraries with #reactjs or do you recommend to use it directly? would using react would be the\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 20:12:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953359050669985793", "body": "@maxedapps @reactjs Hey that\u2019s a really great FAQ. Minor nit: use PascalCase in the functional component example since otherwise it wouldn\u2019t work in the same file.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 20:11:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953358837439922176", "body": "RT @maxedapps: My @reactjs Router broke after deployment! Can I just drop React into a page or do I need a Webpack workflow? All explained\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 20:10:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953342225013932032", "body": "@505aaron Either way is fine, I don\u2019t mind discussion on the roadmap too", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 19:04:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953340992178085889", "body": "@kitos_kirsanov No, this is a large undertaking better left to TypeScript experts. I know `react-scripts-ts` is doing a good job and suggest contributing there!", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 18:59:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953340868882259971", "body": "@i_m_triggered more specifically?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 18:59:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953309415544934400", "body": "Also ping me or @timer150 in DMs if you use Create React App, like its tradeoffs, and have some experience maintaining open source projects. We\u2019d love some help on the maintenance side.", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 16:54:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953308145371279360", "body": "I published a roadmap for what\u2019s going to be in Create React App 2.0. We need your help on issues and PRs that aren\u2019t quite ready yet! https://t.co/QqGnwh7q5Y https://t.co/frA66RCRgx", "favoritedCount": 314, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 16:49:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953296173116276736", "body": "@michaelbenin Not currently. SSR is hard enough and our friends at Next.js etc have better ideas on how to handle that.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 16:01:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953285341468872704", "body": "@UndecidedRider @sebmck @ChromeDevTools TextBox5", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 15:18:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953284962886746113", "body": "RT @cpojer: Anybody ever developed a web app with react-native-web and then turned it into a mobile app? How did it go?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 15:17:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953281377952247808", "body": "@ddemaree Can you expand on the second one? (I don\u2019t know enough about how it works)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 15:02:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953281110062125058", "body": "Why React doesn\u2019t just use requestAnimationFrame() for everything: https://t.co/2odolzABuk", "favoritedCount": 110, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 15:01:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953275668640432128", "body": "Who used styled-jsx from Next.js? What did you (not) like about it?", "favoritedCount": 53, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 14:40:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953268138103238663", "body": "@threepointone this is not a @dril", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 14:10:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953092144176263168", "body": "@hipsterzipster @housecor In the screen shot above it\u2019s *build tools* that are hidden. Typically you don\u2019t import them from your code. But if you use some of the same libraries directly in the app of course you must declare them.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 02:30:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953091924751200256", "body": "@hipsterzipster @housecor Runtime dependencies like Lodash absolutely *should* be declared! Not doing this is wrong and can break anytime.", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Tue Jan 16 02:29:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953048903896780802", "body": "Tip: use @ChromeDevTools \u201cload\u201d and \u201csave\u201d buttons in the Performance panel to compare traces generated by React side by side! https://t.co/o4MvRPKjHg", "favoritedCount": 228, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 23:39:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953025769244065792", "body": "@tariqrauf The good thing is you won\u2019t need to think about it \ud83d\ude43 It\u2019s just an under-the-hood improvement that our users will get automatically, and more npm modules will work out of the box!", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 22:07:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953024646747705346", "body": "If you\u2019re curious about how the next version of Create React App will handle node_modules: https://t.co/FPp1LHiGd8 https://t.co/C4SD8pxfJX", "favoritedCount": 96, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 22:02:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953018011337846784", "body": "TIL https://t.co/AXda0YZ5QH", "favoritedCount": 115, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 21:36:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953016745048109057", "body": "Me: users should read the documentation, it\u2019s the best way to solve the issues\n\nAlso me: *tries every workaround in a thread with 150 replies if it has more than 20 likes*", "favoritedCount": 649, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 21:31:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953013588402343936", "body": "@tjholowaychuk @Rich_Harris @kentcdodds @_developit @jaredpalmer @TheLarkInn Being the front package this gives us a window into the most common issues people run when making React projects. We see the big picture that individual projects might not see as easily. That helps understand ecosystem health.", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 21:18:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953013349725372420", "body": "@tjholowaychuk @Rich_Harris @kentcdodds @_developit @jaredpalmer @TheLarkInn For us it\u2019s actually a good thing (even if a bit frustrating). We *want* to shield people from webpack/babel/jest bugs and plug the holes when we can. Whether you want it or not depends on whether you\u2019re fostering an ecosystem.", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 21:17:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953012455457939457", "body": "RT @housecor: \"I've heard from several people that they've consolidated their companies tool dependencies into a single package and this wo\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 21:14:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953009972199264257", "body": "@kentcdodds @Rich_Harris I know it\u2019s not 100% the same because tools tend to be much more declaratively configurable then other libraries. But ultimately a tool is just fn(options), and just like fn() can call fn1() and fn2(), a tool can abstract over other tools if it brings value.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 21:04:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "953008541702479873", "body": "@kentcdodds @Rich_Harris Same argument could be applied to libraries. When you use debounce() from npm you don\u2019t learn how it works and don\u2019t gain the expertise in writing async code. Arguably debounce is at least \u201ccomplete\u201d so you don\u2019t often need to tweak it, but larger libs aren\u2019t.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 20:58:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952995856332017665", "body": "RT @jaredpalmer: Introducing After.js\n\nA Next.js-like framework for server-rendered React apps built with React Router 4\n\n\u269b\ufe0f React server-s\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 20:08:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952989686288535552", "body": "@wesbos @MrAhmadAwais @addyosmani @swyx @reactjs I\u2019d say this is one of the goals: you keep using the tool the same way, it just gets better over time", "favoritedCount": 25, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 19:43:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952987480931864577", "body": "@wesbos @MrAhmadAwais @addyosmani @swyx @reactjs Not planning any updates that would change how getting started works", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 19:34:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952984998386241537", "body": "@MrAhmadAwais @addyosmani @swyx @wesbos @reactjs We have a bunch of stuff planned for 2.0. Some may fall off the radar but we already have Babel 7, Jest 22, babel-preset-env for node_modules, and want to add Workspaces support + opt-in Sass and CSS Modules.", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 19:25:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952951984037990401", "body": "Prettier supporting no-semi style is such a lost opportunity. We could\u2019ve had a fork called Pettier.", "favoritedCount": 674, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 17:13:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952894070367686659", "body": "@kentcdodds @zeithq Lately I\u2019ve been saying \u201ctoolkits\u201d \ud83d\ude02", "favoritedCount": 8, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 13:23:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952893876049719296", "body": "RT @nzgb: What can't Next.js do? At a glance, it seems like a pain-free way of quickly setting up a universal-rendering React app that's no\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 13:22:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952890255920771072", "body": "@jaffathecake @boubiyeah @acdlite Are you familiar with controlled inputs in React?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 13:08:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952886748396351488", "body": "Spotify \u201cDiscover Weekly\u201d is legit, didn\u2019t disappoint", "favoritedCount": 264, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 12:54:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952875321405124608", "body": "@Kosai106 That\u2019s one of the reasons some people prefer to use action type constants.", "favoritedCount": 35, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 12:09:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952865602892369920", "body": "@jaffathecake @acdlite Controlled inputs need to flush synchronously, else the value gets out of sync. Let\u2019s follow up in an issue if you\u2019re interested? A bit difficult to discuss here", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 11:30:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952865077547405313", "body": "@jaffathecake @acdlite For cases when you really need it you can always use rAF yourself and flush during its callback. That is only beneficial in some scenarios (animation) because it\u2019s exact same amount of blocking work as doing an update synchronously. So it doesn\u2019t help that much, and has pitfalls.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 11:28:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952864454798118912", "body": "@jaffathecake @acdlite As for rAF, it doesn\u2019t play very well with browser stuff like inputs. We need to flush some updates immediately during the event. At that point we\u2019re back to talking about priorities.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 11:26:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952864198240989184", "body": "@jaffathecake You can chat with @acdlite about mechanics of this, he\u2019s actively working on it.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 11:25:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952864103298682880", "body": "@jaffathecake Yes, we use a concept of \u201cexpiration\u201d. Updates coming from interactive events get very short expiration time (must flush soon), network events get more time (can wait). Based on that we decide what to flush and what to time-slice.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 11:24:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952863521351655424", "body": "@jaffathecake Right now the biggest blocker to this work is that some APIs aren\u2019t exactly async-compatible. We\u2019re working on fixing that here. https://t.co/EbsaWTwqVu", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 11:22:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952863184821596161", "body": "@jaffathecake So expect more changes regarding this in the next versions this year. The \u201calways use rAF\u201d strategy is too na\u00efve and we likely won\u2019t be doing that though.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 11:21:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952862930156052480", "body": "@jaffathecake We are also looking at asynchronous rendering by default. But rAF doesn\u2019t really help much if the rendered tree is large. Instead we want to split non-critical updates in chunks using rIC until they\u2019re ready to be flushed.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 11:20:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952862554191290368", "body": "@jaffathecake Not currently. We do batching between different setState()s within one event handler (everything is flushed when you exit it). For many cases this works well enough and doesn\u2019t have pitfalls of using rAF for every update.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 11:18:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952850929686077440", "body": "RT @acemarke: This is a great comment explaining why a bundler like Webpack is useful, aimed at JS devs who are used to just adding some &lt;s\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 10:32:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952711496437559296", "body": "@trevorbrindlejs (To clarify, 1.1.0 is the version number for react-scripts as the CLI version is irrelevant for most scenarios) Thanks!", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 01:18:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952711133386936320", "body": "RT @trevorbrindlejs: I authored two new features in create-react-app 1.1.0! https://t.co/SEj5sdSolP #reactjs #OSS \ud83c\udf89", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 01:16:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952696304941043713", "body": "@Fraize I think Elm\u2019s \u201cupdaters\u201d aged the best", "favoritedCount": 34, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 00:17:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952696013894152194", "body": "@cyclopslabs @reactjs I think that was @sophiebits \ud83d\ude42 https://t.co/zZj8gyKZAZ", "favoritedCount": 23, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 00:16:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952694983500451840", "body": "@dinosaurlord @reactjs What were the worst parts?", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 00:12:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952694339683127297", "body": "@Fraize The initial naming was even worse, we called them \u201cstores\u201d \ud83d\ude44", "favoritedCount": 28, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Mon Jan 15 00:10:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952678102173351936", "body": "@FezVrasta @TheLarkInn @Jhnnns Haha, that\u2019s exactly the kind of question I was hoping to avoid by not making a decision. \ud83d\ude42 We don\u2019t encourage Sass anywhere, but we can\u2019t do anything about its popularity. People want it \u00af\\_(\u30c4)_/\u00af", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 23:05:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952675170052960256", "body": "@boriscoder Oh yeah, I don\u2019t really care about syntax (can\u2019t stop people from using what they want), just about the downsides for users who don\u2019t want it. JS version seems promising although I\u2019m a bit skeptical about performance.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 22:53:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952672777932328960", "body": "okay https://t.co/xqLiJMzLsP", "favoritedCount": 16, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 22:44:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952671498623430656", "body": "(AFAIK the reason it happens is because Yarn doesn\u2019t produce some metadata that npm requires to verify integrity, so it can\u2019t recover. It\u2019s possible that either manager could fix this, although fixes could hurt performance.)", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 22:39:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952671210529271809", "body": "Did you know that running \u201cnpm install &lt;something&gt;\u201d over Yarn-produced tree often messes it up? Not blaming anyone, but I just learned this about a week ago. Worth considering especially for tools that try to auto-install something for the user.", "favoritedCount": 200, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 22:38:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952666488485416960", "body": "@alexeyraspopov Yea", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 22:19:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952662734839140352", "body": "@tourismgeek @TheLarkInn @Jhnnns (especially this paragraph; I\u2019m giving up on others) https://t.co/Yts0ZGmfgY", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 22:04:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952662426528505859", "body": "@tourismgeek @TheLarkInn @Jhnnns https://t.co/UZO8uMfyly", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 22:03:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952660799868358656", "body": "@dmitriid I just mean regular JS + CSS files", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 21:56:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952659216510144514", "body": "@dmitriid I didn\u2019t compare it to CSS-in-JS", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 21:50:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952658716301647880", "body": "Wrote up a proposal for changes we\u2019d need in sass-loader to include it in Create React App \ud83e\udd17 @TheLarkInn @Jhnnns Whatcha Think About That \n https://t.co/jfV4IKddbv", "favoritedCount": 113, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 21:48:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952651696131510272", "body": "@spencerbeggs tmpjusttestnevermindme@2.0.0", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 21:20:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952650036650921985", "body": "@spencerbeggs Conceptually yes, but I wonder if that\u2019s technically true. All I\u2019m interested in is whether I can silence npm/yarn peerDep warning from my dependency in case I know what I\u2019m doing", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 21:14:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952645434719293443", "body": "@stevensacks Thanks, this helps!", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 20:55:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952644558546001920", "body": "Do optionalDependencies satisfy peerDependencies?", "favoritedCount": 12, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 20:52:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952643731546693632", "body": "@dagda1 I\u2019m not advocating CSS-in-JS or any particular approach, I\u2019m just puzzled by how popular nesting seems to be. Your examples help, thanks", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 20:48:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952641467557740544", "body": "@dagda1 Yes because it simplifies patterns that I actually use. I\u2019m trying to understand what people actually use from Sass because in my experience components replace most of that (except variables).", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 20:39:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952641147784126465", "body": "@spencerbeggs How many levels do you nest? This response is common but honestly it\u2019s baffling to me. I can\u2019t imagine why you\u2019d want to nest more than two levels. https://t.co/oCHb9leXAX", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 20:38:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952641017706139653", "body": "@davecranwell How many levels do you nest?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 20:38:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952640918049390592", "body": "@mknepprath How are you using nesting? https://t.co/qgGs8v0IKD", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 20:37:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952640778110689281", "body": "@owenrumney Why are they useful if you have components?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 20:37:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952640704609693698", "body": "@coderah Why is nesting selectors in components useful? If every component is isolated, you\u2019d usually want one or (rarely) two levels of nesting most.", "favoritedCount": 11, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 20:36:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952640127410548741", "body": "Is it mostly a matter of familiarity / integrating existing code?", "favoritedCount": 22, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 20:34:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952639875693600768", "body": "Is it really that much better than vanilla CSS in a componentized application? What features are you using beyond variables? Why?", "favoritedCount": 59, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 20:33:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952639729777954816", "body": "Why do people love Sass so much? What I see when considering integrating it: segfaults that drag for months with no solution (https://t.co/JazCmdDakE), native crashes (https://t.co/FI5RzmZhdH), wrong binaries (https://t.co/xsc6QgbkuK), path issues (https://t.co/4flMs9b9wJ).", "favoritedCount": 253, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 20:33:05 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952616908678975493", "body": "@peternycander @_zurfyx @reactjs @UglifyJS (However, we\u2019re also landing support for specifying target browsers both for development and production, so if you specify the most recent version for dev, you run a minimal number of transforms)", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 19:02:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952616688654209025", "body": "@peternycander @_zurfyx @reactjs @UglifyJS Always. Nope. We\u2019ve heard clear that users prefer this problem solved despite slower builds. However, we landed other improvements that should somewhat offset the perf hit (parallelization via thread-loader).", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 19:01:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952579604744753152", "body": "@brian_d_vaughn There are cases when merge is too hard. For example if there was a big structural change in one of the branches but not the other. Rebase helps figure out how to \u201creapply\u201d that change manually, and then the rest can merge more happily.", "favoritedCount": 7, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 16:34:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952575034224267270", "body": "Merge is easier when you know what the result should look like. Rebase is easier when you know what the history should look like.", "favoritedCount": 407, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 16:16:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952573435640598528", "body": "(This is why there\u2019s no right answer, what works best depends on the nature of the divergence and how it occurred over time)", "favoritedCount": 112, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 16:09:39 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952572767584604160", "body": "Merge vs rebase tradeoff:\n\nMerge: \u201cTell me your version of the story, I\u2019ll tell you mine, and then we\u2019ll try to piece something together out of them\u201d\n\nRebase: \u201cTell me your version of the story, and I will interrupt your every sentence to tell you where you\u2019re wrong\u201d", "favoritedCount": 3027, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 16:07:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952559527429361664", "body": "@codetheorist Can you point me to a high level overview of its design?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 15:14:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952557057709879297", "body": "Meanwhile: working around bugs In the underlying tools so our users don\u2019t have to \ud83d\ude0a https://t.co/hd0u33k6IJ", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 15:04:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952526228820561920", "body": "@Etienne_dot_js I think it\u2019s doable, wanna raise an issue to discuss? You\u2019d need to specify some scenarios where you think this would be useful", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 13:02:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952525014758195200", "body": "@Etienne_dot_js Splitting eject into two commands and making sure they both keep working is significantly increasing complexity", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 12:57:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952519677271511040", "body": "@Etienne_dot_js In theory we could do this, in practice I\u2019m not sure it\u2019s worth the effort", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 12:36:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952515905073876992", "body": "@Etienne_dot_js When it breaks it\u2019s very hard to debug because you need to have both old and new configs to understand what was supposed to happen and what happened. Always a problem with monkeypatching, but more so when you don\u2019t have any guarantees about the target.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 12:21:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952515585736310786", "body": "@Etienne_dot_js The problem with this proposal is it\u2019s incompatible with semver, unless you expect us to release a major bump for every config change. The reason we could make so many changes without majors is precisely because config is locked down.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 12:19:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952515237131030528", "body": "@marcusnielsen If it\u2019s simple to maintain, sure. But I\u2019m skeptical of copy-paste \u201cbatteries included\u201d solutions", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 12:18:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952515035741544449", "body": "@iljuschin Sure, and you can dig into reusable toolkits the same way, except you won\u2019t have to immediately maintain one when you start a project", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 12:17:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952510006548627461", "body": "I wouldn\u2019t word it as strongly but I agree with the overall premise. Whether you agree with choices made in Next.js/Gatsby/Razzle/CRA/Neutrino or not, let\u2019s stop creating \u201cboilerplates\u201d and instead make reusable versioned toolkits. https://t.co/CXvB3ilC2V", "favoritedCount": 232, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 11:57:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952509190257430529", "body": "@MrAhmadAwais @mweststrate Why doesn't it work?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 11:54:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952467011040415744", "body": "@SuperG4bry Add some tests? \ud83d\ude42 Other than that no better way than publishing and trying to use it", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 09:06:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952466793808977921", "body": "RT @_zurfyx: Starting from the next version of create-react-app @reactjs , dependencies will be transpiled. No more @UglifyJS issues when u\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 09:05:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952461866554613760", "body": "@BlancosWay It\u2019s always been on my GitHub", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 08:46:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952460774114562048", "body": "@estejs @reactjs @flowtype @calebmer @sebmarkbage PureComponent is \u201coptional\u201d in the sense that you need to opt into it. Flipping the default means creating a lot of confusion for dubious gain (when you need it you can always use it already).", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 08:41:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952374847895691264", "body": "@respondandreact I dunno, maybe they genuinely consider trolling maintainers their life\u2019s work", "favoritedCount": 14, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 03:00:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952367603967758336", "body": "Some people are fascinating https://t.co/RcIX3oDzPU", "favoritedCount": 268, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 02:31:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952363725469646848", "body": "@jdcauley @Yurick_ Feedback appreciated in any case \ud83d\ude42", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 02:16:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952358708360695809", "body": "@jdcauley @Yurick_ AFAIK you can say the same about literally every other React-related project except CRA itself", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 01:56:24 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952357690025611264", "body": "@jdcauley @Yurick_ Sass instructions are here: https://t.co/jf9fqyTQyf. There are plans to make it more seamless in the future major given that Sass doesn\u2019t seem to be going away.", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 01:52:21 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952343430654578688", "body": "Wow, this is an amazing interactive illustration of how Babel transforms work https://t.co/3JXO2whPPM", "favoritedCount": 460, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 00:55:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952343006258089984", "body": "RT @left_pad: Figured I'd post it at some point \ud83e\udd14: looking for help with a roadmap for Babel (some things I thought of): https://t.co/DgrQZ\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 00:54:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952336439454380032", "body": "@rauschma @sindresorhus Given all the feedback we\u2019ve received so far in hundreds of replies and issues, I\u2019m skeptical of any strategy that requires npm module producers to do anything (even specifying a version)", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 00:27:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952336226513752064", "body": "@rauschma @sindresorhus So seems like ensuring -env is always safe to apply + good caching strategy (potentially crowdsourced precompiled package cache?) is enough, nothing to do on the producer side", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 00:27:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952335917569708032", "body": "@rauschma @sindresorhus I don\u2019t think a separate entry point works tbh unless it\u2019s per language version (and I don\u2019t see package authors bothering to compile for multiple versions given the reluctance to compile even for one).", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sun Jan 14 00:25:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952308841185718274", "body": "@left_pad @TheLarkInn @sindresorhus @loganfsmyth Just to confirm, do we know for sure -env can be safely applied to any code in 7 and not break it?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 22:38:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952307507837497344", "body": "@sindresorhus I\u2019m sorry for all the pain it caused you, that linked issue list on your ama is sad", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 22:32:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952305554009001984", "body": "@sindresorhus We\u2019re fixing this https://t.co/kVo3xTCkuV", "favoritedCount": 28, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 22:25:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952295466246594560", "body": "@appsforartists @BenLesh @TheLarkInn @auchenberg It doesn\u2019t have to be one or the other; you can share things that should be shared, but compile your app into oblivion", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 21:45:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952294433344643072", "body": "@BenLesh @TheLarkInn @auchenberg Before native modules becomes the source it will become a target anyway, and a target is always more efficient because we always know more at build time", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 21:41:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952294148178087938", "body": "@BenLesh @TheLarkInn @auchenberg My two cents: I have no doubt we\u2019ll move to more sophisticated bundling approaches that are smarter than status quo (and maybe make webpack obsolete). But \u201cno need to bundle\u201d IMO is idealistic red herring with romantic appeal but not practical for larger apps", "favoritedCount": 23, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 21:39:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952278064859402241", "body": "@alippai @v8js That would be great to confirm", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 20:35:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952276190647279616", "body": "@alippai That was my thought but I think it still affects the parsed code size? Since that\u2019s one of the most common statements", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 20:28:30 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952275841903362048", "body": "To be clear, I know they\u2019re not equivalent, but seems like everybody\u2019s been happy with how Babel handles it by default.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 20:27:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952275423945256960", "body": "@mattdesl I don\u2019t mean literally replacing it with var, but doing the \u201cright thing\u201d with the assumption that the code doesn\u2019t suffer from TDZ problems. (Like Babel does by default.)", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 20:25:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952275188804091905", "body": "@sangster We\u2019ve been happy with Babel doing it for us though?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 20:24:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952274081205948416", "body": "Users of uglify-es, can you enlighten me what\u2019s supposed to happen to `const`? `var` is obviously shorter so is there any reason it doesn\u2019t compile down?", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 20:20:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952268556972027904", "body": "@iammerrick @sebmarkbage What we have now was really driven by the need to get something working rather than a redesign of the workflow. For the workflow we need feedback from people actually using this.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 19:58:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952268384225366027", "body": "@iammerrick @sebmarkbage File an issue? We can do a lot of things but need to discuss what would be most valuable in real workflows.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 19:57:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952263388624752645", "body": "@Mtpjr88 @EmilOberg @reactjs @reactnative Nothing wrong with asking and it\u2019s a totally legit question \ud83d\ude42 I think on the whole React community finds less value in that since creating a minimal component is just three lines", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 19:37:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952262948990398464", "body": "@elrumordelaluz Looks ejected to me", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 19:35:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952262855839141888", "body": "@petergodek Nah that\u2019s good, give me a link", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 19:35:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952255144556683265", "body": "@Mtpjr88 @EmilOberg @reactjs @reactnative Haha no we actually get this feedback a lot. There are some tools that do scaffolding and are compatible with CRA. I don\u2019t personally see much use for this but many folks do.", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 19:04:53 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952253017746759682", "body": "@pechorin48 You haven\u2019t done \u201cnpm run eject\u201d (term specific to CRA)", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 18:56:26 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952248179478745089", "body": "What are the largest open source projects using Create React App (un-ejected)? The more source files and dependencies the better. Need to verify we aren\u2019t making build perf worse in the next major.", "favoritedCount": 150, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 18:37:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952252153757949953", "body": "@danlousqui Yeah, hard to guess the size this way though", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 18:53:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952246318021447680", "body": "@Alex_D_Alonso I watch pretty much everything with subtitles still", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 18:29:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952203658015531009", "body": "Me watching The Wire and discovering the origin of this GIF https://t.co/3ybsSo4xOv", "favoritedCount": 350, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 15:40:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952200932384804864", "body": "@ken_wheeler Render props", "favoritedCount": 27, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 15:29:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952191304376700928", "body": "@gamuez That\u2019s what we ended up using: https://t.co/d6owavUmlg", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 14:51:12 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952198901636960256", "body": "@MrAhmadAwais @mweststrate Hmm I think so, not sure though. I haven't used that option, but Yarn does hoist by default.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 15:21:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952191063816622080", "body": "@MrAhmadAwais @mweststrate Not sure what you mean by lock-in in this example. Your users can do anything. But for development of your CLI itself, yes. I think it\u2019s OK to require contributors to use Yarn but I can see if that\u2019s not something you\u2019d like.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 14:50:15 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952190779467948033", "body": "@MrAhmadAwais @mweststrate Well for example installing a library inside a package folder in Lerna-controlled monorepo breaks it. Whereas Yarn+Lerna does the right thing. See here: https://t.co/0z0xkwqP1X https://t.co/7TLCeOZZu3", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 14:49:07 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952168429712224258", "body": "@MrAhmadAwais @mweststrate Enable Workspaces (Lerna supports that) and it will work better", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 13:20:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952162813782437888", "body": "@emmenko I don\u2019t see how it would help. The problem happens when user *wants* to install a different version of webpack/eslint/jest than react-scripts needs. We need to tell the user it\u2019s a bad idea and ask them not to do it.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 12:57:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952162393701978118", "body": "@FPresencia @npmjs @yarnpkg I don\u2019t think it\u2019s the same issue. Here both yarn and npm install the right version but npm hoists it too high causing the problem.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 12:56:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952013123963314176", "body": "Context: https://t.co/7WkzIR9jNi", "favoritedCount": 17, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 03:03:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "952010025802915840", "body": "@TheOperatore Yarn handles this correctly btw. npm tried to fix this in 5.x but that broke existing use cases (from what I\u2019ve heard) so they had to revert the fix for now.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 02:50:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951978064996691969", "body": "@TheOperatore html-webpack-plugin is compatible with both. This doesn\u2019t make it safe though. Because if it\u2019s hoisted, it will import a different webpack version than the one react-scripts is using it with.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Sat Jan 13 00:43:52 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951954906709217280", "body": "RT @4: People say I own this account and never use it. That's not true.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 23:11:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951946414480863232", "body": "@shun @mariogomezmtz @reactjs @emberjs So instead the goal is to plug the hole in the \u201cgetting started\u201d experience where previously people would give up before they have something running.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 22:38:06 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951946204698566656", "body": "@shun @mariogomezmtz @reactjs @emberjs Yeah, I understand. I\u2019m trying to provide perspective from my side: it wasn\u2019t intended to be \u201cthe Ember CLI\u201d of the ecosystem. That\u2019s very hard precisely because people *want* to use React with such different setups that they\u2019re hardly unifiable at high level.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 22:37:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951945030847139840", "body": "@shun @mariogomezmtz @reactjs @emberjs That\u2019s fair, that said we were very picky about those alternatives in README. Out of hundreds, those are the ones we think are self-sustainable and we think they\u2019re just as safe to rely on as CRA.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 22:32:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951944725153615872", "body": "@shun @mariogomezmtz @reactjs @emberjs I see CRA more as a starting step than the future.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 22:31:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951940353535496192", "body": "@n0ther_guy Hoisting is when a package manager turns a tree like\n\n|- a\n|_ |- b\n|- c\n|_ |- b\n\ninto a tree like\n\n|- a\n|- b\n|_ c\n\nbecause there\u2019s no need to duplicate `b` twice on the disk if both `a` and `c` would \u201csee\u201d it anyway.", "favoritedCount": 28, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 22:14:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951932542378225666", "body": "Now I\u2019m surprised npm/yarn works at all", "favoritedCount": 118, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 21:42:58 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951931842273398784", "body": "Today I realized: hoisting a package is not safe if another version of its peerDependency exists above:\n\n|- webpack@1.x\n|- react-scripts\n|- |- webpack@2.x\n|- |- html-webpack-plugin &lt;-- unsafe to hoist", "favoritedCount": 112, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 21:40:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951921433969594368", "body": "@TheLarkInn \"extreme production\" is still conceptually \"production\". IMO two modes + extra plugin/preset/switch.", "favoritedCount": 18, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 20:58:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951883160836505601", "body": "RT @mjackson: Finally got around to merging my doc about Render Props into the official @reactjs docs on https://t.co/zJQ641BKfN \ud83c\udf89\n\nSee it\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 18:26:45 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951823422664912896", "body": "@shun @mariogomezmtz @reactjs @emberjs There are some benefits CRA provides thanks to its strictness: painless toolchain upgrades and reducing the build bug surface area (since you can\u2019t \u201cmess it up\u201d yourself). But it is a tradeoff for sure.", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 14:29:22 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951823090111086593", "body": "@shun @mariogomezmtz @reactjs @emberjs It doesn\u2019t have to be one or the other though. You still have the freedom to choose solutions with varying degrees of freedom \ud83d\ude42", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 14:28:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951822899136131072", "body": "@shun @mariogomezmtz @reactjs @emberjs The goal of CRA isn\u2019t to cover all use cases. I would say its goal is to provide a solution with *least* \u201cfreedom\u201d to offset the fragmentation prevalent in the ecosystem (which you refer to).", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 14:27:17 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951822429021667328", "body": "@shun @mariogomezmtz @reactjs @emberjs \u201cFreedom\u201d is two sided. Three years ago CLI didn\u2019t exist and people couldn\u2019t even get started. You have a choice now wrt how much freedom you\u2019d like. Can always eject, start from scratch, use a more configurable tool etc.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 14:25:25 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951821995016155136", "body": "@wSokra Yeah, I\u2019m saying I\u2019m happy I saw a message that explains it \ud83d\ude42", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 14:23:42 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951807982421135362", "body": "@shun @mariogomezmtz @reactjs @emberjs Sorry, not sure I understand what you mean by new and old in this context. Default CRA template and Redux examples use the same syntax", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 13:28:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951802705122680832", "body": "Webpack has come a long way. Remember when this would crash with an obscure message, or silently did something unintended? https://t.co/Q0PgFUvpZJ", "favoritedCount": 247, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 13:07:03 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951794052105728001", "body": "@sebastienlorber Reasons not to add: breaks every tool that assumes Node resolution\nWorkarounds: (temporary one) put NODE_PATH=src in your .env file, (future) we\u2019ll properly support Yarn Workspaces", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 12:32:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951790343858610176", "body": "@mehedih_ https://t.co/NDMj9hUMyB", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 12:17:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951790343858610176", "body": "@mehedih_ https://t.co/NDMj9hUMyB", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 12:17:56 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951789745016893440", "body": "@shun @mariogomezmtz @reactjs @emberjs That\u2019s really weird, 9 out of 11 examples are made with CRA and match its template: https://t.co/KyScyh3hdK", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 12:15:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951788640690212864", "body": "RT @varjmes: If you haven't read it, or want to read my post on React Fragments again but in a different place: my blog is now on the compa\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 12:11:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951788425044258816", "body": "@mehedih_ If they expose it on some global maybe. :-) you could also theoretically pretend to be React DevTools by defining its global hook", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 12:10:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951787588754591745", "body": "@mehedih_ Not sure what you mean by \u201cinjected\u201d. React code is just code. You can set a global from it, then access that global?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 12:06:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951787238995693569", "body": "@moaazsidat Both React and Create React App repos", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 12:05:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951787021152018432", "body": "@c0cl3nn0nk37 If you have flowconfig at the root should work OK", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 12:04:43 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951786883281022976", "body": "@joshduck Both. (But Lerna works great in \u201cWorkspaces\u201d mode.)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 12:04:10 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951786591009329152", "body": "@shun @reactjs @emberjs Those are bad suggestions IMO, you want to solve this at the package rather than bundling level. We will include diagnostics and documentation for this issue in next major.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 12:03:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951786144907366401", "body": "@shun @reactjs @emberjs I know that, thanks \ud83d\ude42 But we don\u2019t want to spawn an ecosystem and basically turn into another webpack. Instead we plug the hole until Webpack &amp; co become easy to use.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 12:01:14 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951635714680213504", "body": "Yarn Workspaces made my life better. Seriously. If you haven\u2019t tried it give it a chance. That rare feeling when a tool just works as you\u2019d expect (at least for my use cases).", "favoritedCount": 352, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 02:03:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951632693124648961", "body": "@shun @reactjs @emberjs What did you want to configure? We link to more configurable alternatives right in the README. https://t.co/8sXc1XcZPZ", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 01:51:29 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951632355462123520", "body": "@mariogomezmtz @shun @reactjs @emberjs Did you look at Redux repo itself? It has a few self-contained examples in the \u201cexamples\u201d folder.", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 01:50:08 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951631864539828225", "body": "@necolas @tomdale For example sending LinkedIn invitations", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 01:48:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951631444480331776", "body": "@paularmstrong The only thing I\u2019m not a fan of is the menu being in the top right corner while the feed is on the left. These are the only two UI elements I interact with, why can\u2019t they align?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 01:46:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951620692713394178", "body": "Me waiting for CI https://t.co/MEkHvlfAch", "favoritedCount": 194, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 01:03:48 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951613906325327872", "body": "Wow, Twitter Lite just got a little bit desktop-ey on the desktop!", "favoritedCount": 79, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 00:36:50 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951607346488401923", "body": "This means we\u2019ll soon release react-scripts@2.0-alpha, but it\u2019s going to stay as alpha for a while until underlying tools get stable releases.", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 00:10:46 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951607039595372544", "body": "Babel 7 merged into CRA next branch! Thanks @c8hoang @existentialism @timer150  https://t.co/8tEqcgphNu", "favoritedCount": 91, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 00:09:32 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951605532187643910", "body": "Current status https://t.co/fMXg9KHJnT", "favoritedCount": 1237, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Fri Jan 12 00:03:33 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951561358872629248", "body": "RT @dan_abramov: Woke up to @timer150 fixing end-to-end test flakiness in Create React App \ud83d\udc4f Background: we have a Lerna monorepo and used\u2026", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 21:08:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951555712160882689", "body": "I just learned what \u201cthrow in the towel\u201d means. For some reason I always thought it had something to do with throwing up \ud83d\ude2c", "favoritedCount": 152, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 20:45:35 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951528391878037504", "body": "Where is https://t.co/5XRjMjIzVO", "favoritedCount": 5, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 18:57:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951511530016858112", "body": "Also interrupting is rude", "favoritedCount": 20, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 17:50:01 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951509640101224450", "body": "Shut up and show me the wait actually let\u2019s talk this through because it\u2019s not at all obvious how this should work and it makes sense to discuss this a bit more before rushing into the implementation", "favoritedCount": 82, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 17:42:31 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951506507983618048", "body": "@threepointone @mjackson @Sander_Spies Seems like the most common misconception about the project. Worth documenting?", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 17:30:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951504274823024640", "body": "@jonbharris That's what it's using, yes!", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 17:21:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951473275036733441", "body": "@NathanGloyn No", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 15:18:00 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951464769478938625", "body": "@NorbertdeLangen @timer150 Depends on what you want to do. For development / unit tests Workspace is great. But here we need to test project generation. Symlinks don\u2019t reproduce real results and can mess things up.", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 14:44:13 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951462965030551552", "body": "@NorbertdeLangen @timer150 What is?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 14:37:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951458724501245954", "body": "@bjankord @timer150 I don\u2019t think this solves the problem for transitive dependencies unless you\u2019re going to manually overwrite package.json of nested deps during CI (which we used to do, and didn\u2019t work very well)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 14:20:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951452362807349248", "body": "@mxstbr @JoshWComeau Yeah, for UMD you *know* the environment (since there's two bundles) so you can inline the right one", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 13:54:55 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951451878054924289", "body": "@JoshWComeau @mxstbr Yep, that won't help. You're right React assumes it exists.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 13:52:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951451270312873984", "body": "@lydia_hallie Tried different iOS versions?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 13:50:34 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951444498890022912", "body": "@JamesJefferyUK @ken_wheeler @mxstbr @mpjme No idea sorry", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 13:23:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951435357517737984", "body": "@JedWatson @reactjs I would probably render into a detached DOM node and read text from it, cache the result", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 12:47:20 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951435139371892736", "body": "@JedWatson @reactjs https://t.co/GsmTQvKotp (didn\u2019t end up implemented but fun to think about)", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 12:46:28 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951434218621554688", "body": "@statijebre Could you capture a video if you see this? Would be easier to report with an example.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 12:42:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951427674844680192", "body": "Solution: a local npm registry. https://t.co/kvcyVANVSK", "favoritedCount": 29, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 12:16:49 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951427300070916096", "body": "Woke up to @timer150 fixing end-to-end test flakiness in Create React App \ud83d\udc4f Background: we have a Lerna monorepo and used very complex hacks for integration testing of generated projects. Solution: run a local npm registry to simulate a publish \ud83d\ude01 https://t.co/ggNfS4PpFv", "favoritedCount": 133, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 12:15:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951251494589911040", "body": "@dugjohnson Probably (I guess offline mirror helps with this), I was hoping for the npm solution (since I wanted to test npm client)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 00:36:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951250599760232448", "body": "@jdalton \ud83d\ude0d\ud83d\ude0d\ud83d\ude0d", "favoritedCount": 19, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 00:33:11 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951250470135304192", "body": "RT @jdalton: Webpack 4 will work configless by default. Nice!\nhttps://t.co/VOU81i9nQN https://t.co/IINZVZoDuo", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 00:32:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951249019438804993", "body": "@jergason It\u2019s also fractally horrible", "favoritedCount": 28, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Thu Jan 11 00:26:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951239893023363072", "body": "@seldo @BenLesh To be clear what I'm saying is I wouldn't quite consider Rx to be a part of React ecosystem, at least not in the way Redux/RR/Apollo are", "favoritedCount": 9, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 23:50:38 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951238588456423424", "body": "@BenLesh @seldo Yeah, I honestly don't think that many React users also use Rx, might be wrong though", "favoritedCount": 3, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 23:45:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951230207175876609", "body": "@wSokra @TheLarkInn We literally just had somebody ask about this \ud83d\ude0d https://t.co/Z8d9yxyFKZ", "favoritedCount": 14, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 23:12:09 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951212651379609601", "body": "@bradwestfall @gatsbyjs Yes (I don't know if either of those use it)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 22:02:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951203484296269826", "body": "@bradwestfall @gatsbyjs (Which I wouldn\u2019t recommend any stable project to depend on right now. Way too many issues.)", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 21:25:57 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951202809000726529", "body": "@bradwestfall @gatsbyjs Maybe something wonky like react-hot-loader", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 21:23:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951202305063432192", "body": "@noel I want this to happen without making any changes to package.json, and to intercept transitive dependencies too.", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 21:21:16 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951158622163173376", "body": "@noel How do I do that locally on a CI assuming I don\u2019t actually want to run my own registry?", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 18:27:41 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951158292373540864", "body": "In other words I want npm to fetch a few packages (regardless of whose dependency they are) from a folder I prepared, but without changes to package.json.", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 18:26:23 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951158131148640257", "body": "Is there a way to run npm on CI but \u201credirect\u201d specific packages to their prepared versions?", "favoritedCount": 19, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 18:25:44 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951146868041568256", "body": "@lazjramos @reactjs https://t.co/h1BmsDFU6H", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 17:40:59 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951113922882555910", "body": "@Kelset @ericlewis @amsul_ @chrisnojima File a Chrome bug?", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 15:30:04 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951072327906848768", "body": "@dphilipcarney This talk might change your mind https://t.co/qcAhRBDWHL", "favoritedCount": 14, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 12:44:47 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951058043873234944", "body": "@imjakechapman We did it because createClass doesn\u2019t solve any fundamental issues with classes, but at least ES classes are a language feature we don\u2019t have to \u201cown\u201d. https://t.co/MLCGQ08Z30", "favoritedCount": 0, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 11:48:02 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951057685012762625", "body": "@imjakechapman The React community shifted to use ES6 classes because we converted docs to use them and moved createClass.", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 11:46:36 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951055853209247750", "body": "@siddharthkp @kentcdodds Give us some time, we\u2019re not ready to publish yet", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 11:39:19 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "951055686640783360", "body": "@imjakechapman @RyanTablada @ryanflorence As always when we change something we write in our blog. It\u2019s not removed, just moved into another package. https://t.co/P1LSIFdoIz", "favoritedCount": 1, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 11:38:40 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "950911432652181504", "body": "@sebmck @babeljs I used to resist 6to5 because I hated the name for some reason but it kept popping up everywhere and one day I had to try it!", "favoritedCount": 6, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 02:05:27 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "950911042300858369", "body": "@sebmck @babeljs Lol I forgot it was a thing", "favoritedCount": 4, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 02:03:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "950910035479154689", "body": "(Referring to libs popular in the React ecosystem that is)", "favoritedCount": 2, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 01:59:54 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "950909883964182529", "body": "I could imagine it diverging again in a year or two though. New tools and libraries are being built on the lessons from the popular ones. Plus React itself might open up new possibilities in library space that challenge today\u2019s dominant libs.", "favoritedCount": 10, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 01:59:18 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "950909463250251781", "body": "It was very important in the early period to let them all compete on equal footing. But I think the ecosystem longed for some consolidation, even if temporary.", "favoritedCount": 13, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 01:57:37 +0000 2018"}, {"userId": "70345946", "userName": "Dan_Abramov", "tweetId": "950908744979927040", "body": "We\u2019ve recently been trying to do a bit more curation in React docs, pointing to third-party libraries and tools when appropriate. I think it makes sense but curious if you disagree. https://t.co/U2LnKU9gOS", "favoritedCount": 74, "location": "London, England", "followers": 117924, "friends": 808, "timeStamp": "Wed Jan 10 01:54:46 +0000 2018"}]